<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on markruler</title>
    <link>https://markruler.github.io/categories/spring/</link>
    <description>Recent content in spring on markruler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 01 Mar 2020 10:58:10 +0900</lastBuildDate><atom:link href="https://markruler.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ThymeLeaf 알게 된 것들</title>
      <link>https://markruler.github.io/posts/spring/thymeleaf/</link>
      <pubDate>Sun, 01 Mar 2020 10:58:10 +0900</pubDate>
      
      <guid>https://markruler.github.io/posts/spring/thymeleaf/</guid>
      <description>Reference  Docs  java에서 반환된 객체 &amp;lt;div&amp;gt;[[${ model }]]&amp;lt;/div&amp;gt; 사용자가 로그인 인증을 하지 않았다면 : spring security &amp;lt;tag sec:authorize=&amp;#34;isAnonymous()&amp;#34;&amp;gt;&amp;lt;/tag&amp;gt; th:href &amp;lt;a sec:authorize=&amp;#34;isAnonymous()&amp;#34; th:href=&amp;#34;@{/login}&amp;#34; class=&amp;#34;btn&amp;#34;&amp;gt;Log in&amp;lt;/a&amp;gt; 날짜 포맷 &amp;lt;div class=&amp;#34;tt-col-value&amp;#34;&amp;gt;[[${ #temporals.format(board.createDate, &amp;#39;HH:mm&amp;#39;) }]]&amp;lt;/div&amp;gt; 3항 연산자 &amp;lt;span class=&amp;#34;tt-badge&amp;#34;&amp;gt; [[${ board.category } ? &amp;#39;common&amp;#39; : ${ board.category }]] &amp;lt;/span&amp;gt; 3항 연산자 &amp;lt;!-- 기본 표현법 --&amp;gt; &amp;lt;span class=&amp;#34;tt-badge&amp;#34;&amp;gt; [[${ board.category } ? ${ board.category } : &amp;#39;common&amp;#39;]] &amp;lt;/span&amp;gt; &amp;lt;!-- 단축 표현법 --&amp;gt; &amp;lt;span class=&amp;#34;tt-badge&amp;#34;&amp;gt; [[${ board.</description>
    </item>
    
    <item>
      <title>Web Socket 알게 된 것들</title>
      <link>https://markruler.github.io/posts/spring/web-socket/</link>
      <pubDate>Sun, 01 Mar 2020 10:58:10 +0900</pubDate>
      
      <guid>https://markruler.github.io/posts/spring/web-socket/</guid>
      <description>목차 {:toc}   Refereces  Spring guide Spring stomp와 SockJs를 통한 웹소켓 구현하기, 그리고 장,단점 Spring websocket chatting server : Stateless 적용을 위한 JWT 도입 webSocket으로 개발하기 전에 알고 있어야 할 것들 웹 소켓을 활용한 쪽지 알람 기능 WebSocket과 STOMP 연동 Spring WebSocket 소개  1. 개념 출처: Oracle
웹 소켓은 가장 성공적인 http 프로콜을 기반으로 하지만, http프로토콜과는 전혀 다른 프로콜이라고 생각하면 좋을것 같습니다. 특히, 기존 http프로콜은 연결-요청-응답-종료 반복된 작업을 계속 하는 문제가 발생됩니다.</description>
    </item>
    
  </channel>
</rss>
