<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 임창수</title>
    <link>https://markruler.github.io/posts/</link>
    <description>Recent content in Posts on 임창수</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <managingEditor>imcxsu@gmail.com (Im Changsu)</managingEditor>
    <webMaster>imcxsu@gmail.com (Im Changsu)</webMaster>
    <copyright>Im Changsu | Since 2020</copyright>
    <lastBuildDate>Fri, 21 Mar 2025 23:08:00 +0900</lastBuildDate>
    <atom:link href="https://markruler.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>네트워크 레이어</title>
      <link>https://markruler.github.io/posts/network/network-layer/</link>
      <pubDate>Thu, 20 Mar 2025 23:03:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/network-layer/</guid>
      <description>&lt;p&gt;&lt;strong&gt;OSI 모델&lt;/strong&gt;은 다양한 통신 시스템이 통신할 수 있도록 국제표준화기구(ISO)에서 만든 개념 모델입니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&#xA;각 계층(Layer)은 특정한 역할을 담당합니다.&#xA;이 글에서는 각 계층의 주요 기능과 특징을 살펴보겠습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;용어&#34;&gt;용어&lt;/h1&gt;&#xA;&lt;p&gt;먼저 공통 용어를 정리하며 시작하겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;1 계층은 영어로 Layer 1, 줄여서 L1이라고 부릅니다.&#xA;이 글에서도 글을 줄여 쓰기 위해서 물리 계층은 L1이라고 표기하겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;계층에서 처리하는 한 덩어리의 데이터 단위를 &lt;strong&gt;PDU&lt;/strong&gt;(Protocol Data Unit)라고 부릅니다.&#xA;PDU는 제어 정보를 포함한 헤더(header), 데이터 자체인 페이로드(payload)로 구성되어 있습니다.&#xA;웹 서비스를 개발해보셨다면 HTTP 헤더와 바디를 생각하시면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>비파괴 스캐너로 스캔한 책 PDF outline 만들기</title>
      <link>https://markruler.github.io/posts/pdf/pdf-editor/</link>
      <pubDate>Mon, 27 Jan 2025 23:15:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/pdf/pdf-editor/</guid>
      <description>&lt;p&gt;절판된 책이나 집에서 보관하던 두꺼운 책을 스캔해서 소장하고 싶은 경우가 있습니다.&#xA;그래서 저는 비파괴 스캐너를 구입해서 거의 10년 동안 책을 스캔해서 보관하고 있습니다.&#xA;하지만 펼칠 때마다 목차&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;가 없으면 발췌독하기 불편한데요.&#xA;오픈 소스 OCR 도구인 Tesseract를 이용해 PDF 목차를 만들어보겠습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;사적이용을-위한-저작권법&#34;&gt;사적이용을 위한 저작권법&lt;/h1&gt;&#xA;&lt;p&gt;먼저 저작권에 대해 확인해야 할 부분이 있습니다.&#xA;과연 책을 스캔해서 PDF로 만드는 것이 합법일까요?&#xA;인터넷에 검색해보면 도서관에서 빌린 책을 스캔하는 건 불법이라고 하는 경우가 많은 것 같습니다.&#xA;&lt;a href=&#34;https://www.law.go.kr/%EB%B2%95%EB%A0%B9/%EC%A0%80%EC%9E%91%EA%B6%8C%EB%B2%95/(20240828,20358,20240227)/%EC%A0%9C30%EC%A1%B0&#34;&gt;저작권법 제30조&lt;/a&gt;를 보면 다음과 같이 명시되어 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 대역폭으로 발생한 복합적인 시스템 장애</title>
      <link>https://markruler.github.io/posts/network/nfs-network-bandwidth/</link>
      <pubDate>Mon, 13 Jan 2025 19:13:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/nfs-network-bandwidth/</guid>
      <description>&lt;h1 id=&#34;배경&#34;&gt;배경&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IDC마다 다르겠지만 일반적으로 Inbound/Outbound 네트워크 트래픽 양에 따라 비용을 부과합니다. 제가 속한 팀은 트래픽 비용을 줄이기 위해 기존에 사설망(private network) 없이 내부 서버 간 통신하던 시스템에 사설망을 추가했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/nfs-network-bandwidth/static-file-server.png&#34; alt=&#34;static-file-server.png&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DB 백업을 위해 Veeam을 사용하다가 expdp와 RMAN을 사용하기 시작했고, NFS 마운트 된 스토리지에 백업본을 저장했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;문제&#34;&gt;문제&lt;/h1&gt;&#xA;&lt;p&gt;NFS 마운트 된 정적 파일들(이미지, 스크립트 파일)을 조회하는 서버에서만 부하가 발생하기 시작했습니다.&lt;/p&gt;&#xA;&lt;p&gt;확인해보니 DB 서버 회선에서 허용되는 네트워크 대역폭(1Gbps)의 100%를 사용하는 경우가 계속 발생했고, 덩달아 NFS 접근도 느려진 것입니다.&#xA;백업 기능을 변경한 후 발생했습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>일상에서의 Wireshark</title>
      <link>https://markruler.github.io/posts/network/wireshark/</link>
      <pubDate>Mon, 30 Dec 2024 18:38:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/wireshark/</guid>
      <description>&lt;p&gt;Wireshark란 오픈 소스 네트워크 프로토콜 분석기입니다.&#xA;GUI와 CLI 환경 모두에서 사용할 수 있으며, 네트워크 문제를 분석할 때 많이 사용됩니다.&#xA;플랫폼 또한 Windows, macOS, Linux 등 다양한 운영체제에서 사용할 수 있습니다.&#xA;GUI가 꽤 편하기 때문에 Windows나 macOS에서는&#xA;&lt;a href=&#34;https://www.wireshark.org/docs/man-pages/wireshark.html&#34;&gt;Wireshark&lt;/a&gt;를 사용하는 경우가 많습니다.&#xA;여기서는 CLI 환경에서도 사용할 수 있는&#xA;&lt;a href=&#34;https://www.wireshark.org/docs/man-pages/tshark.html&#34;&gt;TShark&lt;/a&gt;를 소개합니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;설치&#34;&gt;설치&lt;/h1&gt;&#xA;&lt;p&gt;Ubuntu 22.04에서 설치하는 방법을 소개합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# CLI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install tshark&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# GUI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install wireshark&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;wireshark&lt;/code&gt; 그룹 추가 후 컴퓨터를 재부팅해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>한국어를 지원하지 않는 게임의 비공식 한국어 패치 만들기</title>
      <link>https://markruler.github.io/posts/reverse-engineering/game-localization/</link>
      <pubDate>Mon, 16 Dec 2024 21:26:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/reverse-engineering/game-localization/</guid>
      <description>&lt;p&gt;스팀(Steam) 게임들은 PC에 파일이 설치되기 때문에 다른 플랫폼보다 게임 모드(Mod)나 패치 도구가 꽤 많습니다.&#xA;그래서 콘솔이나 고전게임보다 한국어 패치 제작 난이도가 쉽습니다.&#xA;한국어 패치 제작에 입문하기 좋은 플랫폼이라고 생각합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B2%8C%EC%9E%84-%EC%A0%80%EC%9E%91%EA%B6%8C%EA%B3%BC-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%8C%A8%EC%B9%98&#34;&gt;게임 저작권과 한국어 패치&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EA%B2%8C%EC%9E%84-%EC%97%94%EC%A7%84%EB%B3%84-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%8C%A8%EC%B9%98-%EC%A0%9C%EC%9E%91-%EB%B0%A9%EB%B2%95&#34;&gt;대표적인 게임 엔진별 한국어 패치 제작 방법&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%96%B8%ED%8C%A9-%EB%8F%84%EA%B5%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&#34;&gt;언팩 도구 사용하기&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%9C%A0%EB%8B%88%ED%8B%B0-unity&#34;&gt;유니티 (Unity)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%96%B8%EB%A6%AC%EC%96%BC-%EC%97%94%EC%A7%84-unreal-engine&#34;&gt;언리얼 엔진 (Unreal Engine)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B2%8C%EC%9E%84%EB%A9%94%EC%9D%B4%EC%BB%A4-gamemaker-studio-2&#34;&gt;게임메이커 (GameMaker Studio 2)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%A0%8C%ED%8C%8C%EC%9D%B4-renpy---pygame&#34;&gt;렌파이 (Ren&amp;rsquo;Py - PyGame)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B3%A0%EB%8F%84-godot&#34;&gt;고도 (Godot)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%A6%AC%EB%B2%84%EC%8A%A4-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81-reverse-engineering&#34;&gt;리버스 엔지니어링 (Reverse Engineering)&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#love2d&#34;&gt;Love2D&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B3%A0%EC%A0%84-%EA%B2%8C%EC%9E%84&#34;&gt;고전 게임&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%B2%88%EC%97%AD&#34;&gt;실시간 번역&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#xunity-auto-translator&#34;&gt;XUnity Auto Translator&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#mort-monkeyheads-ocr-realtime-translator&#34;&gt;MORT (MonkeyHead&amp;rsquo;s OCR Realtime Translator)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을거리&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;게임-저작권과-한국어-패치&#34;&gt;게임 저작권과 한국어 패치&lt;/h1&gt;&#xA;&lt;p&gt;먼저 저작권부터 이야기해야 할 것 같습니다.&#xA;엄연히 게임 파일을 수정하고 배포하는 것은 저작권법 위반입니다.&#xA;당연히 배포가 목적이라면 게임 개발사에 허락을 받아야 합니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>파일 시그니처와 파일 카빙: 바이너리 데이터가 이상한 문자열로 표현되는 이유</title>
      <link>https://markruler.github.io/posts/reverse-engineering/file-signature/</link>
      <pubDate>Tue, 10 Dec 2024 22:46:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/reverse-engineering/file-signature/</guid>
      <description>&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;이미지를 다운로드하면 응답 데이터로 이상한 문자열이 출력됩니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Youtube의 빈 썸네일 이미지를 다운로드 받습니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -L -o - https://i.ytimg.com/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;����JFIF���&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;�      !�&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;12ARaBqr��U�����������Qbd�������&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                                  ?�@��t��2�4�2�4��&amp;amp;`�f�b��*)��6�j�pVZ7՚�ތC:#uf��§���&amp;lt;�Z�W&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;�oMku�@��&amp;lt;\�O����H����M?^_��n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                             Z��W�:&amp;gt;vW���ҟ˃lr�h�8e�z*ڷ�zw�ie4�&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;e�C�#:=(���R�&amp;#39;F��0���e�&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                       �&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                        ���T���9�p�z�n/1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                                        �mSV��t�V�&amp;#34;&lt;/span&gt;��U �MI�;w��{O%��q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                     �[&lt;span style=&#34;color:#eedd82&#34;&gt;$x&lt;/span&gt;�7UV��⫫�t����=6�l�&lt;span style=&#34;color:#87ceeb&#34;&gt;`&lt;/span&gt;Si)u7&#x9;u�^z*UW��[���L�˭��a?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                                                            yn��mN���K��:��Z��&amp;amp;_&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                                                                                ���{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ����j�sj�j-T���U�^m�2&lt;span style=&#34;color:#87ceeb&#34;&gt;\�&lt;/span&gt;O7��M�{�V�v��Vݝz�ԞRe|8��?�4qL5�i��Z��V�2e�ʝ��&amp;#39;����%zV����v�8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.A.@��F���&amp;gt;�8]�JU��ҕj�z�Vb~��o)*�Ҍ������/�n���{m�Ա��vI��U�qoZ�+U��Z{�&amp;amp;Z��;��B�������k�XЏR�;*t��&#x9;|J�-���ku�Kk5_s�[8�te��d�kĮl��%�{]�i���ɩ{5}%Y���in��sYa��*�ɭ��߯ko&amp;gt;��� f��,[��ٷ�h��?X|Yg�j?��1���s��t��� HJ�&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                             �^�f�4��Vނu-m�շ�����&lt;span style=&#34;color:#87ceeb&#34;&gt;`&lt;/span&gt;l���^���U{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                            &amp;amp;H��%&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;�는 유니코드 replacement character(&lt;code&gt;U+FFFD&lt;/code&gt;)로, 해석할 수 없는 문자를 표시하기 위해 사용됩니다.&lt;/p&gt;&#xA;&lt;p&gt;이번엔 hexdump로 만들어주는 &lt;code&gt;xxd&lt;/code&gt; 명령어를 파이프로 이어보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>웹 페이지 응답 방법과 프레임워크</title>
      <link>https://markruler.github.io/posts/web/respond-web-page/</link>
      <pubDate>Sun, 24 Nov 2024 23:32:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/respond-web-page/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cgi-common-gateway-interface&#34;&gt;CGI (Common Gateway Interface)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssr-server-side-rendering&#34;&gt;SSR (Server-Side Rendering)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%84%9C%EB%B2%84-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%97%94%EC%A7%84&#34;&gt;서버 템플릿 엔진&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#csr-client-side-rendering&#34;&gt;CSR (Client-side Rendering)&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#spa-single-page-application&#34;&gt;SPA (Single Page Application)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#web-api-web-component&#34;&gt;Web API: Web Component&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#pwa-progressive-web-apps&#34;&gt;PWA (Progressive Web Apps)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssg-static-site-generation&#34;&gt;SSG (Static Site Generation)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cms-content-management-system&#34;&gt;CMS (Content Management System)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#micro-frontend-architecture-mfa&#34;&gt;Micro Frontend Architecture (MFA)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%95%84%EC%9D%BC%EB%9E%9C%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-island-architecture&#34;&gt;아일랜드 아키텍쳐 Island Architecture&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%9B%B9%EB%B7%B0webview---%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%95%B1%EC%97%90%EC%84%9C&#34;&gt;웹뷰(WebView) - 모바일 앱에서&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을거리&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cgi-common-gateway-interface&#34;&gt;CGI (Common Gateway Interface)&lt;/h1&gt;&#xA;&lt;p&gt;웹 서버와 외부 프로그램(애플리케이션) 간에 데이터를 주고받기 위한 인터페이스입니다.&#xA;웹 서버가 클라이언트(브라우저)로부터 요청을 받으면, CGI 프로그램을 호출하여 동적으로 콘텐츠를 생성한 뒤, 그 결과를 클라이언트에 반환합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Facebook은 경쟁사의 암호화된 모바일 앱 트래픽을 어떻게 가로챘을까?</title>
      <link>https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/</link>
      <pubDate>Thu, 12 Sep 2024 00:17:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://doubleagent.net/onavo-facebook-ssl-mitm-technical-analysis/&#34;&gt;How did Facebook intercept their competitor&amp;rsquo;s encrypted mobile app traffic?&lt;/a&gt;&#xA;| &lt;a href=&#34;https://x.com/haxrob&#34;&gt;HaxRob&lt;/a&gt;, 2024년 4월 14일&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;li&gt;각주는 역주입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;이 글은 페이스북(Facebook) 집단 소송에서 밝혀진 정보를 바탕으로 한 기술 조사입니다.&#xA;페이스북은 경쟁사의 정보를 얻기 위해 Onavo Protect 앱이 실행 중인 사용자 기기에서 암호화된 트래픽을 도청했었다는 이유로 재판이 진행 중입니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/onavo-facebook-ssl-mitm-technical-analysis/fbdark-1.webp&#34; alt=&#34;How did Facebook intercept their competitor&amp;rsquo;s encrypted mobile app traffic?&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;2024년 7월 28일 - 👋Hello &lt;a href=&#34;https://news.ycombinator.com/item?id=41090304&#34;&gt;Hackernews&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;현재 메타(Meta)를 상대로 한 집단 소송이 진행 중이며,&#xA;법원 문서에 따르면* 메타가 &lt;a href=&#34;https://en.wikipedia.org/wiki/Electronic_Communications_Privacy_Act&#34;&gt;도청법(Wiretap Act)&lt;/a&gt;을 위반했을 가능성이 있다고 언급되어 있습니다.&#xA;이 글에서의 분석은 &lt;a href=&#34;https://www.documentcloud.org/documents/24520332-merged-fb&#34;&gt;법원 문서&lt;/a&gt; 내용과&#xA;안드로이드(Android) 용 Onavo Protect 앱 패키지의 아카이브된 버전을 리버스 엔지니어링한 결과를 바탕으로 하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>일상에서의 스왑 메모리 (Swap Memory)</title>
      <link>https://markruler.github.io/posts/os/swap-memory/</link>
      <pubDate>Thu, 05 Sep 2024 21:13:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/os/swap-memory/</guid>
      <description>&lt;p&gt;&lt;strong&gt;스왑 메모리는 물리 메모리 용량이 부족할 때 사용되는 가상 메모리 영역&lt;/strong&gt;입니다.&#xA;고사양 작업 중 메모리가 부족해서 컴퓨터가 자주 멈춘다면 스왑 메모리를 늘려보는 것도 하나의 방법입니다.&#xA;이 글은 &lt;strong&gt;Ubuntu&lt;/strong&gt;에서 &lt;strong&gt;스왑 메모리를 file로 설정&lt;/strong&gt;하고, 나의 환경에 맞게 조정하기 위해 &lt;strong&gt;모니터링 하는 방법&lt;/strong&gt;을 설명합니다.&lt;/p&gt;&#xA;&lt;p&gt;먼저 스왑 메모리 설정을 확인합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapon --show&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정되어 있지 않다면 아무것도 출력되지 않습니다.&#xA;&lt;em&gt;Ubuntu 24.04 기준&lt;/em&gt;으로는 기본적으로 다음과 같이 &lt;code&gt;/swap.img&lt;/code&gt;가 설정되어 있습니다.&#xA;하지만 이 글은 설정되어 있지 않다는 전제로 진행합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IP로 지리적 위치(Geolocation) 찾기</title>
      <link>https://markruler.github.io/posts/network/ip-geolocation/</link>
      <pubDate>Thu, 29 Aug 2024 22:38:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/ip-geolocation/</guid>
      <description>&lt;h1 id=&#34;현상&#34;&gt;현상&lt;/h1&gt;&#xA;&lt;p&gt;약 10ms 응답속도가 예상되는 API에 500~700ms의 응답속도가 발생했습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;원인&#34;&gt;원인&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/ip-geolocation/ipapi-latency.png&#34; alt=&#34;ipapi Latency&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;해당 API에서는 국가별로 다른 정책을 적용하기 위해 IP로 국가 정보&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;를 조회하는 기능이 가장 먼저 수행됩니다.&#xA;국가 정보의 출처는 ipapi라는 유료 API 서비스와 IPInfoDB라는 무료 서비스입니다.&#xA;대략적인 코드는 다음과 같습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@Cacheable(value = CacheName.IPAPI_COUNTRY_CODE, key = &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;#ipAddress&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; Geolocation &lt;span style=&#34;color:#ff0&#34;&gt;findIsoCountryCode&lt;/span&gt;(&lt;span style=&#34;color:#f00&#34;&gt;final&lt;/span&gt; String ipAddress) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; (isPrivate(ipAddress)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;return&lt;/span&gt; Geolocation.korea();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;var&lt;/span&gt; ipapi = ipapiFeignClient.findGeolocationByIpAddress(ipAddress, IPAPI_ACCESS_KEY);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; (ipapi != &lt;span style=&#34;color:#f00&#34;&gt;null&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;return&lt;/span&gt; Geolocation.from(ipapi);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;var&lt;/span&gt; ipInfoDB = ipInfoDBFeignClient.findGeolocationByIpAddress(ipAddress, IPINFODB_ACCESS_KEY);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; (ipInfoDB != &lt;span style=&#34;color:#f00&#34;&gt;null&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;return&lt;/span&gt; Geolocation.from(ipInfoDB);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;return&lt;/span&gt; Geolocation.korea();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;문제는 API가 아무리 빨라도 해당 IP Geolocation 서비스에서 응답받는 데에 평균 약 500ms 정도 소요되었다는 것입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Traceparent 헤더로 클라이언트부터 서버까지 추적하기</title>
      <link>https://markruler.github.io/posts/web/traceparent-datadog/</link>
      <pubDate>Thu, 22 Aug 2024 18:00:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/traceparent-datadog/</guid>
      <description>&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;모니터링 도구를 확인해보니 며칠동안 특정 기능에 에러가 발생하고 있었습니다.&#xA;해당 에러는 알람 임계점(threshold)보다 낮아서 알람이 발생하지 않았고, 이용자는 버그 리포팅을 하지 않았습니다.&#xA;에러 로그를 확인해보니 서버에서는 유효성 검사를 하지 않았고, 클라이언트 앱에서는 유효하지 않은 파라미터를 전달했습니다.&#xA;서버에서 유효성 검사를 추가할 수 있겠지만, 클라이언트 앱에서의 잘못된 요청(bug)은 원인을 알 수 없었습니다.&#xA;클라이언트 이벤트는 연결되어 있지 않았기 때문입니다.&lt;/p&gt;&#xA;&lt;p&gt;또 다른 문제가 있었습니다.&#xA;서버에서는 정상적인 상태 코드와 함께 100ms 정도의 속도로 응답했지만&#xA;클라이언트에서는 4초 이상의 지연이 발생하거나 아래와 같은 Akamai 에러 페이지가 응답되었습니다.&#xA;그리고 모든 요청이 아닌 전체 요청의 5% 정도에서만 발생하고 있었습니다.&#xA;하지만 국가, Edge IP, User Agent, 요청 URL 등을 확인해봐도 특정 패턴을 보이는 것이 없어서 원인을 알 수 없었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Compose로 간단하게 Ollama 시작하기</title>
      <link>https://markruler.github.io/posts/ai/ollama-openwebui-docker-compose/</link>
      <pubDate>Wed, 31 Jul 2024 23:48:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/ai/ollama-openwebui-docker-compose/</guid>
      <description>&lt;h1 id=&#34;대형-언어-모델-llm-large-language-model&#34;&gt;대형 언어 모델 (LLM, Large Language Model)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;LLM은 방대한 양의 데이터로 사전 학습된 초대형 딥 러닝 모델&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;입니다.&#xA;이를 활용해 텍스트를 생성하거나 분류, 요약, 번역 등&#xA;다양한 자연어 처리 작업(NLP, Natural Language Processing)을 수행할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;일반적으로 &lt;strong&gt;700억 개(70 Billion) 이상의 파라미터를 갖는 모델을 LLM&lt;/strong&gt;이라고 합니다.&#xA;&lt;strong&gt;70억 개(7 Billion) 수준의 파라미터를 갖는 모델은 SLM&lt;/strong&gt;(Small Language Model)이라고 합니다.&#xA;이 사이에 &lt;strong&gt;중간 규모의 모델은 sLLM&lt;/strong&gt;(smaller Large Language Model)이라고 합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Ollama&lt;/strong&gt;는 오픈소스 LLM을 쉽게 실행할 수 있게 도와주는 도구입니다.&#xA;&lt;strong&gt;Open WebUI&lt;/strong&gt;는 ChatGPT 화면처럼 LLM과 대화 시 웹 UI를 제공하는 오픈소스입니다.&#xA;이 2가지 도구를 간단하게 사용해보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>유용한 구글 크롬(Google Chrome)의 기능</title>
      <link>https://markruler.github.io/posts/web/google-chrome/</link>
      <pubDate>Mon, 29 Jul 2024 00:51:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/google-chrome/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#chrome-urls&#34;&gt;Chrome URLs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%B6%81%EB%A7%88%ED%81%B4%EB%A6%BF-bookmarklet&#34;&gt;북마클릿 Bookmarklet&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%B6%81%EB%A7%88%ED%81%B4%EB%A6%BF&#34;&gt;유용한 북마클릿&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8A%A4%EB%8B%88%ED%8E%AB&#34;&gt;자바스크립트 스니펫&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%8F%84%EA%B5%AC-devtools&#34;&gt;개발자 도구 DevTools&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#performance-%ED%8C%A8%EB%84%90&#34;&gt;Performance 패널&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#network-%ED%8C%A8%EB%84%90&#34;&gt;Network 패널&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#network-log&#34;&gt;Network Log&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#network-conditions&#34;&gt;Network Conditions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#html-%EB%AC%B8%EC%84%9C-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0&#34;&gt;HTML 문서 생명주기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#network-%ED%8C%A8%EB%84%90%EC%97%90%EC%84%9C-har-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0&#34;&gt;Network 패널에서 HAR 가져오기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#sources-%ED%8C%A8%EB%84%90&#34;&gt;Sources 패널&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%A1%9C%EC%BB%AC-%EC%9E%AC%EC%A0%95%EC%9D%98-local-overrides&#34;&gt;로컬 재정의 (Local Overrides)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#override-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%A0%80%EC%9E%A5%ED%95%A0-%ED%8F%B4%EB%8D%94-%EC%A7%80%EC%A0%95&#34;&gt;Override 파일을 저장할 폴더 지정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#console&#34;&gt;Console&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%B0%B8%EC%A1%B0&#34;&gt;참조&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;chrome-urls&#34;&gt;Chrome URLs&lt;/h1&gt;&#xA;&lt;p&gt;크롬 URL은 Google Chrome 브라우저에서 설정 페이지나 특정 기능으로 빠르게 접근할 수 있게 해주는 내부 주소입니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;chrome://about/&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;크롬 URL 목록&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;chrome://net-internals/#hsts&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HSTS 조회 및 비활성화&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;chrome://inspect#devices&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;USB로 &lt;strong&gt;모바일 디바이스&lt;/strong&gt;를 연결해서 개발자 도구(DevTools)로 모바일 크롬 앱을 확인할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;북마클릿-bookmarklet&#34;&gt;북마클릿 Bookmarklet&lt;/h1&gt;&#xA;&lt;p&gt;북마클릿(Bookmarklet)이라는 단어는 북마크(Bookmark)와 애플릿(Applet)의 합성어입니다.&#xA;이 단어는 다음과 같은 이유로 만들어졌습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>APM만큼 중요한 네트워크 모니터링</title>
      <link>https://markruler.github.io/posts/web/apm-network-device-troubleshooting-mistakes/</link>
      <pubDate>Thu, 25 Jul 2024 01:22:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/apm-network-device-troubleshooting-mistakes/</guid>
      <description>&lt;p&gt;APM은 애플리케이션 성능 모니터링(Application Performance Monitoring)입니다.&#xA;저희 팀이 사용하는 모니터링 서비스 데이터독(Datadog)은 APM에서 많은 것을 확인할 수 있습니다.&#xA;(인프라, 로그, 호스트의 프로세스, JVM 런타임 메트릭, 각 리소스별 레이턴시 등등)&lt;/p&gt;&#xA;&lt;h1 id=&#34;문제&#34;&gt;문제&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/web/apm-network-device-troubleshooting-mistakes/first.png&#34; alt=&#34;First&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;어느날 체감이 될 정도로 서비스의 레이턴시가 높아지고, 정각마다 스파이크 발생했습니다.&#xA;또한 서비스 전체에 영향이 있었습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;분석-쉽게-간과했던-문제&#34;&gt;분석: 쉽게 간과했던 문제&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/&#34;&gt;Oracle Session 히스토리&lt;/a&gt;를 남겨서 확인했을 때&#xA;DB에 부하를 일으키면서 반복적으로 보이는 느린 쿼리가 없었습니다.&#xA;DB 문제는 아니었습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/web/apm-network-device-troubleshooting-mistakes/oracle-session.webp&#34; alt=&#34;Oracle Session 히스토리&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 장비 모니터링을 위한 SNMP</title>
      <link>https://markruler.github.io/posts/network/snmp/</link>
      <pubDate>Tue, 23 Jul 2024 19:08:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/snmp/</guid>
      <description>&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;주로 네트워크 장비의 Metric을 확인하는 모니터링 용도로 사용하지만, SNMP를 지원하는 컴퓨팅 머신이라면 모두 활용할 수 있습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;전제-조건&#34;&gt;전제 조건&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IP 네트워크 환경이 있다.&lt;/li&gt;&#xA;&lt;li&gt;관리용 서버(SNMP 서버)가 있다.&lt;/li&gt;&#xA;&lt;li&gt;SNMP 프로토콜을 지원하는 기기다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;구성-요소&#34;&gt;구성 요소&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;매니저 (SNMP 서버)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;네트워크 감시 장치(서버)에 설치해서 사용하는 소프트웨어&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;에이전트 (네트워크 기기/서버)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;네트워크 기기나 서버가 가진 기기의 상태 정보를 통보하는 기능&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;SNMP 프로토콜 (TCP/IP)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;UDP 패킷에 실어서 주고받으며, 포트 번호는 161(SNMP), 162(TRAP)를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;MIB (Management Information Base)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SNMP로 관리되는 네트워크 기기나 서버가 자신의 상태를 외부에 알리기 위해서 공개하는 관리 정보.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc1156&#34;&gt;RFC 1156&lt;/a&gt;으로 규정된 MIB1,&#xA;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc1213&#34;&gt;RFC 1213&lt;/a&gt;으로 규정된 MIB2&lt;/li&gt;&#xA;&lt;li&gt;MIB를 지원하는 기기에 일반적으로 포함된 표준 MIB와 기기 제조사마다 사양이 다른 사설(Private) MIB가 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;MIB의 구조는 트리 구조이며, 트리 구조의 마디(노드)는 번호를 붙여서 나타냅니다. 이 번호열을 OID(Object ID)라고 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;매니저-에이전트-역할&#34;&gt;매니저-에이전트 역할&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;정보의 요청과 응답&#xA;&lt;ul&gt;&#xA;&lt;li&gt;매니저가 에이전트에게 대상 기기의 정보를 요청 → 에이전트는 정보를 매니저에게 응답&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;설정의 요청과 응답&#xA;&lt;ul&gt;&#xA;&lt;li&gt;매니저가 에이전트에게 대상 기기의 설정 변경을 요청 → 에이전트는 설정을 변경하며 그 결과를 매니저에게 응답&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;상태 변화의 통보&#xA;&lt;ul&gt;&#xA;&lt;li&gt;에이전트가 매니저에게 대상 기기의 상태 변화를 통보&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;매니저-에이전트-통신-방식&#34;&gt;매니저-에이전트 통신 방식&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;폴링 (Polling)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;매니저가 정기적으로 에이전트로부터 관리 정보를 추출합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;트랩 (Trap)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;에이전트인 라우터나 스위치가 자신의 상태에 어떤 변화가 발생했을 때(장애 발생 등) 자발적으로 매니저인 SNMP 서버에게 정보를 통보합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;커뮤니티-이름&#34;&gt;커뮤니티 이름&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;매니저와 에이전트는 커뮤니티 이름으로 그룹화합니다.&lt;/li&gt;&#xA;&lt;li&gt;매니저와 에이전트는 커뮤니티 이름이 같을 때만 통신합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;버전별-차이&#34;&gt;버전별 차이&lt;/h1&gt;&#xA;&lt;h2 id=&#34;v1&#34;&gt;v1&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;커뮤니티 이름이 포함된 패킷을 평문으로 전달합니다.&lt;/li&gt;&#xA;&lt;li&gt;기본적인 관리 정보 베이스(MIB)와 트랩 메시지를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;v2&#34;&gt;v2&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;커뮤니티 이름이 포함된 패킷을 암호화해서 전달합니다.&lt;/li&gt;&#xA;&lt;li&gt;추가된 PDU 타입(예: &lt;a href=&#34;http://www.ktword.co.kr/test/view/view.php?m_temp1=5270&#34;&gt;GetBulkRequest&lt;/a&gt;)을 통해 대량의 데이터를 한 번에 전송할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;v2c&#34;&gt;v2c&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;커뮤니티 값을 암호화하여 전달하는 것이 복잡해서 v1처럼 평문으로 전달할 수 있도록 원복되었습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;v3&#34;&gt;v3&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(username, password) 인증 기능이 추가되었습니다.&lt;/li&gt;&#xA;&lt;li&gt;이 외 다양한 보안 기능 추가되었습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;관련-명령어-도구&#34;&gt;관련 명령어 도구&lt;/h1&gt;&#xA;&lt;h2 id=&#34;snmpget&#34;&gt;snmpget&lt;/h2&gt;&#xA;&lt;p&gt;정확한 OID를 입력해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>일상에서의 SSH</title>
      <link>https://markruler.github.io/posts/network/ssh/</link>
      <pubDate>Wed, 17 Jul 2024 22:40:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/ssh/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssh-key-%EC%83%9D%EC%84%B1&#34;&gt;SSH key 생성&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssh-server&#34;&gt;SSH Server&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#authoized_keys&#34;&gt;authoized_keys&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%A3%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-server-%EC%84%A4%EC%A0%95&#34;&gt;주로 사용하는 Server 설정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssh-client&#34;&gt;SSH Client&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%9A%B0%EC%84%A0-%EC%88%9C%EC%9C%84&#34;&gt;설정 파일 우선 순위&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#known_hosts&#34;&gt;known_hosts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%A3%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-host-%EC%84%A4%EC%A0%95&#34;&gt;주로 사용하는 Host 설정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#local-forward&#34;&gt;Local Forward&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#password-%EC%9E%85%EB%A0%A5-%EC%97%86%EC%9D%B4-ssh-key%EB%A1%9C-client%EC%97%90%EC%84%9C-server%EB%A1%9C-%EC%A0%91%EC%86%8D%ED%95%98%EA%B8%B0&#34;&gt;Password 입력 없이 SSH Key로 Client에서 Server로 접속하기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%B0%B8%EC%A1%B0&#34;&gt;참조&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;업무에서 자주 사용하는 SSH 설정을 정리합니다.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;ssh-key-생성&#34;&gt;SSH key 생성&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# RSA&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#f60&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ED25519&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t ed25519 -f &lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;/.ssh/my-ed25519 -C &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt; -N &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;ssh-server&#34;&gt;SSH Server&lt;/h1&gt;&#xA;&lt;p&gt;SSH 데몬 설정 파일은 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;이다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install openssh-server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status ssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;authoized_keys&#34;&gt;authoized_keys&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;역할: SSH 서버가 접속을 허용할 클라이언트의 공개키를 저장하는 파일입니다. (사용자 인증 방식)&lt;/li&gt;&#xA;&lt;li&gt;위치: 보통 사용자의 홈 디렉토리 아래의 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;에 위치합니다.&lt;/li&gt;&#xA;&lt;li&gt;내용: 클라이언트의 공개 키가 저장됩니다.&#xA;서버는 클라이언트의 접속 시도 시,&#xA;이 파일에 저장된 공개 키와 클라이언트가 제공한 키를 비교하여 인증을 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;보안: 비밀번호 대신 공개 키를 사용하여 인증하기 때문에,&#xA;공개 키 인증 방식이 비밀번호 인증보다 더 안전합니다.&#xA;특히, 비밀번호를 통한 무차별 대입 공격에 대한 저항력이 높습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;SSH 데몬(sshd) 설치 혹은 실행 시 &lt;code&gt;/etc/ssh&lt;/code&gt; 디렉토리에 비대칭키 쌍이 생성 및 저장됩니다.&#xA;만약 설치 시 생성되지 않았다면, 맨 처음 실행할 때 생성됩니다.&#xA;&lt;code&gt;ssh-keygen&lt;/code&gt; 명령어를 사용해서 수동으로 생성 및 교체할 수도 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>서버 to 서버 요청 시 발생한 DNS 레이턴시</title>
      <link>https://markruler.github.io/posts/network/server-to-server-dns/</link>
      <pubDate>Thu, 13 Jun 2024 17:40:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/server-to-server-dns/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%B0%B0%EA%B2%BD&#34;&gt;배경&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%B6%84%EC%84%9D-dig-%EC%9C%BC%EB%A1%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8&#34;&gt;분석: dig 으로 테스트&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#nameserver-8888-%EB%A1%9C-%EC%A7%80%EC%A0%95&#34;&gt;nameserver 8.8.8.8 로 지정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#nameserver%EB%8A%94-resolvconf-%EC%84%A4%EC%A0%95%EC%9D%84-%EB%94%B0%EB%A5%B8%EB%8B%A4&#34;&gt;nameserver는 &lt;code&gt;resolv.conf&lt;/code&gt; 설정을 따른다&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%B9%84%EA%B5%90&#34;&gt;비교&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%ED%95%B4%EA%B2%B0-%ED%98%B8%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EC%88%98%EC%A0%95&#34;&gt;해결: 호스트 파일 수정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;배경&#34;&gt;배경&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;약 200ms 응답 속도가 예상되는 API가 불규칙적으로 2s까지 스파이크가 발생했습니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;해당 API에는 서버 to 서버로 요청하는 기능이 여러 개 포함되어 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;환경: On-Premise(IDC) 환경에 애플리케이션 서버는 컨테이너가 아닌 스탠드얼론 호스트로 실행됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;분석-dig-으로-테스트&#34;&gt;분석: dig 으로 테스트&lt;/h1&gt;&#xA;&lt;h2 id=&#34;nameserver-8888-로-지정&#34;&gt;nameserver 8.8.8.8 로 지정&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dig @8.8.8.8 api.example.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;첫번째 요청 292 msec&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; Query time: &lt;span style=&#34;color:#f60&#34;&gt;292&lt;/span&gt; msec&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; SERVER: 8.8.8.8#53(8.8.8.8) (UDP)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; WHEN: Tue Jun &lt;span style=&#34;color:#f60&#34;&gt;11&lt;/span&gt; 11:00:54 KST &lt;span style=&#34;color:#f60&#34;&gt;2024&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; MSG SIZE  rcvd: &lt;span style=&#34;color:#f60&#34;&gt;154&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2번째 요청 36 msec&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playwright를 사용해서 HTML 페이지를 PDF로 만들기</title>
      <link>https://markruler.github.io/posts/pdf/html-to-pdf/</link>
      <pubDate>Tue, 12 Dec 2023 22:02:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/pdf/html-to-pdf/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;데모 서버는 &lt;a href=&#34;https://github.com/markruler/htmltopdf&#34;&gt;markruler/htmltopdf&lt;/a&gt; 저장소를 사용해주세요.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;팀내에서 문서 생성 도구로 &lt;a href=&#34;https://pdfmyurl.com/html-to-pdf-api&#34;&gt;PDFmyURL&lt;/a&gt;과&#xA;&lt;a href=&#34;https://www.forcs.com/kr/oz-e-form/&#34;&gt;OZ e-Form&lt;/a&gt;을 사용하고 있습니다.&#xA;보통 이런 외부 솔루션은 테스트 할 때 매우 불편합니다.&lt;/p&gt;&#xA;&lt;p&gt;PDFmyURL은 PDF를 생성하는 2가지 인터페이스가 있습니다.&#xA;하나는 URL을 통해 페이지를 읽어서 PDF를 생성하는 인터페이스고,&#xA;하나는 raw HTML, CSS를 직접 전달해서 PDF를 생성하는 인터페이스입니다.&#xA;URL 방식은 PDFmyURL 측 서버(서비스 외부)에서 페이지를 조회할 수 있어야 합니다.&#xA;그래서 private 환경에서는 테스트 할 수가 없습니다.&#xA;해당 기능들은 운영 환경에서 QA 테스트를 해야 하는 불상사가 생기는 겁니다.&#xA;더 큰 문제는 데이터를 Public 환경에 노출해야 하기 때문에 데이터에 따라 개인 정보 유출 문제가 될 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>오라클 DBMS SE2 세션 사후 진단</title>
      <link>https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/</link>
      <pubDate>Sun, 30 Apr 2023 23:58:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/</guid>
      <description>&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;저희 팀에서 구독 중인 Oracle DBMS의 라이센스는 Standard Edition 2의 Processor 라이센스(이하 SE2)입니다.&#xA;이 라이센스는 &lt;a href=&#34;https://www.cubrid.com/blog/3813513&#34;&gt;프로세서 최대 2개, CPU Threads 최대 16개&lt;/a&gt;까지 사용할 수 있습니다.&#xA;만약 트래픽이 많지 않다면 이 정도 사양으로도 충분하겠지만,&#xA;트래픽이 많아지거나 DB를 비효율적으로 사용하게 되면 성능 저하가 발생할 수 있습니다.&#xA;&lt;strong&gt;하지만 우리는 성능 저하가 발생했을 때 이를 진단할 방법이 없었습니다.&lt;/strong&gt;&#xA;SE2의 경우 AWR(Automatic Workload Repository), ASH(Active Session History)와 같은&#xA;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/dblic/Licensing-Information.html#GUID-68A4128C-4F52-4441-8BC0-A66F5B3EEC35&#34;&gt;Oracle Diagnostics Pack&lt;/a&gt;을&#xA;사용할 수 없습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;db-진단-도구가-필요합니다&#34;&gt;DB 진단 도구가 필요합니다&lt;/h1&gt;&#xA;&lt;p&gt;연산이 오래 걸리는 쿼리의 경우 SQL을 튜닝해서 해결했습니다.&#xA;검색 기능의 경우 Elasticsearch에 데이터를 연동해서 Inverted index로 성능을 향상시켰습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Too many open files</title>
      <link>https://markruler.github.io/posts/java/too-many-open-files/</link>
      <pubDate>Mon, 20 Mar 2023 21:58:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/java/too-many-open-files/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;커버 이미지 출처: &lt;a href=&#34;https://stablediffusionweb.com/&#34;&gt;Stable diffusion&lt;/a&gt; &amp;ldquo;swimming pool lane pattern&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;증상&#34;&gt;증상&lt;/h1&gt;&#xA;&lt;p&gt;Spring framework로 만든 웹 애플리케이션에서 비동기로 HTTP 요청하는 기능을 개발하고 있었습니다.&#xA;요구 사항을 위해 동시에 1,000개 이상의 요청을 보낼 때가 있는데, &lt;code&gt;Too many open files&lt;/code&gt; 에러가 발생했습니다.&#xA;작업 PC(Ubuntu 22.04)에서 문제 없이 동작하던 프로그램이&#xA;IDC에 위치한 서버(CentOS 7)에서는 &lt;code&gt;OutOfMemoryError&lt;/code&gt;가 발생하면서 동작하지 않았습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.lang.OutOfMemoryError: unable to create new native thread&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.util.concurrent.ExecutionException: com.markruler.RuntimeException: request error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Caused by: java.net.SocketException: Too many open files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;SocketException&lt;/code&gt;인데 &lt;code&gt;Too many open files&lt;/code&gt;? &lt;strong&gt;이게 OOM&lt;/strong&gt;?&#xA;이해되지 않았습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>엘라스틱서치(Elasticsearch)와 데이터 인덱싱 전략</title>
      <link>https://markruler.github.io/posts/search/elasticsearch-indexing-strategy/</link>
      <pubDate>Wed, 21 Dec 2022 22:20:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/search/elasticsearch-indexing-strategy/</guid>
      <description>&lt;p&gt;엘라스틱서치(Elasticsearch)는 문서 기반 검색 엔진으로 빠른 키워드 검색 속도를 제공합니다.&#xA;엘라스틱서치가 빠른 이유는 문서의 단어(term)들을 역색인(inverted index)하기 때문입니다.&#xA;책에서 특정 단어를 찾는 걸 상상해 보죠.&#xA;&lt;strong&gt;관계형 데이터베이스(RDB, Relational Database)는&lt;/strong&gt; &lt;code&gt;LIKE&lt;/code&gt; 검색을 통해 검색 키워드가 포함된 &lt;strong&gt;모든 페이지를 찾아야 합니다&lt;/strong&gt;.&#xA;&lt;strong&gt;엘라스틱서치는&lt;/strong&gt; 책 뒷부분에 있는 색인(index)을 보고 &lt;strong&gt;필요한 페이지만 찾으면 됩니다&lt;/strong&gt;.&#xA;이 글에서는 e커머스 서비스에서 검색 성능을 개선하기 위해 도입한 엘라스틱서치와 인덱싱 전략에 대해 소개합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%97%98%EB%9D%BC%EC%8A%A4%ED%8B%B1%EC%84%9C%EC%B9%98-%EB%8F%84%EC%9E%85-%EB%B0%B0%EA%B2%BD&#34;&gt;엘라스틱서치 도입 배경&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#rdb-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%9D%B8%EB%8D%B1%EC%8B%B1%ED%95%98%EB%8A%94-%EC%A0%84%EB%9E%B5&#34;&gt;RDB 데이터를 인덱싱하는 전략&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#1-%EA%B0%80%EC%9E%A5-%EC%89%AC%EC%9A%B4-%EB%B0%A9%EB%B2%95-batch&#34;&gt;1. 가장 쉬운 방법 Batch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#2-update-%EB%8D%B0%EC%9D%B4%ED%84%B0&#34;&gt;2. UPDATE 데이터&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#3-hard-delete-%EB%8D%B0%EC%9D%B4%ED%84%B0&#34;&gt;3. HARD DELETE 데이터&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EA%B0%9C%EC%84%A0%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%B6%80%EB%B6%84&#34;&gt;더 개선할 수 있는 부분&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%9D%B4-%EA%B3%A0%EB%AF%BC%EC%9D%84-%EC%A0%80%EB%A7%8C-%ED%96%88%EB%8D%98-%EA%B2%8C-%EC%95%84%EB%8B%88%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4&#34;&gt;이 고민을 저만 했던 게 아니었습니다&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;엘라스틱서치-도입-배경&#34;&gt;엘라스틱서치 도입 배경&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;매일 새벽에 장애가 발생하기 시작했습니다&lt;/strong&gt;.&#xA;유저 트래픽이 주로 새벽에 몰리는데, 이때 DB 레이턴시가 높아져서 모든 서버에 장애가 발생했습니다.&#xA;왜 DB 레이턴시가 높았을까요?&#xA;현재 서비스에서 트래픽이 가장 많이 발생하는 페이지가 메인, 상품 검색, 상품 상세 페이지입니다.&#xA;이 중 검색 페이지에서 쿼리 대기 시간이 길어지고 있었습니다.&#xA;원인은 크게 다음과 같습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins Workspace 동시성 문제</title>
      <link>https://markruler.github.io/posts/ci/jenkins-workspace-concurrency/</link>
      <pubDate>Mon, 14 Nov 2022 00:38:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/ci/jenkins-workspace-concurrency/</guid>
      <description>&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;Jenkins Pipeline을 사용해서 잡 스케줄러를 실행하기 위해&#xA;&lt;a href=&#34;https://www.jenkins.io/doc/book/pipeline/syntax/#triggers&#34;&gt;triggers&lt;/a&gt; directive를 사용했습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent any&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    triggers {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cron(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;* * * * *&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#0f0&#34;&gt;// HERE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages {...}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    post {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        always {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cleanWs(cleanWhenNotBuilt: &lt;span style=&#34;color:#f00&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    deleteDirs: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    disableDeferredWipeout: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    notFailBuild: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    patterns: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [pattern: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;.git/**&amp;#39;&lt;/span&gt;, type: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;EXCLUDE&amp;#39;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [pattern: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt;, type: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;EXCLUDE&amp;#39;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [pattern: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;.meta/**&amp;#39;&lt;/span&gt;, type: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;EXCLUDE&amp;#39;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;해당 Job은 빌드 간 메타데이터(&lt;code&gt;.meta/&lt;/code&gt;)를 공유해야 했기 때문에&#xA;&lt;a href=&#34;https://plugins.jenkins.io/ws-cleanup/&#34;&gt;cleanWs&lt;/a&gt; 플러그인에서도&#xA;&lt;code&gt;.git&lt;/code&gt; 디렉토리와 함께 삭제되지 않도록 설정했습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tomcat 이해하기</title>
      <link>https://markruler.github.io/posts/java/tomcat/</link>
      <pubDate>Tue, 23 Aug 2022 02:45:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/java/tomcat/</guid>
      <description>&lt;h1 id=&#34;architecture&#34;&gt;Architecture&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/tomcat-architecture.png&#34; alt=&#34;Tomcat Architecture&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/tomcat-architecture-and-performance/&#34;&gt;이미지 출처 - Datadog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&amp;lt;!-- server.xml --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5e5e5&#34;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;utf-8&amp;#39;?&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;Server port=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8005&amp;#34;&lt;/span&gt; shutdown=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;SHUTDOWN&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.AprLifecycleListener&amp;#34;&lt;/span&gt; SSLEngine=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;on&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.JasperListener&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.JreMemoryLeakPreventionListener&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.ThreadLocalLeakPreventionListener&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;GlobalNamingResources&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Resource name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;UserDatabase&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              auth=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Container&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              type=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.UserDatabase&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              description=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;User database that can be updated and saved&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              factory=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.users.MemoryUserDatabaseFactory&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              pathname=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;conf/tomcat-users.xml&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/GlobalNamingResources&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Service name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Catalina&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Connector port=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt; protocol=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;HTTP/1.1&amp;#34;&lt;/span&gt; redirectPort=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt; connectionTimeout=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;20000&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Connector port=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8009&amp;#34;&lt;/span&gt; protocol=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;AJP/1.3&amp;#34;&lt;/span&gt; redirectPort=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Engine name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Catalina&amp;#34;&lt;/span&gt; defaultHost=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;Realm className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.realm.LockOutRealm&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;Realm className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.realm.UserDatabaseRealm&amp;#34;&lt;/span&gt; resourceName=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;UserDatabase&amp;#34;&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/Realm&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;Host name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;  appBase=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;webapps&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            unpackWARs=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; autoDeploy=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;Valve className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.valves.AccessLogValve&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              directory=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;logs&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              prefix=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;localhost_access_log.&amp;#34;&lt;/span&gt; suffix=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;.txt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              pattern=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/Host&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/Engine&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/Service&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/Server&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;&#xA;&lt;p&gt;카탈리나 서버(Catalina Server)는 Tomcat 아키텍처 전체를 나타내며 서블릿 컨테이너를 말한다.&#xA;즉, 서블릿을 실행하기 위한 환경을 제공한다.&#xA;이러한 카탈리나 서버에는 하나 이상의 서비스(Service)가 포함된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>X Desktop Group</title>
      <link>https://markruler.github.io/posts/gui/x-based-desktop/</link>
      <pubDate>Sun, 21 Aug 2022 23:04:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/gui/x-based-desktop/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#freedesktoporg&#34;&gt;freedesktop.org&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B4%80%EB%A0%A8-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&#34;&gt;관련 소프트웨어&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#xdg-user-dirs-xdg-user-directories&#34;&gt;xdg-user-dirs (XDG user directories)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#xdg-open-open&#34;&gt;xdg-open (open)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#x-window-system&#34;&gt;X Window System&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%84%9C%EB%B2%84-%EB%B2%84%EC%A0%84%EC%97%90-x-window-system-%EC%84%A4%EC%B9%98&#34;&gt;서버 버전에 X Window System 설치&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#x-window-system-%EC%82%AD%EC%A0%9C&#34;&gt;X Window System 삭제&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#x11-forwarding&#34;&gt;X11 Forwarding&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#gnome-%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%83%91&#34;&gt;GNOME 데스크탑&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#gui-toolkit&#34;&gt;GUI Toolkit&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#gtk-gimp-toolkit&#34;&gt;GTK: GIMP ToolKit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#qt&#34;&gt;Qt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#gui-%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%83%91-%ED%99%98%EA%B2%BD%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%B6%94%EA%B0%80-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&#34;&gt;GUI 데스크탑 환경과 관련된 추가 소프트웨어&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#vnc-virtual-network-computing&#34;&gt;VNC: Virtual Network Computing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#rdp-remote-desktop-protocol&#34;&gt;RDP: Remote Desktop Protocol&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%B0%B8%EC%A1%B0&#34;&gt;참조&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;freedesktoporg&#34;&gt;freedesktop.org&lt;/h1&gt;&#xA;&lt;p&gt;XDG는 &lt;code&gt;X Desktop Group&lt;/code&gt;의 약자로, &lt;a href=&#34;https://freedesktop.org&#34;&gt;freedesktop.org&lt;/a&gt;의 옛 이름입니다.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;freedesktop.org hosts the development of free and open source software, focused on interoperability and shared technology for open-source graphical and desktop systems.&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;freedesktop.org는 오픈 소스 그래픽 및 데스크탑 시스템을 위한 상호 운용성과 공유 기술에 중점을 둔 무료 및 오픈 소스 소프트웨어의 개발을 주도합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Load Balancer를 활용해서 배포 프로세스를 개선해보자</title>
      <link>https://markruler.github.io/posts/ci/ci-with-lb/</link>
      <pubDate>Wed, 17 Aug 2022 03:44:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/ci/ci-with-lb/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%9A%94&#34;&gt;개요&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B8%B0%EC%A1%B4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4&#34;&gt;기존 프로세스&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%84%A0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-continuous-delivery&#34;&gt;개선 프로세스 (Continuous Delivery)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%8F%84%EC%9E%85-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EB%B0%9C%EC%83%9D%ED%95%9C-%EB%AC%B8%EC%A0%9C%EB%93%A4&#34;&gt;도입 과정에서 발생한 문제들&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#active-health-check%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%98%EB%8B%A4&#34;&gt;Active Health Check가 필요하다&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#iptables-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%8B%A4%EC%8B%9C-%EC%8B%9C%EC%9E%91%ED%95%B4%EC%95%BC-%ED%95%A0-%EB%95%8C&#34;&gt;iptables 서비스를 다시 시작해야 할 때&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#httpd%EB%A5%BC-%EB%8B%A4%EC%8B%9C-%EC%8B%A4%ED%96%89%ED%95%B4%EC%95%BC-%ED%95%A0-%EB%95%8C&#34;&gt;httpd를 다시 실행해야 할 때&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%84%A0%EC%9D%98-%EC%97%AC%EC%A7%80%EA%B0%80-%EC%9E%88%EB%8B%A4&#34;&gt;개선의 여지가 있다&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#sessionrepositoryfilter-%EC%97%90%EB%9F%AC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%91%EB%8B%B5&#34;&gt;&lt;code&gt;SessionRepositoryFilter&lt;/code&gt; 에러 페이지 응답&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#proxy&#34;&gt;Proxy&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#akamai-%EC%97%90%EB%9F%AC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%91%EB%8B%B5&#34;&gt;Akamai 에러 페이지 응답&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#haproxy-%EC%A0%84%ED%99%98&#34;&gt;HAProxy 전환&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%84%A0%EC%96%B8%ED%98%95-%EB%B0%B0%ED%8F%AC-gitops&#34;&gt;선언형 배포 (GitOps?)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84-%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을 거리&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EA%B0%81%EC%A3%BC&#34;&gt;각주&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;현재 팀에서 빌드-배포 도구로 Bamboo를 사용하고 있다.&#xA;놀랍게도 개발자가 커밋한 소스 코드를 운영 환경에 반영하기까지 14단계의 수동 작업이 필요했다.&#xA;그래서 개발팀 모두가 배포 작업에 많은 부담을 갖고 있었다.&#xA;한번 빌드하고 배포하는데 최소 30분에서 길면 1시간까지 걸리는 이 불필요한 시간을 줄이고 싶었다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JVM 모니터링</title>
      <link>https://markruler.github.io/posts/java/jvm-monitoring/</link>
      <pubDate>Mon, 23 May 2022 00:09:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/java/jvm-monitoring/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://markruler.github.io/posts/java/java-timeout-monitoring/&#34;&gt;모니터링과 타임아웃의 중요성&lt;/a&gt;은 아무리 강조해도 지나치지 않는다.&#xA;최근 회사에서 아주 느린 API(약 15초)를 발견했는데 분명 매일 트래픽이 발생하는데도 2년동안 방치되고 있었다.&#xA;이런 레거시는 유지 보수할 일이 없다면 개발팀에서도 확인하기 어렵다.&#xA;사용자가 리포팅해주길 기대하는 것보다 모니터링 도구를 통해 파악하는 것이 좋다.&#xA;심지어 굉장히 간단한 문제여서 파악하고 수정하는 데에 1시간도 안걸렸지만 약 15초 걸리던 API를 100ms까지 줄였다.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;먼저 알아두면 좋은 명령어가 있다.&#xA;&lt;code&gt;jps&lt;/code&gt;는 JVM Process Status를 출력하는 명령어로&#xA;현재 머신에서 실행중인 JVM의 PID나 실행 옵션을 확인할 때 유용하다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>모니터링과 타임아웃의 중요성</title>
      <link>https://markruler.github.io/posts/java/java-timeout-monitoring/</link>
      <pubDate>Wed, 11 May 2022 02:19:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/java/java-timeout-monitoring/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://markruler.github.io/posts/cloud/monitor-trace-log-metric/&#34;&gt;Observability 용어 정리&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;상황&#34;&gt;상황&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;현재팀에서 만들고 있는 애플리케이션은 Spring Framework로 작성하고 있다.&lt;/li&gt;&#xA;&lt;li&gt;계속 특정 애플리케이션과 함께 여러 애플리케이션에서 후속 장애가 발생했다.&lt;/li&gt;&#xA;&lt;li&gt;장애가 발생할 때마다 특정 API의 커넥션이 끊기지 않고 오랜 시간 유지되고 있었다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/datadog/transaction-deadlock.png&#34; alt=&#34;transaction-deadlock&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;RedisSystemException&lt;/code&gt;은 해당 서버를 죽이면서 Redis와 커넥션이 끊어졌기 때문에 발생한 예외다.&#xA;만약 서버를 죽이지 않았다면 끝까지 물고 있었을 것이다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;분석&#34;&gt;분석&lt;/h2&gt;&#xA;&lt;p&gt;시간만 보고도 Timeout이 설정되어 있지 않다는 것을 확인할 수 있다.&#xA;설정하지 않으면 &lt;strong&gt;default 값은 -1&lt;/strong&gt; 로 타임아웃이 발생하지 않는다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>깃(Git) CLI 환경에서 소스 코드 관리하기</title>
      <link>https://markruler.github.io/posts/shell/git-commands/</link>
      <pubDate>Wed, 01 Dec 2021 23:28:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/git-commands/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Git의 모든 기능을 지원하는 것은 CLI 뿐이다.&#xA;GUI 프로그램의 대부분은 Git 기능 중 일부만 구현하기 때문에 비교적 단순하다.&#xA;CLI를 사용할 줄 알면 GUI도 사용할 수 있지만 반대는 성립하지 않는다. -&#xA;&amp;lt;&lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Pro Git&lt;/a&gt;&amp;gt; Scott Chacon, Ben Straub&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;git-internal&#34;&gt;Git Internal&lt;/h1&gt;&#xA;&lt;h2 id=&#34;차이가-아니라-스냅샷&#34;&gt;차이가 아니라 스냅샷&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.blog/2020-12-17-commits-are-snapshots-not-diffs/&#34;&gt;Commits are snapshots, not diffs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;CVS, Subversion, Perforce, Bazaar 등의 시스템은 각 파일의 변화를 시간순으로 관리하면서 파일들의 집합을 관리합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/shell/git/storing-data-as-changes.png&#34; alt=&#34;Storing data as changes to a base version of each file&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go 언어로 컨테이너 이미지 빌드하기</title>
      <link>https://markruler.github.io/posts/container/building-container-images-in-go/</link>
      <pubDate>Sun, 28 Feb 2021 12:49:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/container/building-container-images-in-go/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ahmet Alp Balkan의 &lt;a href=&#34;https://ahmet.im/blog/building-container-images-in-go/&#34;&gt;Building container images in Go&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;이 글에서는 도커(Docker)를 사용하지 않고 어떻게 OCI 컨테이너 이미지를 만드는지 설명합니다.&#xA;이를 위해 &lt;a href=&#34;https://github.com/google/go-containerregistry&#34;&gt;go-containerregistry&lt;/a&gt; 모듈을 이용해&#xA;프로그래밍해서 레이어 및 이미지 매니페스트를 빌드합니다.&#xA;예를 들어 &lt;a href=&#34;https://hub.docker.com/_/nginx&#34;&gt;nginx&lt;/a&gt; 이미지 위에&#xA;정적 웹 사이트 콘텐츠를 추가하여 컨테이너 이미지를 빌드하고&#xA;Go 프로그램을 사용하는 &lt;a href=&#34;https://gcr.io&#34;&gt;&lt;code&gt;gcr.io&lt;/code&gt;&lt;/a&gt; 같은 레지스트리에 푸시하겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;순서는 다음과 같습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;도커 허브에서 &lt;code&gt;nginx&lt;/code&gt; 이미지를 가져 옵니다(pull).&lt;/li&gt;&#xA;&lt;li&gt;기존 &lt;code&gt;/usr/share/nginx/html&lt;/code&gt; 디렉터리를 삭제하는 새 레이어를 만듭니다.&lt;/li&gt;&#xA;&lt;li&gt;정적 HTML 콘텐츠과 애셋으로 새 레이어를 만듭니다.&lt;/li&gt;&#xA;&lt;li&gt;이미지와 태그에 새 레이어를 추가합니다.&lt;/li&gt;&#xA;&lt;li&gt;새 이미지를 레지스트리로 푸시합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/ahmetb/430baa4e8bb0b0f78abb1c34934cd0b6&#34;&gt;이 gist&lt;/a&gt;에서&#xA;예제 코드를 찾을 수 있습니다.&#xA;그럼 자세히 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>책 &#34;컨테이너 보안&#34;</title>
      <link>https://markruler.github.io/posts/review/container-security/</link>
      <pubDate>Sun, 21 Feb 2021 11:47:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/review/container-security/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;한빛미디어의 지원을 받아 작성되었습니다.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;거두절미&#34;&gt;거두절미&lt;/h1&gt;&#xA;&lt;p&gt;컨테이너에 관심 있으신 분이라면 필수 소장 도서입니다.&#xA;저도 컨테이너, 쿠버네티스, 도커, 클라우드 관련 도서를 많이 읽어봤지만&#xA;컨테이너를 이렇게 간명하고 깊게 다루는 책은 없었습니다.&#xA;컨테이너 &amp;lsquo;보안&amp;rsquo;을 설명하기 위해 컨테이너가 어떻게 동작하는지&#xA;설명하는 데에 책의 대부분을 차지합니다.&#xA;다만 200 페이지에 많은 내용을 압축한 만큼 도해는 많지 않습니다.&lt;/p&gt;&#xA;&lt;p&gt;먼저 저자의 &lt;a href=&#34;https://www.katacoda.com/lizrice/courses/containers-and-go&#34;&gt;katacoda (An Introduction to Containers for Go programmers)&lt;/a&gt;로&#xA;실습해보시거나 &lt;a href=&#34;https://youtu.be/HPuvDm8IC-4&#34;&gt;발표(What is a container, really? Let&amp;rsquo;s write one in Go from scratch)&lt;/a&gt;를 보시길 추천드립니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>컨테이너 톺아보기</title>
      <link>https://markruler.github.io/posts/container/container-study-guide/</link>
      <pubDate>Wed, 17 Feb 2021 23:47:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/container/container-study-guide/</guid>
      <description>&lt;h1 id=&#34;거두절미&#34;&gt;거두절미&lt;/h1&gt;&#xA;&lt;p&gt;생각보다 컨테이너는 간단한 게 아닙니다.&#xA;컨테이너를 쉽게 생성하고 삭제할 수 있었던 이유는&#xA;도커와 같은 컨테이너 관리 도구가 복잡한 것들을 꽁꽁 감췄기 때문입니다.&#xA;컨테이너를 공부하면 할수록 알아야 할 게 더 늘어나고 있지만&#xA;이쯤에서 유익했던 자료들을 모아 보려 합니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;참고-자료&#34;&gt;참고 자료&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;👍 필수&#xA;&lt;ul&gt;&#xA;&lt;li&gt;책 - &lt;a href=&#34;https://www.hanbit.co.kr/store/books/look.php?p_code=B8383749156&#34;&gt;컨테이너 보안&lt;/a&gt;, Liz Rice&lt;/li&gt;&#xA;&lt;li&gt;katacoda - &lt;a href=&#34;https://www.katacoda.com/lizrice/courses/containers-and-go&#34;&gt;An Introduction to Containers for Go programmers&lt;/a&gt;, Liz Rice&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;컨테이너&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developers.redhat.com/blog/2018/02/22/container-terminology-practical-introduction/&#34;&gt;A Practical Introduction to Container Terminology&lt;/a&gt;, Scott McCarty&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/articles/build-a-container-golang/&#34;&gt;Build Your Own Container Using Less than 100 Lines of Go&lt;/a&gt;, Julian Friedman&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://iximiuz.com/en/posts/implementing-container-runtime-shim/&#34;&gt;Implementing Container Runtime Shim: runc&lt;/a&gt;, Ivan Velichko&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;컨테이너 런타임&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/keyword/linux-container&#34;&gt;리눅스 컨테이너란?&lt;/a&gt;, Daegwon Nacyot Kim&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.samsungsds.com/kr/insights/docker.html&#34;&gt;흔들리는 도커(Docker)의 위상: OCI와 CRI 중심으로 재편되는 컨테이너 생태계&lt;/a&gt;, 김준석&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/&#34;&gt;Podman and Buildah for Docker users&lt;/a&gt;, Red Hat&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://joejulian.name/post/kubernetes-container-engine-comparison/&#34;&gt;Selecting a container runtime for use with Kubernetes&lt;/a&gt;, Joe Julian&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;컨테이너 오케스트레이션&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.redhat.com/ko/topics/containers/what-is-container-orchestration&#34;&gt;컨테이너 오케스트레이션이란?&lt;/a&gt;, Red Hat&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;네임스페이스&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/keyword/linux-namespace&#34;&gt;리눅스 네임스페이스란?&lt;/a&gt;, Daegwon Nacyot Kim&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://jake.dothome.co.kr/namespace/&#34;&gt;네임스페이스&lt;/a&gt;, 문영일&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://windsock.io/using-linux-namespaces-to-isolate-processes/&#34;&gt;Using Linux Namespaces to Isolate Processes&lt;/a&gt;, Scott McCarty&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/blog/whats-next-containers-user-namespaces&#34;&gt;What’s Next for Containers? User Namespaces&lt;/a&gt;, Scott McCarty&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://netflixtechblog.com/evolving-container-security-with-linux-user-namespaces-afbe3308c082&#34;&gt;Evolving Container Security With Linux User Namespaces&lt;/a&gt;, Netflix&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kinvolk.io/blog/2020/12/improving-kubernetes-and-container-security-with-user-namespaces/&#34;&gt;Improving Kubernetes and container security with user namespaces&lt;/a&gt;, Alban Crequy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;컨트롤 그룹&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/torvalds/linux/blob/v5.10/Documentation/admin-guide/cgroup-v1/&#34;&gt;Cgroup Documentation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/&#34;&gt;Red Hat Resource Management Guide&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tech.kakao.com/2020/06/29/cgroup-driver/&#34;&gt;Cgroup Driver 선택하기&lt;/a&gt;, ssup&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b.luavis.kr/server/missing-800mb&#34;&gt;사라진 800MB를 찾아서&lt;/a&gt;, Luavis&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;루트 파일세스템&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/Documentation/filesystems/ramfs-rootfs-initramfs.txt&#34;&gt;Linux Kernel Documentation - ramfs, rootfs and initramfs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/post/change-root-directory-by-using-chroot&#34;&gt;chroot를 사용한 프로세스의 루트 디렉터리 격리&lt;/a&gt;, Daegwon Nacyot Kim&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;유니온 마운트&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ahmet.im/blog/building-container-images-in-go/&#34;&gt;Building container images in Go&lt;/a&gt;, Ahmet Alp Balkan (번역중)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/post/how-docker-image-work&#34;&gt;도커 이미지 빌드 원리와 OverlayFS&lt;/a&gt;, Daegwon Nacyot Kim&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developers.redhat.com/blog/2016/01/13/a-practical-introduction-to-docker-container-terminology/&#34;&gt;A Practical Introduction to Docker Container Terminology&lt;/a&gt;, Scott McCarty / Joe Brockmeier&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.naver.com/alice_k106/221530340759&#34;&gt;투명 셀로판지 이론을 통한 Overlay FS 사용 방법과 유니온 마운트 이해하기&lt;/a&gt;, 최용호&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ssup2.github.io/theory_analysis/Union_Mount_AUFS_Docker_Image_Layer/&#34;&gt;Union Mount, AUFS, Docker Image Layer&lt;/a&gt;, ssup2&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/storage/storagedriver/aufs-driver&#34;&gt;Use the AUFS storage driver&lt;/a&gt;, Docker&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lwn.net/Articles/312641/&#34;&gt;Unifying filesystems with union mounts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;캐퍼빌리티&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man7/capabilities.7.html&#34;&gt;capabilities(7)&lt;/a&gt;, Linux manual page&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://archive.is/20130112225523/http://www.eros-os.org/essays/capintro.html&#34;&gt;What is a Capability, Anyway?&lt;/a&gt;, Jonathan Shapiro&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.epnc.co.kr/news/articleView.html?idxno=43405&#34;&gt;권한을 최소화시키는 리눅스 커널 자격&lt;/a&gt;, 이혜원&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.container-solutions.com/linux-capabilities-why-they-exist-and-how-they-work&#34;&gt;Linux Capabilities: Why They Exist and How They Work&lt;/a&gt;, Adrian Mouat&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.container-solutions.com/linux-capabilities-in-practice&#34;&gt;Linux Capabilities In Practice&lt;/a&gt;, Adrian Mouat&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;컨테이너 네트워크&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/post/container-network-1-uts-namespace&#34;&gt;UTS 네임스페이스를 사용한 호스트네임 격리 - 컨테이너 네트워크 기초 1편&lt;/a&gt;, Daegwon Nacyot Kim&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/post/container-network-2-ip-command-and-network-namespace&#34;&gt;ip로 직접 만들어보는 네트워크 네임스페이스와 브리지 네트워크 - 컨테이너 네트워크 기초 2편&lt;/a&gt;, Daegwon Nacyot Kim&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;리눅스-컨테이너&#34;&gt;리눅스 컨테이너&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;A Linux container is a set of 1 or more processes that are isolated from the rest of the system.&amp;rdquo;&#xA;&lt;a href=&#34;https://www.redhat.com/en/topics/containers/whats-a-linux-container&#34;&gt;Red Hat&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>최소한의 안전한 Bash 스크립트 템플릿</title>
      <link>https://markruler.github.io/posts/shell/minimal-safe-bash-script-template/</link>
      <pubDate>Sun, 14 Feb 2021 15:22:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/minimal-safe-bash-script-template/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/radzikowski_m&#34;&gt;Maciej Radzikowski&lt;/a&gt;가 작성한 &lt;a href=&#34;https://betterdev.blog/minimal-safe-bash-script-template/&#34;&gt;Minimal safe Bash script template (2020-12-14)&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Bash 스크립트.&#xA;거의 모든 사람들이 언젠가 작성해야 하는 것입니다.&#xA;하지만 그 중 누구도 &amp;ldquo;맞아요, 저는 Bash 스크립트 작성하는 것을 사랑합니다&amp;quot;라고 말하지 않습니다.&#xA;거의 모든 사람들이 Bash 스크립트를 작성할 때 주의를 기울이지 않는 이유죠.&lt;/p&gt;&#xA;&lt;p&gt;저는 여러분을 Bash 전문가로 만들려는 것이 아닙니다 (저도 전문가는 아닙니다).&#xA;다만 스크립트를 더 안전하게 만들어 줄 최소한의 템플릿을 보여 드리겠습니다.&#xA;저에게 감사해하실 필요는 없어요. 여러분의 미래가 여러분에게 감사해할 것입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>쿠버네티스 레벨 트리거링 및 조정</title>
      <link>https://markruler.github.io/posts/kubernetes/level-triggering-and-reconciliation/</link>
      <pubDate>Wed, 13 Jan 2021 23:05:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/kubernetes/level-triggering-and-reconciliation/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;James Bowes(&lt;a href=&#34;https://twitter.com/jrbowes&#34;&gt;@jrbowes&lt;/a&gt;)의 &lt;a href=&#34;https://hackernoon.com/level-triggering-and-reconciliation-in-kubernetes-1f17fe30333d&#34;&gt;Level Triggering and Reconciliation in Kubernetes&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/tCht7FvIDdY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;시스템-프로그래밍-개념으로-보는-쿠버네티스가-클러스터를-관리하는-방법&#34;&gt;시스템 프로그래밍 개념으로 보는 쿠버네티스가 클러스터를 관리하는 방법&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;쿠버네티스&lt;/a&gt;는 현재&#xA;&lt;a href=&#34;https://techcrunch.com/2017/12/18/as-kubernetes-surged-in-popularity-in-2017-it-created-a-vibrant-ecosystem/&#34;&gt;가장 있기 있는&lt;/a&gt;&#xA;컨테이너 오케스트레이터입니다. 이런 성공의 밑받침은 신뢰성입니다. 모든&#xA;소프트웨어에는 버그가 있죠. 그러나 컨테이너를 실행하는 데 있어서 쿠버네티스는&#xA;다른 소프트웨어보다 버그가 적습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS Visualized: 유용한 깃(Git) 명령어</title>
      <link>https://markruler.github.io/posts/shell/cs-visualized-useful-git-commands/</link>
      <pubDate>Sat, 09 Jan 2021 08:35:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/cs-visualized-useful-git-commands/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리디아 할리(Lydia Hallie, &lt;a href=&#34;https://twitter.com/lydiahallie&#34;&gt;@lydiahallie&lt;/a&gt;)가 쓴 &lt;a href=&#34;https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1&#34;&gt;CS Visualized: Useful Git Commands&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Git이 정말 강력한 도구이긴 하지만, 대다수의 사람들은 끔찍한 악몽 😐&#xA;같다는 말도 공감할 거에요. 저는 항상 Git으로 작업할 때 어떤 일이 일어날지&#xA;머릿속으로 그려보는 것이 꽤 유용하다는 것을 알았습니다. 특정 명령을 실행할&#xA;때 브랜치는 어떻게 상호작용하고, 그것이 히스토리에 어떤 영향을 미칠까요?&#xA;&lt;code&gt;master&lt;/code&gt;에서 &lt;code&gt;reset --hard&lt;/code&gt; 하고 &lt;code&gt;origin&lt;/code&gt; 리포지터리로 &lt;code&gt;force push&lt;/code&gt;한 후,&#xA;&lt;code&gt;.git&lt;/code&gt; 폴더를 &lt;code&gt;rimraf&lt;/code&gt;하면 왜 저의 팀원은 소리를 지를까요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS Visualized: CORS</title>
      <link>https://markruler.github.io/posts/web/cs-visualized-cors/</link>
      <pubDate>Sat, 02 Jan 2021 08:50:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/cs-visualized-cors/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리디아 할리(Lydia Hallie, &lt;a href=&#34;https://twitter.com/lydiahallie&#34;&gt;@lydiahallie&lt;/a&gt;)가 쓴 &lt;a href=&#34;https://dev.to/lydiahallie/cs-visualized-cors-5b8h&#34;&gt;CS Visualized: CORS&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;어쩌다 콘솔에서 &amp;ldquo;fetch 접근이 CORS 정책에 의해 차단되었습니다&amp;quot;라는&#xA;커다란 빨간색 오류를 보면 모든 개발자가 짜증을 느낍니다! 😬&#xA;임시방편이 몇 가지 있긴 하지만 오늘은 그 어떤 것도 사용하지 않겠습니다!&#xA;대신 CORS가 실제로 무엇을 하고 있는지 왜 우리에게 도움이 되는지&#xA;알아보도록 하겠습니다. 👏🏼&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;❗️ 이 글에서는 HTTP 기본에 대해 설명하지 않겠습니다.&#xA;HTTP 요청과 응답에 대해 더 자세히 알고 싶으시다면 제가 얼마 전에&#xA;작성한 &lt;a href=&#34;https://www.lydiahallie.dev/blog/http11&#34;&gt;짧은 글&lt;/a&gt;이&#xA;있습니다. 🙂 제가 사용한 예시에서 HTTP/2 대신 HTTP/1.1을&#xA;사용하지만 CORS에 영향을 미치지는 않습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go로 밑바닥부터 만드는 BitTorrent 클라이언트</title>
      <link>https://markruler.github.io/posts/go/building-bittorrent-client/</link>
      <pubDate>Mon, 28 Dec 2020 14:46:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/go/building-bittorrent-client/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.jse.li/posts/torrent/&#34;&gt;Jesse Li의 Building a BitTorrent client from the ground up in Go (2020-01-04)&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;거두절미(tl;dr):&lt;/strong&gt; The Pirate Bay를 방문하고 mp3 파일이 나타나기까지 무슨 일이 일어나는 것일까요?&#xA;이 글에서는 데비안(Debian)을 다운로드할 수 있을 정도의 비트토렌트 프로토콜을 구현할 것입니다.&#xA;바로 &lt;a href=&#34;https://github.com/veggiedefender/torrent-client/&#34;&gt;소스 코드&lt;/a&gt;를 보거나 &lt;a href=&#34;#%EB%AA%A8%EB%91%90-%ED%95%A9%EC%B9%98%EA%B8%B0&#34;&gt;마지막 부분&lt;/a&gt;으로 넘어갈 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;비트토렌트(BitTorrent)는 인터넷을 통해 파일을 다운로드하고 배포하기 위한 프로토콜입니다.&#xA;다운로더가 중앙 서버와 연결하는 기존의 클라이언트/서버 관계 (예: 넷플릭스에서&#xA;영화를 보거나 지금 읽고 있는 웹 페이지를 불러 오는 것)와 달리,&#xA;&lt;strong&gt;피어(peer)&lt;/strong&gt; 라고 불리는 비트토렌트 네트워크 참여자들은 &lt;em&gt;서로에게서&lt;/em&gt; 파일 조각을 다운로드합니다.&#xA;이것이 &lt;strong&gt;P2P(peer-to-peer)&lt;/strong&gt; 프로토콜입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VIM 에디터 명령어 정리</title>
      <link>https://markruler.github.io/posts/shell/vim-editor-shortcuts/</link>
      <pubDate>Mon, 07 Dec 2020 00:44:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/vim-editor-shortcuts/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;서버에서 파일을 편집하기 위해 VIM 에디터를 사용할 일이 많은데,&#xA;제가 사용하는 설정 파일과 자주 쓰는 명령어를 정리합니다.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;설정-vimrc&#34;&gt;설정 (.vimrc)&lt;/h1&gt;&#xA;&lt;p&gt;제가 사용하는 설정 파일(&lt;code&gt;~/.vimrc&lt;/code&gt;)입니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&amp;#34;이것은 주석&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;syntax&lt;/span&gt; on                                                                       &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; showcmd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; statusline+=%F::%l,%c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; showmatch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; ignorecase&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; smartcase&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; incsearch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; autowrite&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; ruler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; autoindent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; cindent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; shiftwidth=&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; tabstop=&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; expandtab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; laststatus=&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; backspace=indent,eol,start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; showmode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; hls&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; colorcolumn=&lt;span style=&#34;color:#f60&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; ff=unix&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; fileencodings=utf8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; viminfo=&amp;#39;&lt;span style=&#34;color:#f60&#34;&gt;50&lt;/span&gt;,&amp;lt;&lt;span style=&#34;color:#f60&#34;&gt;1000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&amp;#34;set history=1000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;au FileType make setlocal noexpandtab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;highlight&lt;/span&gt; TailingWhitespace ctermbg=red guibg=red&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; cul&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; background=dark&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; nowrapscan&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; visualbell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;set&lt;/span&gt; tenc=utf&lt;span style=&#34;color:#f60&#34;&gt;-8&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;syntax on&lt;/code&gt; 구문강조 사용&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set showcmd&lt;/code&gt; 명령어 입력시 상태표시줄에 보여줌&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set statusline+=%F::%l,%c&lt;/code&gt; 상태표시줄에 파일명, 줄, 컬럼 표시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set showmatch&lt;/code&gt; 괄호 매칭 보여줌&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set ignorecase&lt;/code&gt; 검색시 대소문자 무시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set smartcase&lt;/code&gt; 검색어에 대문자가 포함되어 있으면 대소문자 구분&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set incsearch&lt;/code&gt; 검색어 입력시 점진적 검색&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set autowrite&lt;/code&gt; 저장하지 않은 파일을 끝내기 전에 자동으로 저장&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set ruler&lt;/code&gt; 화면 우측 하단에 현재 커서의 위치(줄,칸) 표시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set autoindent&lt;/code&gt; 자동 들여쓰기&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set cindent&lt;/code&gt; C언어 자동 들여쓰기&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set shiftwidth=2&lt;/code&gt; 들여쓰기 2칸&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set tabstop=2&lt;/code&gt; 탭을 2칸으로&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set expandtab&lt;/code&gt; 탭을 스페이스로 대체&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set laststatus=2&lt;/code&gt; 상태표시줄 항상 표시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set backspace=indent,eol,start&lt;/code&gt; 백스페이스로 들여쓰기, 줄 끝, 줄 시작 삭제&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set showmode&lt;/code&gt; 현재 모드 표시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set hls&lt;/code&gt; 검색어 하이라이팅&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set colorcolumn=80&lt;/code&gt; 80칸에 세로줄 표시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set ff=unix&lt;/code&gt; 파일 포맷을 유닉스로&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set fileencodings=utf8&lt;/code&gt; 파일 인코딩&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set viminfo=&#39;50,&amp;lt;1000&lt;/code&gt; 최근 50개의 명령어 기억&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set history=1000&lt;/code&gt; vi 편집기록 기억갯수 &lt;code&gt;.viminfo&lt;/code&gt;에 기록&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;au FileType make setlocal noexpandtab&lt;/code&gt; makefile에서 탭을 스페이스로 대체하지 않음&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;highlight TailingWhitespace ctermbg=red guibg=red&lt;/code&gt; 끝에 공백이 있는 경우 빨간색으로 표시&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set cul&lt;/code&gt; 현재 커서가 있는 줄 강조&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set nowrapscan&lt;/code&gt; 검색시 문서 끝에서 처음으로 이동하지 않음&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set visualbell&lt;/code&gt; 경고음 대신 화면 깜빡임&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set tenc=utf-8&lt;/code&gt; 터미널 인코딩을 UTF-8로&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/shell/vim.png&#34; alt=&#34;vim&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NFV 도커 컨테이너 초심자 가이드</title>
      <link>https://markruler.github.io/posts/nfv/beginners-guide-docker-container-nfv/</link>
      <pubDate>Mon, 16 Nov 2020 22:40:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/nfv/beginners-guide-docker-container-nfv/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://telcocloudbridge.com/blog/beginners-guide-docker-container-nfv/&#34;&gt;Faisal Khan의 A Beginner&amp;rsquo;s Guide to Docker Container in NFV&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;li&gt;2016년 3월 3일에 쓰여진 글입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;떠오르는 도커(Docker) 컨테이너는 NFV를 혁신할 잠재력을 가지고 있습니다.&#xA;무엇보다 도커 컨테이너는 가상 머신에 비해 가볍고, 적은 오버헤드와 리소스만을 요구하며, 동일한 운영체제에서 실행되는 애플리케이션을 격리시킬 수 있습니다.&#xA;즉, NFV에서 VNF(가상 네트워크 기능)이 도커 컨테이너에서 완전히 격리된 상태로 실행될 수 있다면, 가상 머신이 필요 없을 지도 모릅니다.&#xA;하지만 그게 그렇게 쉬울까요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>쿠버네티스 컴포넌트를 로컬에서 직접 빌드 및 디버깅하기</title>
      <link>https://markruler.github.io/posts/kubernetes/local-build-kube/</link>
      <pubDate>Sun, 11 Oct 2020 14:48:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/kubernetes/local-build-kube/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;직접 빌드해서 사용한다면 쿠버네티스 기능을 확장해서 사용할 수 있다.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/blob/release-1.19/build/README.md&#34;&gt;kubernetes/build/README.md&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;사용할-명령어&#34;&gt;사용할 명령어&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# master 브랜치&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone --depth &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; https://github.com/kubernetes/kubernetes.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 특정 브랜치&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone --depth &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; --single-branch --branch release-1.19 https://github.com/kubernetes/kubernetes.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# cmd 디렉터리에 있는 다른 컴포넌트도 같은 방식으로 빌드할 수 있다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# cmd/kubeadm, kubectl, kubelet, kube-apiserver, kube-proxy, kube-controller-manager, kube-scheduler, ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make all &lt;span style=&#34;color:#eedd82&#34;&gt;WHAT&lt;/span&gt;=cmd/kubectl &lt;span style=&#34;color:#eedd82&#34;&gt;GOFLAGS&lt;/span&gt;=-v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 그냥 간단히 go build 명령도 가능하다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go build -o k cmd/kubectl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;빌드-실행-따라가기&#34;&gt;빌드 실행 따라가기&lt;/h2&gt;&#xA;&lt;h3 id=&#34;makefile&#34;&gt;Makefile&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;make 명령을 내릴 루트 디렉터리 Makefile을 보면 아래와 같이 다른 Makefile을 가리킨다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build/root/Makefile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;실제로-빌드되는-makefile&#34;&gt;실제로 빌드되는 Makefile&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/blob/release-1.19/build/root/Makefile&#34;&gt;build/root/Makefile&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Observability 용어 정리</title>
      <link>https://markruler.github.io/posts/cloud/monitor-trace-log-metric/</link>
      <pubDate>Fri, 02 Oct 2020 16:24:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/cloud/monitor-trace-log-metric/</guid>
      <description>&lt;h1 id=&#34;observability&#34;&gt;Observability&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;관측성&lt;/li&gt;&#xA;&lt;li&gt;관찰성&lt;/li&gt;&#xA;&lt;li&gt;관측 가능성&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;제어 이론에서 &amp;lsquo;observability&amp;rsquo;라는 용어는&#xA;시스템의 내부 상태 변수와 그에 따른 행동을&#xA;시스템에 대한 입력과 출력만 보고 결정할 수 있다면&#xA;그 시스템이 관측 가능하다는 것을 나타낸다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;event-logging&#34;&gt;Event Logging&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/cloud/kibana5-fluentd.png&#34; alt=&#34;kibana5-fluentd&#34;&gt;&#xA;&lt;em&gt;Fluentd-Kibana&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;로그는 시스템 프로세스의 개별 이벤트를 기록하는 것이다.&#xA;하지만 각 로그 스트림은 단일 인스턴스에 대해서만 알려주기 때문에&#xA;마이크로서비스에서 전체적인 모니터링을 하기에는 어려움이 있다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.fluentd.org/&#34;&gt;Fluentd&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/&#34;&gt;Elastic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.datadoghq.com/logs/&#34;&gt;Datadog Log Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;software-tracing&#34;&gt;Software Tracing&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/cloud/jaeger-embed-trace-view.png&#34; alt=&#34;jaeger-embed-trace-view&#34;&gt;&#xA;&lt;em&gt;Jaeger&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;사용자의 트래픽이 지나가는 애플리케이션의 전체 스택을 추적한다.&#xA;주로 서비스를 최적화하는 데 사용된다.&#xA;예를 들어, 특정 서비스에 병목이 예상되는 경우&#xA;트레이싱해서 어떤 부분인지 확인하고 최적화를 시도해볼 수 있다.&#xA;결국 트레이싱은 구조화된 형태의 로그 이벤트일 뿐이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NFV의 컴퓨팅 도메인에 대한 오해!</title>
      <link>https://markruler.github.io/posts/nfv/the-misunderstood-facts-about-compute-domain-in-nfv/</link>
      <pubDate>Thu, 01 Oct 2020 22:23:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/nfv/the-misunderstood-facts-about-compute-domain-in-nfv/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://telcocloudbridge.com/blog/the-misunderstood-facts-about-compute-domain-in-nfv/&#34;&gt;Faisal Khan의 The Misunderstood Facts about Compute Domain in NFV!&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;NFV에 대해 생각해 보세요! 그리고 x86 프로세서를 생각해 보세요&amp;hellip; 둘은 뗄 수 없는 사이입니다. 그렇죠?&lt;/p&gt;&#xA;&lt;p&gt;프로세서(컴퓨팅 파트)가 아무리 단순하게 들리더라도 NFV의 컴퓨팅 도메인(compute domain)이 노드의 컴퓨팅 프로세서(compute processor)가 같지 않다는 사실을 모르는 사람이 많을 것입니다. 사실&amp;hellip; 훨씬 더 많습니다.&lt;/p&gt;&#xA;&lt;p&gt;NFV의 &amp;ldquo;Compute Domain&amp;quot;과 &amp;ldquo;Compute Node&amp;quot;는 ETSI 정의에 따르면 동일한 것을 의미하지 않습니다. 이를 잘 알고 있으면 NFV 기본 아키텍처를 이해하는 데 많은 혼란을 피할 수 있으며, 벤더 및 고객과 이 주제에 대해 소통하는 과정에서 오해를 피할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NFV MANO 초심자 가이드</title>
      <link>https://markruler.github.io/posts/nfv/beginners-guide-to-nfv-mano/</link>
      <pubDate>Wed, 23 Sep 2020 00:58:08 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/nfv/beginners-guide-to-nfv-mano/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.telcocloudbridge.com/blog/a-beginners-guide-to-nfv-management-orchestration-mano/&#34;&gt;Faisal Khan의 A Beginner&amp;rsquo;s Guide to NFV Management &amp;amp; Orchestration (MANO)&lt;/a&gt;을 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#nfv%EC%97%90%EC%84%9C-mano%EB%9E%80&#34;&gt;NFV에서 MANO란?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#1-virtualized-infrastructure-manager-vim&#34;&gt;1. Virtualized Infrastructure Manager (VIM)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#2-virtual-network-function-manager-vnfm&#34;&gt;2. Virtual Network Function Manager (VNFM)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#3-nfv-orchestrator-nfvo&#34;&gt;3. NFV Orchestrator (NFVO)&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#resource-orchestration&#34;&gt;Resource Orchestration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#service-orchestration&#34;&gt;Service Orchestration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#4-repositories&#34;&gt;4. Repositories&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#vnf-catalog&#34;&gt;VNF Catalog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#network-services-ns-catalog&#34;&gt;Network Services (NS) Catalog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#nfv-instances&#34;&gt;NFV Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#nfvi-resources&#34;&gt;NFVI Resources&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#5-element-management-em&#34;&gt;5. Element Management (EM)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#6-ossbss&#34;&gt;6. OSS/BSS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#7-reference-points&#34;&gt;7. Reference Points&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;NFV가 처음이라면 NFV Management &amp;amp; Orchestration (NFV MANO)를 이해하려고 할 때 두 가지 어려운 점이 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>&#34;NFV 아키텍처&#34; 이해를 위한 치트 시트</title>
      <link>https://markruler.github.io/posts/nfv/cheat-sheet-understanding-nfv-architecture/</link>
      <pubDate>Tue, 22 Sep 2020 21:58:08 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/nfv/cheat-sheet-understanding-nfv-architecture/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.telcocloudbridge.com/blog/a-cheat-sheet-for-understanding-nfv-architecture/&#34;&gt;Faisal Khan의 A Cheat Sheet for Understanding &amp;ldquo;NFV Architecture&amp;rdquo;&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;시간이 없으신가요?&lt;/p&gt;&#xA;&lt;p&gt;쉽게 이해할 수 있는 NFV 용어/아키텍처에 대한 빠른 업데이트가 필요하신가요?&lt;/p&gt;&#xA;&lt;p&gt;그렇다면 NFV 아키텍처를 시작하는 데 필요한 모든 정보를 얻을 수 있는 아래 7가지 주요 블록을 보세요.&#xA;블록 번호 및 정의를 따라가세요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/nfv/nfv-architecture.png&#34; alt=&#34;nfv-architecture&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-vnf-virtual-network-function&#34;&gt;1. VNF (Virtual Network Function)&lt;/h2&gt;&#xA;&lt;p&gt;VNF는 가상화된 네트워크 요소로 NFV 아키텍처의 기본 블록입니다.&#xA;예를 들어 라우터를 가상화하면 라우터 VNF라고 부르고, 다른 예는 기지국(base station) VNF도 있습니다.&#xA;네트워크 요소의 한 가지 하위 기능(sub-function)만 가상화해도 VNF라고 합니다.&#xA;예를 들어 라우터의 다양한 하위 기능은 가상 라우터로서 함께 작동하는 별도의 VNF가 될 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>쿠버네티스 API 접근 제어</title>
      <link>https://markruler.github.io/posts/kubernetes/controlling-access-api/</link>
      <pubDate>Thu, 17 Sep 2020 06:58:08 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/kubernetes/controlling-access-api/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/controlling-access/&#34;&gt;쿠버네티스 공식 문서&lt;/a&gt;를 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!-- overview --&gt;&#xA;&lt;p&gt;이 페이지는 쿠버네티스 API에 대한 접근 제어의 개요를 제공한다.&lt;/p&gt;&#xA;&lt;!-- body --&gt;&#xA;&lt;p&gt;사용자는&lt;code&gt;kubectl&lt;/code&gt;, 클라이언트 라이브러리&#xA;또는 REST 요청을 통해&#xA;&lt;a href=&#34;https://kubernetes.io/docs/tasks/access-application-cluster/access-cluster/&#34;&gt;API에 접근한다&lt;/a&gt;.&#xA;사용자와 쿠버네티스 서비스 어카운트 모두 API에 접근할 수 있다.&#xA;요청이 API에 도달하면,&#xA;다음 다이어그램에 설명된 몇 가지 단계를 거친다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/kubernetes/access-control-overview.svg&#34; alt=&#34;Diagram of request handling steps for Kubernetes API request&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;전송-보안&#34;&gt;전송 보안&lt;/h2&gt;&#xA;&lt;p&gt;일반적인 쿠버네티스 클러스터에서 API는 443번 포트에서 서비스한다.&#xA;API 서버는 인증서를 제시한다.&#xA;이 인증서는 종종 자체 서명되기 때문에 일반적으로 사용자 머신의 &lt;code&gt;$USER/.kube/config&lt;/code&gt;은&#xA;API 서버의 인증서에 대한 루트 인증서를 포함하며,&#xA;시스템 기본 루트 인증서 대신 사용된다.&#xA;&lt;code&gt;kube-up.sh&lt;/code&gt;을 사용하여 클러스터를 직접 생성할 때&#xA;이 인증서는 일반적으로 &lt;code&gt;$USER/.kube/config&lt;/code&gt;에 자동으로 기록된다.&#xA;클러스터에 여러 명의 사용자가 있는 경우, 작성자는 인증서를 다른 사용자와 공유해야 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MEC 아키텍처 초심자 가이드</title>
      <link>https://markruler.github.io/posts/mec/beginners-guide-to-mec-architecture/</link>
      <pubDate>Sun, 13 Sep 2020 20:58:08 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/mec/beginners-guide-to-mec-architecture/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Faisal Khan의 &lt;a href=&#34;https://www.telcocloudbridge.com/blog/beginners-guide-to-mec-architecture-multi-access-edge-computing/&#34;&gt;Beginners Guide to MEC Architecture (Multi-access Edge Computing)&lt;/a&gt;을 번역한 글입니다.&#xA;저자의 허락을 받아 번역했습니다.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;MEC&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 아키텍처 가이드에 오신 것을 환영합니다!&lt;/p&gt;&#xA;&lt;p&gt;MEC는 5G의 저지연(low-latency) 서비스를 활용하려는 이동통신사들의 새로운 투자 물결을 가져올 것입니다.&#xA;이는 소비자와 더 가까운 곳, 즉 무선 기지국(radio site)과 가까운 곳에서 서비스를 운영하겠다는 것을 의미합니다.&lt;/p&gt;&#xA;&lt;p&gt;MEC는 서비스 사업자들에게 새로운 서비스 분야와 수익 창출의 수단입니다.&#xA;예를 들어 더 빠른 게임 경험, 증강/가상 현실, 커넥티드 카 등이 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;이러한 잠재력 때문에 Azure, AWS, Google과 같은 웹 스케일러(web scaler)도&#xA;이 흐름에 뛰어들어 갑자기 자신들의 MEC 플랫폼을 구축하는 데 자금을 투입하기 시작한 것입니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
