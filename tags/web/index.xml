<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>임창수 블로그</title>
    <link>https://markruler.github.io/tags/web/</link>
    <description>What, Why, How.</description>
    <generator>Hugo -- gohugo.io</generator>
    
      <language>ko-kr</language>
    
    
      <copyright>Im Changsu 2020 - 2023</copyright>
    
    
      <lastBuildDate>Tue, 12 Dec 2023 22:02:00 +0900</lastBuildDate>
    
    
    
      <atom:link href="https://markruler.github.io/tags/web/index.xml" rel="self" type="application/rss+xml" />
      
    
    
    
    <item>
      <title>Playwright를 사용해서 HTML 페이지를 PDF로 만들기</title>
      <link>https://markruler.github.io/posts/pdf/html-to-pdf/</link>
      <pubDate>Tue, 12 Dec 2023 22:02:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/pdf/html-to-pdf/</guid>
      <description>
        개요 팀내에서 문서 생성 도구로 PDFmyURL과 OZ e-Form을 사용하고 있다. 보통 이런 외부 솔루션은 테스트 할 때 매우 불편했다.
PDFmyURL은 PDF를 생성하는 2가지 인터페이스가 있다. 하나는 URL을 통해 페이지를 읽어서 PDF를 생성하는 인터페이스고, 하나는 raw HTML, CSS를 직접 전달해서 PDF를 생성하는 인터페이스다. URL 방식은 PDFmyURL 측 서버(서비스 외부)에서 페이지 조회가 가능해야 하기 때문에, private 환경에서는 테스트 할 수가 없다. 그래서 해당 기능들은 운영 환경에서 QA 테스트를 해야 하는 불상사가 생긴다. 더 큰 문제는 데이터를 Public으로 공개해야 하기 때문에 문서에 따라 개인 정보 유출 문제를 피해야 했다.
      </description>
    </item>
    
    
    
    <item>
      <title>Tomcat 이해하기</title>
      <link>https://markruler.github.io/posts/java/tomcat/</link>
      <pubDate>Tue, 23 Aug 2022 02:45:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/java/tomcat/</guid>
      <description>
        Architecture 이미지 출처 - Datadog
&amp;lt;!-- server.xml --&amp;gt; &amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;utf-8&amp;#39;?&amp;gt; &amp;lt;Server port=&amp;#34;8005&amp;#34; shutdown=&amp;#34;SHUTDOWN&amp;#34;&amp;gt; &amp;lt;Listener className=&amp;#34;org.apache.catalina.core.AprLifecycleListener&amp;#34; SSLEngine=&amp;#34;on&amp;#34; /&amp;gt; &amp;lt;Listener className=&amp;#34;org.apache.catalina.core.JasperListener&amp;#34; /&amp;gt; &amp;lt;Listener className=&amp;#34;org.apache.catalina.core.JreMemoryLeakPreventionListener&amp;#34; /&amp;gt; &amp;lt;Listener className=&amp;#34;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&amp;#34; /&amp;gt; &amp;lt;Listener className=&amp;#34;org.apache.catalina.core.ThreadLocalLeakPreventionListener&amp;#34; /&amp;gt; &amp;lt;GlobalNamingResources&amp;gt; &amp;lt;Resource name=&amp;#34;UserDatabase&amp;#34; auth=&amp;#34;Container&amp;#34; type=&amp;#34;org.apache.catalina.UserDatabase&amp;#34; description=&amp;#34;User database that can be updated and saved&amp;#34; factory=&amp;#34;org.apache.catalina.users.MemoryUserDatabaseFactory&amp;#34; pathname=&amp;#34;conf/tomcat-users.xml&amp;#34; /&amp;gt; &amp;lt;/GlobalNamingResources&amp;gt; &amp;lt;Service name=&amp;#34;Catalina&amp;#34;&amp;gt; &amp;lt;Connector port=&amp;#34;8080&amp;#34; protocol=&amp;#34;HTTP/1.1&amp;#34; redirectPort=&amp;#34;8443&amp;#34; connectionTimeout=&amp;#34;20000&amp;#34; /&amp;gt; &amp;lt;Connector port=&amp;#34;8009&amp;#34; protocol=&amp;#34;AJP/1.3&amp;#34; redirectPort=&amp;#34;8443&amp;#34; /&amp;gt; &amp;lt;Engine name=&amp;#34;Catalina&amp;#34; defaultHost=&amp;#34;localhost&amp;#34;&amp;gt; &amp;lt;Realm className=&amp;#34;org.apache.catalina.realm.LockOutRealm&amp;#34;&amp;gt; &amp;lt;Realm className=&amp;#34;org.apache.catalina.realm.UserDatabaseRealm&amp;#34; resourceName=&amp;#34;UserDatabase&amp;#34;/&amp;gt; &amp;lt;/Realm&amp;gt; &amp;lt;Host name=&amp;#34;localhost&amp;#34; appBase=&amp;#34;webapps&amp;#34; unpackWARs=&amp;#34;true&amp;#34; autoDeploy=&amp;#34;true&amp;#34;&amp;gt; &amp;lt;Valve className=&amp;#34;org.
      </description>
    </item>
    
    
    
    <item>
      <title>CS Visualized: CORS</title>
      <link>https://markruler.github.io/posts/web/cs-visualized-cors/</link>
      <pubDate>Sat, 02 Jan 2021 08:50:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/cs-visualized-cors/</guid>
      <description>
        리디아 할리(Lydia Hallie, @lydiahallie)가 쓴 CS Visualized: CORS를 번역한 글입니다. 저자의 허락을 받고 번역했습니다.   어쩌다 콘솔에서 &amp;ldquo;fetch 접근이 CORS 정책에 의해 차단되었습니다&amp;quot;라는 커다란 빨간색 오류를 보면 모든 개발자가 짜증을 느낍니다! 😬 임시방편이 몇 가지 있긴 하지만 오늘은 그 어떤 것도 사용하지 않겠습니다! 대신 CORS가 실제로 무엇을 하고 있는지 왜 우리에게 도움이 되는지 알아보도록 하겠습니다. 👏🏼
 ❗️ 이 글에서는 HTTP 기본에 대해 설명하지 않겠습니다. HTTP 요청과 응답에 대해 더 자세히 알고 싶으시다면 제가 얼마 전에 작성한 짧은 글이 있습니다.
      </description>
    </item>
    
    
  </channel>
</rss>
