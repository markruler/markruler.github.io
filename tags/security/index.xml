<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on 임창수</title>
    <link>https://markruler.github.io/tags/security/</link>
    <description>Recent content in Security on 임창수</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <managingEditor>imcxsu@gmail.com (Im Changsu)</managingEditor>
    <webMaster>imcxsu@gmail.com (Im Changsu)</webMaster>
    <copyright>Im Changsu 2020 - 2024</copyright>
    <lastBuildDate>Thu, 12 Sep 2024 00:17:00 +0900</lastBuildDate>
    <atom:link href="https://markruler.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Facebook은 경쟁사의 암호화된 모바일 앱 트래픽을 어떻게 가로챘을까?</title>
      <link>https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/</link>
      <pubDate>Thu, 12 Sep 2024 00:17:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://doubleagent.net/onavo-facebook-ssl-mitm-technical-analysis/&#34;&gt;How did Facebook intercept their competitor&amp;rsquo;s encrypted mobile app traffic?&lt;/a&gt;&#xA;| &lt;a href=&#34;https://x.com/haxrob&#34;&gt;HaxRob&lt;/a&gt;, 2024년 4월 14일&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;li&gt;각주는 역주입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;이 글은 페이스북(Facebook) 집단 소송에서 밝혀진 정보를 바탕으로 한 기술 조사입니다.&#xA;페이스북은 경쟁사의 정보를 얻기 위해 Onavo Protect 앱을 실행 중인 사용자 기기에서 암호화된 트래픽을 도청했었다는 이유로 재판이 진행 중입니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/onavo-facebook-ssl-mitm-technical-analysis/fbdark-1.webp&#34; alt=&#34;How did Facebook intercept their competitor&amp;rsquo;s encrypted mobile app traffic?&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;2024년 7월 28일 - 👋Hello &lt;a href=&#34;https://news.ycombinator.com/item?id=41090304&#34;&gt;Hackernews&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;현재 메타(Meta)를 상대로 한 집단 소송이 진행 중이며,&#xA;법원 문서에 따르면* 메타가 &lt;a href=&#34;https://en.wikipedia.org/wiki/Electronic_Communications_Privacy_Act&#34;&gt;도청법(Wiretap Act)&lt;/a&gt;을 위반했을 가능성이 있다고 언급되어 있습니다.&#xA;이 글에서의 분석은 &lt;a href=&#34;https://www.documentcloud.org/documents/24520332-merged-fb&#34;&gt;법원 문서&lt;/a&gt; 내용과&#xA;안드로이드(Android) 용 Onavo Protect 앱 패키지의 아카이브된 버전을 리버스 엔지니어링한 결과를 바탕으로 하고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>일상에서의 SSH</title>
      <link>https://markruler.github.io/posts/network/ssh/</link>
      <pubDate>Wed, 17 Jul 2024 22:40:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/ssh/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssh-key-%EC%83%9D%EC%84%B1&#34;&gt;SSH key 생성&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssh-server&#34;&gt;SSH Server&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#authoized_keys&#34;&gt;authoized_keys&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%A3%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-server-%EC%84%A4%EC%A0%95&#34;&gt;주로 사용하는 Server 설정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#ssh-client&#34;&gt;SSH Client&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%9A%B0%EC%84%A0-%EC%88%9C%EC%9C%84&#34;&gt;설정 파일 우선 순위&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#known_hosts&#34;&gt;known_hosts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%A3%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-host-%EC%84%A4%EC%A0%95&#34;&gt;주로 사용하는 Host 설정&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#local-forward&#34;&gt;Local Forward&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#password-%EC%9E%85%EB%A0%A5-%EC%97%86%EC%9D%B4-ssh-key%EB%A1%9C-client%EC%97%90%EC%84%9C-server%EB%A1%9C-%EC%A0%91%EC%86%8D%ED%95%98%EA%B8%B0&#34;&gt;Password 입력 없이 SSH Key로 Client에서 Server로 접속하기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%EC%B0%B8%EC%A1%B0&#34;&gt;참조&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;업무에서 자주 사용하는 SSH 설정을 정리합니다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;ssh-key-생성&#34;&gt;SSH key 생성&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# RSA&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#f60&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ED25519&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t ed25519 -f &lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;/.ssh/my-ed25519 -C &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt; -N &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;ssh-server&#34;&gt;SSH Server&lt;/h1&gt;&#xA;&lt;p&gt;SSH 데몬 설정 파일은 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;이다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install openssh-server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status ssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;authoized_keys&#34;&gt;authoized_keys&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;역할: SSH 서버가 접속을 허용할 클라이언트의 공개키를 저장하는 파일입니다. (사용자 인증 방식)&lt;/li&gt;&#xA;&lt;li&gt;위치: 보통 사용자의 홈 디렉토리 아래의 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;에 위치합니다.&lt;/li&gt;&#xA;&lt;li&gt;내용: 클라이언트의 공개 키가 저장됩니다.&#xA;서버는 클라이언트의 접속 시도 시,&#xA;이 파일에 저장된 공개 키와 클라이언트가 제공한 키를 비교하여 인증을 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;보안: 비밀번호 대신 공개 키를 사용하여 인증하기 때문에,&#xA;공개 키 인증 방식이 비밀번호 인증보다 더 안전합니다.&#xA;특히, 비밀번호를 통한 무차별 대입 공격에 대한 저항력이 높습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;SSH 데몬(sshd) 설치 혹은 실행 시 &lt;code&gt;/etc/ssh&lt;/code&gt; 디렉토리에 비대칭키 쌍이 생성 및 저장됩니다.&#xA;만약 설치 시 생성되지 않았다면, 맨 처음 실행할 때 생성됩니다.&#xA;&lt;code&gt;ssh-keygen&lt;/code&gt; 명령어를 사용해서 수동으로 생성 및 교체할 수도 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS Visualized: CORS</title>
      <link>https://markruler.github.io/posts/web/cs-visualized-cors/</link>
      <pubDate>Sat, 02 Jan 2021 08:50:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/cs-visualized-cors/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리디아 할리(Lydia Hallie, &lt;a href=&#34;https://twitter.com/lydiahallie&#34;&gt;@lydiahallie&lt;/a&gt;)가 쓴 &lt;a href=&#34;https://dev.to/lydiahallie/cs-visualized-cors-5b8h&#34;&gt;CS Visualized: CORS&lt;/a&gt;를 번역한 글입니다.&lt;/li&gt;&#xA;&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;어쩌다 콘솔에서 &amp;ldquo;fetch 접근이 CORS 정책에 의해 차단되었습니다&amp;quot;라는&#xA;커다란 빨간색 오류를 보면 모든 개발자가 짜증을 느낍니다! 😬&#xA;임시방편이 몇 가지 있긴 하지만 오늘은 그 어떤 것도 사용하지 않겠습니다!&#xA;대신 CORS가 실제로 무엇을 하고 있는지 왜 우리에게 도움이 되는지&#xA;알아보도록 하겠습니다. 👏🏼&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;❗️ 이 글에서는 HTTP 기본에 대해 설명하지 않겠습니다.&#xA;HTTP 요청과 응답에 대해 더 자세히 알고 싶으시다면 제가 얼마 전에&#xA;작성한 &lt;a href=&#34;https://www.lydiahallie.dev/blog/http11&#34;&gt;짧은 글&lt;/a&gt;이&#xA;있습니다. 🙂 제가 사용한 예시에서 HTTP/2 대신 HTTP/1.1을&#xA;사용하지만 CORS에 영향을 미치지는 않습니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
