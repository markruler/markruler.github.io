<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>임창수 블로그</title>
    <link>https://cxsu.github.io/tags/lydia-hallie/</link>
    <description>Don&#39;t Repeat Yourself!</description>
    <generator>Hugo -- gohugo.io</generator>
    
      <language>ko-kr</language>
    
    
      <managingEditor>imcxsu@gmail.com (Changsu)</managingEditor>
    
    
      <webMaster>imcxsu@gmail.com (Changsu)</webMaster>
    
    
      <copyright>2020 Im Changsu</copyright>
    
    
      <lastBuildDate>Sat, 09 Jan 2021 08:35:00 +0900</lastBuildDate>
    
    
    <atom:link rel="canonical" type="text/html" href="https://cxsu.github.io/tags/lydia-hallie/" title="" />
    
    
    
    <item>
      <title>CS Visualized: 유용한 깃(Git) 명령어</title>
      <link>https://cxsu.github.io/posts/shell/cs-visualized-useful-git-commands/</link>
      <pubDate>Sat, 09 Jan 2021 08:35:00 +0900</pubDate>
    
      <author>imcxsu@gmail.com (Changsu)</author>
    
      <guid>https://cxsu.github.io/posts/shell/cs-visualized-useful-git-commands/</guid>
      <description>
        리디아 할리(Lydia Hallie, @lydiahallie)가 쓴 CS Visualized: Useful Git Commands를 번역한 글입니다. 저자의 허락을 받고 번역했습니다.   Git이 정말 강력한 도구이긴 하지만, 대다수의 사람들은 끔찍한 악몽 😐 같다는 말도 공감할 거에요. 저는 항상 Git으로 작업할 때 어떤 일이 일어날지 머릿속으로 그려보는 것이 꽤 유용하다는 것을 알았습니다. 특정 명령을 실행할 때 브랜치는 어떻게 상호작용하고, 그것이 히스토리에 어떤 영향을 미칠까요? master에서 하드 리셋하고 origin 리포지터리로 force push한 후, .git 폴더를 rimraf하면 왜 동료가 아우성칠까요?
      </description>
    </item>
    
    
    
    <item>
      <title>CS Visualized: CORS</title>
      <link>https://cxsu.github.io/posts/web/cs-visualized-cors/</link>
      <pubDate>Sat, 02 Jan 2021 08:50:00 +0900</pubDate>
    
      <author>imcxsu@gmail.com (Changsu)</author>
    
      <guid>https://cxsu.github.io/posts/web/cs-visualized-cors/</guid>
      <description>
        리디아 할리(Lydia Hallie, @lydiahallie)가 쓴 CS Visualized: CORS를 번역한 글입니다. 저자의 허락을 받고 번역했습니다.   어쩌다 콘솔에서 &amp;ldquo;fetch 접근이 CORS 정책에 의해 차단되었습니다&amp;quot;라는 커다란 빨간색 오류를 보면 모든 개발자가 짜증을 느낍니다! 😬 임시방편이 몇 가지 있긴 하지만 오늘은 그 어떤 것도 사용하지 않겠습니다! 대신 CORS가 실제로 무엇을 하고 있는지 왜 우리에게 도움이 되는지 알아보도록 하겠습니다. 👏🏼
 ❗️ 이 글에서는 HTTP 기본에 대해 설명하지 않겠습니다. HTTP 요청과 응답에 대해 더 자세히 알고 싶으시다면 제가 얼마 전에 작성한 짧은 글이 있습니다.
      </description>
    </item>
    
    
  </channel>
</rss>
