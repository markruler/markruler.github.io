<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell on 임창수</title>
    <link>https://markruler.github.io/tags/shell/</link>
    <description>Recent content in shell on 임창수</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>imcxsu@gmail.com (Im Changsu)</managingEditor>
    <webMaster>imcxsu@gmail.com (Im Changsu)</webMaster>
    <copyright>Im Changsu 2020 - 2024</copyright>
    <lastBuildDate>Wed, 17 Jul 2024 22:40:00 +0900</lastBuildDate><atom:link href="https://markruler.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>일상에서의 SSH</title>
      <link>https://markruler.github.io/posts/network/ssh/</link>
      <pubDate>Wed, 17 Jul 2024 22:40:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/ssh/</guid>
      <description>SSH key 생성 SSH Server  authoized_keys 주로 사용하는 Server 설정   SSH Client  설정 파일 우선 순위 known_hosts 주로 사용하는 Host 설정 Git Local Forward   Password 입력 없이 SSH Key로 Client에서 Server로 접속하기 참조   업무에서 자주 사용하는 SSH 설정을 정리합니다.
 SSH key 생성 # RSA ssh-keygen -t rsa -b 4096 -C &amp;#34;&amp;#34; # ED25519 ssh-keygen -t ed25519 -f $HOME/.ssh/my-ed25519 -C &amp;#34;comment&amp;#34; -N &amp;#34;password&amp;#34; SSH Server SSH 데몬 설정 파일은 /etc/ssh/sshd_config이다.</description>
    </item>
    
    <item>
      <title>CLI 환경에서 소스 코드 관리하기</title>
      <link>https://markruler.github.io/posts/shell/git-commands/</link>
      <pubDate>Wed, 01 Dec 2021 23:28:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/git-commands/</guid>
      <description>Git Internal  차이가 아니라 스냅샷 데이터의 무결성 Git 프로젝트의 세 가지 단계   Git directory  HEAD refs info objects  tree blob (binary large object) commit tag   index Hash Function config   SCM: Source Code Management 포셀린(Porcelain) 명령어  init clone submodule subtree branch  xargs   tag switch  upstream   status add fetch commit merge pull rebase  squash와 fixup   cherry-pick stash  How git stash works   reset restore revert Git으로 버그 찾기  blame bisect   show log  Triple Dot(&amp;hellip;)   reflog: Reference logs diff push   플러밍(Plumbing) 명령어  rev-parse hash-object ls-tree ls-files cat-file write-tree commit-tree read-tree update-index   Advanced  Git Hooks Garbage Collection  Packfiles gc   prune   Git Server  Fork Branch protection rules   참고   Git의 모든 기능을 지원하는 것은 CLI 뿐이다.</description>
    </item>
    
    <item>
      <title>최소한의 안전한 Bash 스크립트 템플릿</title>
      <link>https://markruler.github.io/posts/shell/minimal-safe-bash-script-template/</link>
      <pubDate>Sun, 14 Feb 2021 15:22:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/minimal-safe-bash-script-template/</guid>
      <description>Maciej Radzikowski가 작성한 Minimal safe Bash script template (2020-12-14)를 번역한 글입니다. 저자의 허락을 받고 번역했습니다.   Bash 스크립트. 거의 모든 사람들이 언젠가 작성해야 하는 것입니다. 하지만 그 중 누구도 &amp;ldquo;맞아요, 저는 Bash 스크립트 작성하는 것을 사랑합니다&amp;quot;라고 말하지 않습니다. 거의 모든 사람들이 Bash 스크립트를 작성할 때 주의를 기울이지 않는 이유죠.
저는 여러분을 Bash 전문가로 만들려는 것이 아닙니다 (저도 전문가는 아닙니다). 다만 스크립트를 더 안전하게 만들어 줄 최소한의 템플릿을 보여 드리겠습니다.</description>
    </item>
    
    <item>
      <title>CS Visualized: 유용한 깃(Git) 명령어</title>
      <link>https://markruler.github.io/posts/shell/cs-visualized-useful-git-commands/</link>
      <pubDate>Sat, 09 Jan 2021 08:35:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/cs-visualized-useful-git-commands/</guid>
      <description>리디아 할리(Lydia Hallie, @lydiahallie)가 쓴 CS Visualized: Useful Git Commands를 번역한 글입니다. 저자의 허락을 받고 번역했습니다.   Git이 정말 강력한 도구이긴 하지만, 대다수의 사람들은 끔찍한 악몽 😐 같다는 말도 공감할 거에요. 저는 항상 Git으로 작업할 때 어떤 일이 일어날지 머릿속으로 그려보는 것이 꽤 유용하다는 것을 알았습니다. 특정 명령을 실행할 때 브랜치는 어떻게 상호작용하고, 그것이 히스토리에 어떤 영향을 미칠까요? master에서 reset --hard 하고 origin 리포지터리로 force push한 후, .</description>
    </item>
    
    <item>
      <title>VIM 에디터 명령어 정리</title>
      <link>https://markruler.github.io/posts/shell/vim-editor-shortcuts/</link>
      <pubDate>Mon, 07 Dec 2020 00:44:00 +0900</pubDate>
      <author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/shell/vim-editor-shortcuts/</guid>
      <description>업무 중에 구성 파일을 편집하기 위해 VIM 에디터를 사용할 일이 많은데, VIM 명령어 중에서도 가장 자주 쓰는 명령어를 정리한다.
 설정 설정 파일인 ~/.vimrc에서 큰따옴표(&amp;quot;, double quote)가 앞에 있다면 주석(comment)이 된다.
syntax on &amp;#34;구문강조 사용 colorscheme desert &amp;#34;color 폴더에 colorscheme 설치 필요 set background=dark &amp;#34;하이라이팅 lihgt / dark set autoindent set shiftwidth=2 &amp;#34;autoindent width set ts=2 &amp;#34;tabstop, width set softtabstop=2 set cindent &amp;#34;C Language indent set nu &amp;#34;number set cul &amp;#34;Highlight current line set hls &amp;#34;hlsearch, 검색어 강조 set incsearch &amp;#34;키워드 입력시 점진적 검색 set ic &amp;#34;ignorecase, 검색시 대소문자 무시 set expandtab &amp;#34;탭 대신 스페이스 set laststatus=2 &amp;#34;status line set nowrapscan &amp;#34;검색할 때 문서의 끝에서 처음으로 안돌아감 set visualbell &amp;#34;키를 잘못눌렀을 때 화면 프레시 set ruler &amp;#34;화면 우측 하단에 현재 커서의 위치(줄,칸) 표시 set fileencoding=utf-8 &amp;#34;파일저장인코딩 set tenc=utf-8 &amp;#34;터미널 인코딩 set history=1000 &amp;#34;vi 편집기록 기억갯수 .</description>
    </item>
    
  </channel>
</rss>
