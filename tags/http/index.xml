<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on 임창수</title>
    <link>https://markruler.github.io/tags/http/</link>
    <description>Recent content in Http on 임창수</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <managingEditor>imcxsu@gmail.com (Im Changsu)</managingEditor>
    <webMaster>imcxsu@gmail.com (Im Changsu)</webMaster>
    <copyright>Im Changsu | Since 2020</copyright>
    <lastBuildDate>Thu, 27 Mar 2025 08:45:00 +0900</lastBuildDate>
    <atom:link href="https://markruler.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>웹 페이지 성능 측정과 최적화</title>
      <link>https://markruler.github.io/posts/web/web-page-performance-optimization/</link>
      <pubDate>Thu, 27 Mar 2025 00:45:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/web/web-page-performance-optimization/</guid>
      <description>&lt;h1 id=&#34;성능-지표&#34;&gt;성능 지표&lt;/h1&gt;&#xA;&lt;p&gt;먼저 웹 페이지의 성능을 개선하려면 어떤 지표를 기준으로 삼을 것인지 정해야 합니다.&lt;/p&gt;&#xA;&lt;p&gt;Google이 제공하는 &lt;strong&gt;Web Vitals&lt;/strong&gt;는 사용자 경험을 측정하는 지표입니다.&#xA;이 중 가장 중요한 측정 항목 3개를 모아서 Core Web Vitals이라고 합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://web.dev/articles/lcp&#34;&gt;LCP (Largest Contentful Paint)&lt;/a&gt;: 가장 큰 콘텐츠가 화면에 표시되는 시간으로 &lt;strong&gt;로드 성능&lt;/strong&gt;을 측정.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://web.dev/articles/inp&#34;&gt;INP (Interaction to Next Paint)&lt;/a&gt;: 사용자 입력에 대한 응답 시간으로 &lt;strong&gt;상호작용&lt;/strong&gt;을 측정. (&lt;a href=&#34;https://web.dev/articles/fid&#34;&gt;FID, First Input Delay&lt;/a&gt;에서 대체)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://web.dev/articles/cls&#34;&gt;CLS (Cumulative Layout Shift)&lt;/a&gt;: &lt;strong&gt;시각적 안정성&lt;/strong&gt;을 측정.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이 외에도 웹 접근성(Web Accessibility)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, SEO, PWA 등을 고려하여 웹 페이지의 품질을 측정할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP 응답 패킷을 압축해서 Outbound 네트워크 비용 절약하기</title>
      <link>https://markruler.github.io/posts/network/http-response-compression/</link>
      <pubDate>Sun, 23 Mar 2025 00:10:00 +0900</pubDate><author>imcxsu@gmail.com (Im Changsu)</author>
      <guid>https://markruler.github.io/posts/network/http-response-compression/</guid>
      <description>&lt;p&gt;클라이언트 로딩 시간을 줄이기 위해 API 하나에 많은 걸 담기 시작했습니다.&#xA;브라우저에서는 HTTP/1.1 연결 시 최대 6개의 커넥션만 허용해주기 때문입니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&#xA;그래서 서버 응답 데이터의 사이즈가 점점 커지기 시작했고,&#xA;덩달아 CDN과 IDC 네트워크 트래픽(outbound) 비용이 늘기 시작했습니다.&#xA;그 중에는 변하지 않는 데이터도 포함되어 있고, 변하는 데이터도 포함되어 있습니다.&#xA;변하지 않는 데이터는 중간 레이어에서 캐시를 통해 해결할 수도 있지만,&#xA;이 글에서는 서버에서 응답 데이터를 압축해서 보내는 방법을 소개합니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;spring-boot-애플리케이션-설정&#34;&gt;Spring Boot 애플리케이션 설정&lt;/h1&gt;&#xA;&lt;p&gt;서버에서 클라이언트에 응답 시 응답 데이터를 압축해서 보낼 수 있습니다.&#xA;Spring Boot 애플리케이션이라면 간단하게 &lt;code&gt;application.yaml&lt;/code&gt; 파일에 아래 설정만 추가하면 됩니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
