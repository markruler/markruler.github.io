<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>임창수</title>
    <link>https://markruler.github.io/</link>
    <description>Recent content on 임창수</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>imcxsu@gmail.com (Im Changsu)</managingEditor>
    <webMaster>imcxsu@gmail.com (Im Changsu)</webMaster>
    <copyright>Im Changsu 2020 - 2024</copyright>
    <lastBuildDate>Sun, 24 Nov 2024 23:32:00 +0900</lastBuildDate>
    
        <atom:link href="https://markruler.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>서버 to 서버 요청 시 발생한 DNS 레이턴시</title>
        <link>https://markruler.github.io/posts/network/server-to-server-dns/</link>
        <pubDate>Thu, 13 Jun 2024 17:40:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/network/server-to-server-dns/</guid>
        <description>임창수 https://markruler.github.io/posts/network/server-to-server-dns/ -&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%B0%B0%EA%B2%BD&#34;&gt;배경&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%B6%84%EC%84%9D-dig-%EC%9C%BC%EB%A1%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8&#34;&gt;분석: dig 으로 테스트&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#nameserver-8888-%EB%A1%9C-%EC%A7%80%EC%A0%95&#34;&gt;nameserver 8.8.8.8 로 지정&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nameserver%EB%8A%94-resolvconf-%EC%84%A4%EC%A0%95%EC%9D%84-%EB%94%B0%EB%A6%84&#34;&gt;nameserver는 &lt;code&gt;resolv.conf&lt;/code&gt; 설정을 따름&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%B9%84%EA%B5%90&#34;&gt;비교&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%ED%95%B4%EA%B2%B0-%ED%98%B8%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EC%88%98%EC%A0%95&#34;&gt;해결: 호스트 파일 수정&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;배경&#34;&gt;배경&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;약 200ms 응답 속도가 예상되는 API가 불규칙적으로 2s까지 스파이크가 발생함.
&lt;ul&gt;
&lt;li&gt;해당 API에는 서버 to 서버로 요청하는 기능이 여러 개 포함되어 있음.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;환경: On-Premise(IDC) 환경에 애플리케이션 서버는 컨테이너가 아닌 스탠드얼론 호스트로 실행됨.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;분석-dig-으로-테스트&#34;&gt;분석: dig 으로 테스트&lt;/h1&gt;
&lt;h2 id=&#34;nameserver-8888-로-지정&#34;&gt;nameserver 8.8.8.8 로 지정&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dig @8.8.8.8 api.example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;첫번째 요청 292 msec&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; Query time: &lt;span style=&#34;color:#f60&#34;&gt;292&lt;/span&gt; msec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; SERVER: 8.8.8.8#53(8.8.8.8) (UDP)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; WHEN: Tue Jun &lt;span style=&#34;color:#f60&#34;&gt;11&lt;/span&gt; 11:00:54 KST &lt;span style=&#34;color:#f60&#34;&gt;2024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; MSG SIZE  rcvd: &lt;span style=&#34;color:#f60&#34;&gt;154&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2번째 요청 36 msec&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; Query time: &lt;span style=&#34;color:#f60&#34;&gt;36&lt;/span&gt; msec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; SERVER: 8.8.8.8#53(8.8.8.8) (UDP)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; WHEN: Tue Jun &lt;span style=&#34;color:#f60&#34;&gt;11&lt;/span&gt; 11:00:57 KST &lt;span style=&#34;color:#f60&#34;&gt;2024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; MSG SIZE  rcvd: &lt;span style=&#34;color:#f60&#34;&gt;154&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;nameserver는-resolvconf-설정을-따름&#34;&gt;nameserver는 &lt;code&gt;resolv.conf&lt;/code&gt; 설정을 따름&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /etc/resolv.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# LG 메인 네임 서버&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nameserver 164.124.101.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# LG 보조 네임 서버&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nameserver 203.248.252.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dig api.example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;첫번째 시도&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; Query time: &lt;span style=&#34;color:#f60&#34;&gt;17&lt;/span&gt; msec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; SERVER: 164.124.101.2#53(164.124.101.2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; WHEN: 화  6월 &lt;span style=&#34;color:#f60&#34;&gt;11&lt;/span&gt; 17:14:45 KST &lt;span style=&#34;color:#f60&#34;&gt;2024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; MSG SIZE  rcvd: &lt;span style=&#34;color:#f60&#34;&gt;154&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;두번째 시도: 간헐적으로 튀는 걸 확인할 수 있었음.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; Query time: &lt;span style=&#34;color:#f60&#34;&gt;230&lt;/span&gt; msec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; SERVER: 164.124.101.2#53(164.124.101.2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; WHEN: 화  6월 &lt;span style=&#34;color:#f60&#34;&gt;11&lt;/span&gt; 17:25:41 KST &lt;span style=&#34;color:#f60&#34;&gt;2024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;; MSG SIZE  rcvd: &lt;span style=&#34;color:#f60&#34;&gt;154&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;비교&#34;&gt;비교&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;LG DNS&lt;/code&gt;는 캐시가 되는 것 같은데 200~300 msec 응답 속도가 불규칙적으로 자주 발생함.
(현재 서버가 위치한 IDC 회선이 LG라서 LG DNS 사용)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -n &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;dig @164.124.101.2 api.example.com | grep \&amp;#34;Query time\&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 3 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 227 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 5 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 5 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 4 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 5 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 7 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 228 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 4 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 14 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 3 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 5 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 3 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 10 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;8.8.8.8&lt;/code&gt; 은 더 심함.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -n &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;dig @8.8.8.8 api.example.com | grep \&amp;#34;Query time\&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 303 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 121 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 342 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 49 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 239 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 305 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 49 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 239 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 129 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 120 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 50 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 39 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 162 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 48 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 37 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 37 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 277 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 173 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 50 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ;; Query time: 334 msec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;해결-호스트-파일-수정&#34;&gt;해결: 호스트 파일 수정&lt;/h1&gt;
&lt;p&gt;server -&amp;gt; L4 Switch -&amp;gt; server는 프록시 없이 설정할 수 없다고 함.
실제로 호스트 파일(&lt;code&gt;/etc/hosts&lt;/code&gt;)에 아래와 같이 설정하면 Connection도 얻지 못하고 타임아웃 발생함.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# &amp;lt;L4_IP_ADDRESS&amp;gt; api.example.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래와 같이 설정해서 각 노드에 있는 web server에서 서버 A, B로 로드 밸런싱 되도록 설정함.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;127.0.0.1 api.example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/image-20240611-080044.webp&#34; alt=&#34;Datadog Timeseries&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;처음에 서버 A(빨간색) 먼저 수정 후 응답 속도가 줄어든 것을 확인함.&lt;/li&gt;
&lt;li&gt;이후 서버 B(초록색)도 수정 후 응답 속도 줄어듦.&lt;/li&gt;
&lt;/ul&gt;
- https://markruler.github.io/posts/network/server-to-server-dns/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>Playwright를 사용해서 HTML 페이지를 PDF로 만들기</title>
        <link>https://markruler.github.io/posts/pdf/html-to-pdf/</link>
        <pubDate>Tue, 12 Dec 2023 22:02:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/pdf/html-to-pdf/</guid>
        <description>임창수 https://markruler.github.io/posts/pdf/html-to-pdf/ -&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;
&lt;p&gt;팀내에서 문서 생성 도구로 &lt;a href=&#34;https://pdfmyurl.com/html-to-pdf-api&#34;&gt;PDFmyURL&lt;/a&gt;과
&lt;a href=&#34;https://www.forcs.com/kr/oz-e-form/&#34;&gt;OZ e-Form&lt;/a&gt;을 사용하고 있다.
보통 이런 외부 솔루션은 테스트 할 때 매우 불편하다.&lt;/p&gt;
&lt;p&gt;PDFmyURL은 PDF를 생성하는 2가지 인터페이스가 있다.
하나는 URL을 통해 페이지를 읽어서 PDF를 생성하는 인터페이스고,
하나는 raw HTML, CSS를 직접 전달해서 PDF를 생성하는 인터페이스다.
URL 방식은 PDFmyURL 측 서버(서비스 외부)에서 페이지를 조회할 수 있어야 한다.
그래서 private 환경에서는 테스트 할 수가 없다.
그래서 해당 기능들은 운영 환경에서 QA 테스트를 해야 하는 불상사가 생긴다.
더 큰 문제는 데이터를 Public 환경에 노출해야 하기 때문에
데이터에 따라 개인 정보 유출 문제가 될 수 있다.&lt;/p&gt;
&lt;p&gt;OZ e-Form의 클라이언트 프로그램(OZ e-Form Designer)은 Windows만 지원한다.
그리고 OZ 에이전트와 script를 적극적으로 관리할 인력이 없다.
해당 기술은 활용도가 떨어지기 때문에 관심이 적을 수 밖에 없기 때문이다.&lt;/p&gt;
&lt;p&gt;그러다가 누군가의 실수로 PDFmyURL 서버에 동시에 수많은 요청을 보내게 되었다.
그러자 PDFmyURL은 우리를 차단해버렸다.
문의를 남겨도 해외 서비스라 그런지 대응이 느렸고,
PDFmyURL을 이용하는 서비스가 반나절동안 중단되었다.
언제 해결될지 기약이 없었다.
결국 다른 계정으로 라이센스를 추가 발급받아 해결했다.&lt;/p&gt;
&lt;p&gt;내부에서 관리 가능한 HTML to PDF 변환 도구가 간절하다고 느낀 시기였다.&lt;/p&gt;
&lt;h1 id=&#34;1차-시도-wkhtmltopdf&#34;&gt;1차 시도: wkhtmltopdf&lt;/h1&gt;
&lt;p&gt;이런 프로그램을 제작해 본 경험자가 없어서 막연히 ChatGPT에게 물어봤다.
가장 먼저 답변해준 방법은 &lt;a href=&#34;https://wkhtmltopdf.org/&#34;&gt;wkhtmltopdf&lt;/a&gt; 였다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 해당 도구는 한글을 출력하기 위해 한글 폰트를 별도 설치해야 했다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get -y install fonts-nanum wkhtmltopdf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;빠르게 시작하기 위해 Python의 &lt;code&gt;pdfkit&lt;/code&gt;과
오픈 소스 PDF 변환 툴인 &lt;code&gt;wkhtmltopdf&lt;/code&gt;를 사용해서 Flask 앱을 만들었다.
하지만 기존 출력물(크롬에서 &lt;a href=&#34;https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#printing&#34;&gt;window.print()&lt;/a&gt;)과
달리 PDF 출력물을 보면 CSS가 틀어지는 부분이 너무 많았다.&lt;/p&gt;
&lt;p&gt;리뷰하는 과정에서 확인해보니 문서를 읽지 않은 내 잘못이었다.
해당 홈페이지 첫 문장부터 &lt;code&gt;Qt WebKit rendering engine&lt;/code&gt; 이라고 설명한다.
&lt;code&gt;wk&lt;/code&gt;는 WebKit의 약자였고, Qt WebKit을 기반으로 변환하다보니
Chromium 기반으로 작성되어 있는 HTML이 그대로 보일 리 없었다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_browser_engines&#34;&gt;Comparison of browser engines&lt;/a&gt;&lt;/strong&gt; - Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;2차-시도-pyppeteer&#34;&gt;2차 시도: pyppeteer&lt;/h1&gt;
&lt;p&gt;기존에 Python으로 작성된 코드를 재사용하려고 Javascript 기반의 &lt;a href=&#34;https://github.com/puppeteer/puppeteer&#34;&gt;puppeteer&lt;/a&gt;
대신 python 기반의 &lt;a href=&#34;https://github.com/pyppeteer/pyppeteer&#34;&gt;pyppeteer&lt;/a&gt;을 사용했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Ubuntu 22.04에서 google-chrome 명령어 설치&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; apt-get install -y wget gnupg &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; sh -c &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;echo &amp;#34;deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list.d/google.list&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; apt-get update &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-khmeros fonts-kacst fonts-freefont-ttf libxss1 &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;      --no-install-recommends &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;    &amp;amp;&amp;amp; groupadd -r pptruser &amp;amp;&amp;amp; useradd -rm -g pptruser -G audio,video pptruser
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;google-chrome&lt;/code&gt;을 headless 모드로 실행해서 프린트하면
출력물이 브라우저 프린트(&lt;code&gt;window.print()&lt;/code&gt;)와 동일하게 나왔다.
(팀원 모두 Edge 아니면 Chrome을 사용함)
또한 private 환경에서도 출력할 수 있게 되었다.&lt;/p&gt;
&lt;h2 id=&#34;windowprint로-출력&#34;&gt;window.print()로 출력&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/pdf/htmltopdf/window.print.webp&#34; alt=&#34;window.print() - google.com&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;pyppeteer로-출력&#34;&gt;Pyppeteer로 출력&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/pdf/htmltopdf/pyppeteer.print.webp&#34; alt=&#34;pyppeteer - google.com&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3차-시도-microsoftplaywright&#34;&gt;3차 시도: microsoft/playwright&lt;/h1&gt;
&lt;p&gt;URL이 아닌 Raw HTML, Raw CSS를 전달해서 PDF를 출력하는 기능도 지원되어야 했다.
p&lt;strong&gt;y&lt;/strong&gt;ppeteer에선 HTML Content를 렌더링 할 때 Load 되는 것을 기다리지 않아서
이미지 렌더링(img src, background url 등)이 되지 않았다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setContent()&lt;/code&gt; 시 &lt;code&gt;waitUntil&lt;/code&gt; 옵션을 p&lt;strong&gt;u&lt;/strong&gt;ppeteer만 지원하고 있다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer/issues/907#issuecomment-472334126&#34;&gt;page.setContent(html, {waitUntil: &amp;rsquo;networkidle&amp;rsquo;}); · Issue #907 · puppeteer/puppeteer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/miyakogi/pyppeteer/issues/211&#34;&gt;setContent extra options · Issue #211 · miyakogi/pyppeteer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;반면 &lt;a href=&#34;https://github.com/microsoft/playwright-python&#34;&gt;Microsoft의 playwright&lt;/a&gt;는 해당 기능들을
모두 지원하면서, Javascript는 물론 Python도 지원했다.
결국 Content로 PDF를 출력하는 기능도 지원하기 위해 playwright로 변경했다.
&lt;a href=&#34;https://playwright.dev/docs/puppeteer&#34;&gt;puppeteer와 인터페이스를 유사하게 만들었기&lt;/a&gt;
때문에 변경하는 데에 많은 리소스가 들지 않았다.&lt;/p&gt;
&lt;p&gt;다음은 간단한 Raw Content를 PDF로 출력하는 토막 코드다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# python3 -m pip install playwright&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# python3 -m playwright install chromium  # Download to $HOME/.cache/ms-playwright/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# python3 main.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; logging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; asyncio
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;from&lt;/span&gt; playwright.async_api &lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; async_playwright, Playwright, PlaywrightContextManager, Browser, BrowserContext
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#ff0&#34;&gt;core_file&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    playwright_context_manager: PlaywrightContextManager = async_playwright()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;# https://playwright.dev/python/docs/api/class-playwright&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    playwright: Playwright = &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; playwright_context_manager.start()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;# https://playwright.dev/python/docs/api/class-browsertype#browser-type-launch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    browser: Browser = &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; playwright.chromium.launch(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        headless=&lt;span style=&#34;color:#f00&#34;&gt;True&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        timeout=&lt;span style=&#34;color:#f60&#34;&gt;10_000&lt;/span&gt;,  &lt;span style=&#34;color:#0f0&#34;&gt;# (ms)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        args=[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#0f0&#34;&gt;# https://peter.sh/experiments/chromium-command-line-switches/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;--no-sandbox&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;--single-process&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;--disable-dev-shm-usage&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;--disable-gpu&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;--no-zygote&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;# avoid &amp;#34;signal only works in main thread of the main interpreter&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        handle_sigint=&lt;span style=&#34;color:#f00&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        handle_sigterm=&lt;span style=&#34;color:#f00&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        handle_sighup=&lt;span style=&#34;color:#f00&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;# https://playwright.dev/python/docs/api/class-browser#browser-new-context&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging.debug(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;new_context:new_page&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context: BrowserContext = &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; browser.new_context()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    page = &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; context.new_page()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;# https://playwright.dev/python/docs/api/class-page#page-goto&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging.debug(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;set_content&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; page.set_content(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        html=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;Test&amp;lt;/span&amp;gt; Text&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        timeout=&lt;span style=&#34;color:#f60&#34;&gt;10_000&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;# load로 해야 img.src가 로드됨.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        wait_until=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;load&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;# domcontentloaded, load, networkidle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging.info(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;add_style_tag&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; page.add_style_tag(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        content=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;span{color:red;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;# https://playwright.dev/python/docs/api/class-page#page-pdf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging.debug(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;Generate PDF&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _pdf = &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; page.pdf(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        format=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;A4&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        landscape=&lt;span style=&#34;color:#f00&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print_background=&lt;span style=&#34;color:#f00&#34;&gt;True&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        display_header_footer=&lt;span style=&#34;color:#f00&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        margin={
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;top&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;10mm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;10mm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;10mm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;10mm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(_pdf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; context.close()  &lt;span style=&#34;color:#0f0&#34;&gt;# don&amp;#39;t forget to close the context, or it will create a core.{number} file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; browser.close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;await&lt;/span&gt; playwright.stop()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# python3 main.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; __name__ == &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    asyncio.run(core_file())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;구현-시-참고-사항&#34;&gt;구현 시 참고 사항&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CSS attribute 중 &lt;code&gt;page-break-***&lt;/code&gt; 를 사용하면 페이지를 원하는 부분에서 분리할 수 있다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;page-break-after: always;&lt;/code&gt; 해당 Element 이후에 내용이 있더라도 페이지를 분리한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;page-break-after: avoid;&lt;/code&gt; 해당 Element 이후에 페이지는 분리하지 않는다. 이후 내용이 페이지를 넘친다면 페이지 분리되긴 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PDF 생성 후 응답되기까지 2초 정도 소요된다.
&lt;ul&gt;
&lt;li&gt;PDFmyURL, OZ report와 비슷하다.&lt;/li&gt;
&lt;li&gt;1주일 기준
&lt;ul&gt;
&lt;li&gt;P50: 2.01s&lt;/li&gt;
&lt;li&gt;P95: 2.83s&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server to Server로 요청 시 Spring Boot에서 FeignClient로
&lt;a href=&#34;https://wildeveloperetrain.tistory.com/304&#34;&gt;x-www-form-urlencoded&lt;/a&gt;
데이터를 보내려면 &lt;code&gt;MultiValueMap&amp;lt;String, String&amp;gt;&lt;/code&gt;을 사용해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;참조&#34;&gt;참조&lt;/h1&gt;
&lt;h2 id=&#34;playwright&#34;&gt;&lt;strong&gt;Playwright&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://playwright.dev/python/&#34;&gt;공식 문서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/playwright-python&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devocean.sk.com/blog/techBoardDetail.do?ID=165090&#34;&gt;웹 테스트 자동화&lt;/a&gt;가 목적인 라이브러리임.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;webkit&#34;&gt;&lt;strong&gt;WebKit&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wkhtmltopdf.org/&#34;&gt;wkhtmltopdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chromium&#34;&gt;&lt;strong&gt;Chromium&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.chrome.com/articles/new-headless/&#34;&gt;Chrome’s Headless mode gets an upgrade: introducing &amp;ndash;headless=new | Chromium | Chrome for Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://markruler.github.io/posts/pdf/html-to-pdf/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>오라클 DBMS SE2 세션 사후 진단</title>
        <link>https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/</link>
        <pubDate>Sun, 30 Apr 2023 23:58:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/</guid>
        <description>임창수 https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/ -&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;
&lt;p&gt;현재 팀에서 구독 중인 Oracle DBMS의 라이센스는 Standard Edition 2의 Processor 라이센스(이하 SE2)다.
이 라이센스는 &lt;a href=&#34;https://www.cubrid.com/blog/3813513&#34;&gt;프로세서 최대 2개, CPU Threads 최대 16개&lt;/a&gt;까지 사용 가능하다.
만약 트래픽이 많지 않다면 이 정도 사양으로도 충분하겠지만,
트래픽이 많아지거나 DB를 비효율적으로 사용하게 되면 성능 저하가 발생할 수 있다.
&lt;strong&gt;하지만 우리는 성능 저하가 발생했을 때 이를 진단할 방법이 없었다.&lt;/strong&gt;
SE2의 경우 AWR(Automatic Workload Repository), ASH(Active Session History)와 같은
&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/dblic/Licensing-Information.html#GUID-68A4128C-4F52-4441-8BC0-A66F5B3EEC35&#34;&gt;Oracle Diagnostics Pack&lt;/a&gt;을
사용할 수 없다.&lt;/p&gt;
&lt;h1 id=&#34;db-진단-도구가-필요하다&#34;&gt;DB 진단 도구가 필요하다&lt;/h1&gt;
&lt;p&gt;연산이 오래 걸리는 쿼리의 경우 SQL을 튜닝해서 해결했다.
검색 기능의 경우 Elasticsearch에 데이터를 연동해서 Inverted index로 성능을 향상시켰다.&lt;/p&gt;
&lt;p&gt;하지만 어떤 경우에는 성능 저하가 발생했을 때 관련 애플리케이션 전체가 도미노처럼 쓰러졌다.
Oracle DBMS의 세션 정보는 실시간으로만 조회할 수 있었기 때문에 지나간 정보를 확인할 수 없었다.
이를 해결하기 위해 세션 정보를 수집하는 스크립트를 작성하고, 시각화할 필요가 있었다.&lt;/p&gt;
&lt;p&gt;Oracle DBMS의 현재 세션 정보들을 확인할 수 있는 동적 성능 뷰(&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/V-SESSION.html&#34;&gt;V$SESSION&lt;/a&gt;)에서
세션 정보를 수집하기 위해 사용한 SQL은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;SELECT&lt;/span&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;FROM&lt;/span&gt; (&lt;span style=&#34;color:#f00&#34;&gt;SELECT&lt;/span&gt; sess.sid,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.serial#,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             ROUND(sess.wait_time_micro / &lt;span style=&#34;color:#f60&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;)            wait_time_millis,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             ROUND(sess.time_since_last_wait_micro / &lt;span style=&#34;color:#f60&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;) time_since_last_wait_millis,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#f00&#34;&gt;CASE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#f00&#34;&gt;WHEN&lt;/span&gt; sess.status = &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;ACTIVE&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     &lt;span style=&#34;color:#f00&#34;&gt;THEN&lt;/span&gt; sess.last_call_et
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#f00&#34;&gt;ELSE&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#f00&#34;&gt;END&lt;/span&gt;                                          active_elapsed_time_secs,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.&lt;span style=&#34;color:#f00&#34;&gt;state&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.event,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.username,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.osuser,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.machine,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.program,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.&lt;span style=&#34;color:#f00&#34;&gt;type&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.sql_child_number,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.sql_exec_id,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.sql_exec_start,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.sql_id,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             (&lt;span style=&#34;color:#f00&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;sql&lt;/span&gt;.sql_fulltext
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f00&#34;&gt;FROM&lt;/span&gt; v$sql &lt;span style=&#34;color:#f00&#34;&gt;sql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f00&#34;&gt;WHERE&lt;/span&gt; sess.sql_id = &lt;span style=&#34;color:#f00&#34;&gt;sql&lt;/span&gt;.sql_id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f00&#34;&gt;FETCH&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;FIRST&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;ONLY&lt;/span&gt;) sql_fulltext,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.prev_exec_id,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.prev_exec_start,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             sess.prev_sql_id,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             (&lt;span style=&#34;color:#f00&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;sql&lt;/span&gt;.sql_fulltext
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f00&#34;&gt;FROM&lt;/span&gt; v$sql &lt;span style=&#34;color:#f00&#34;&gt;sql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f00&#34;&gt;WHERE&lt;/span&gt; sess.prev_sql_id = &lt;span style=&#34;color:#f00&#34;&gt;sql&lt;/span&gt;.sql_id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f00&#34;&gt;FETCH&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;FIRST&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;ONLY&lt;/span&gt;) prev_sql_fulltext,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             blocking_session
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f00&#34;&gt;FROM&lt;/span&gt; v$session sess
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f00&#34;&gt;WHERE&lt;/span&gt; sess.username != &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;SYS&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f00&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;BY&lt;/span&gt; logon_time &lt;span style=&#34;color:#f00&#34;&gt;DESC&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;WHERE&lt;/span&gt; (wait_time_millis &amp;gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;OR&lt;/span&gt; time_since_last_wait_millis &amp;gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;/*아래는 DBMS 시스템 쿼리를 제외시키기 위함*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;AND&lt;/span&gt; dbms_lob.compare(prev_sql_fulltext, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;update user$ set spare6=DECODE(to_char(:2, &amp;#39;&amp;#39;YYYY-MM-DD&amp;#39;&amp;#39;), &amp;#39;&amp;#39;0000-00-00&amp;#39;&amp;#39;, to_date(NULL), :2) where user#=:1&amp;#39;&lt;/span&gt;) != &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;AND&lt;/span&gt; dbms_lob.compare(prev_sql_fulltext, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;BEGIN :1 := sys.kupc$que_int.get_status(:2, :3); END;&amp;#39;&lt;/span&gt;) != &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;AND&lt;/span&gt; dbms_lob.compare(prev_sql_fulltext, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;UPDATE &amp;#34;SYSTEM&amp;#34;.&amp;#34;SYS_EXPORT_SCHEMA_01&amp;#34; SET value_n = :1 WHERE process_order = :2&amp;#39;&lt;/span&gt;) != &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;AND&lt;/span&gt; dbms_lob.compare(sql_fulltext, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;BEGIN :1 := sys.kupc$que_int.receive(:2); END;&amp;#39;&lt;/span&gt;) != &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;중점적으로 수집하고 싶었던 데이터는 &lt;strong&gt;Wait Event&lt;/strong&gt;와 &lt;strong&gt;SQL Full Text&lt;/strong&gt;였다.
이를 Elasticsearch에 저장하려면 식별자가 필요했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id = &lt;span style=&#34;color:#87ceeb&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;{&lt;/span&gt;prev_exec_id&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;{&lt;/span&gt;prev_sql_id&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;{&lt;/span&gt;unix_epoch_time(prev_exec_start)&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;먼저 고려했던 식별자는 &lt;code&gt;sql_exec_id&lt;/code&gt;와 &lt;code&gt;sql_id&lt;/code&gt;다.
하지만 대기 상태라면 &lt;code&gt;sql_exec_id&lt;/code&gt;는 &lt;code&gt;NULL&lt;/code&gt;이기 때문에 &lt;code&gt;prev_exec_id&lt;/code&gt;와 &lt;code&gt;prev_sql_id&lt;/code&gt;를 선택했다.
어느 정도 데이터가 쌓이고 살펴보니 &lt;code&gt;prev_exec_id&lt;/code&gt;와 &lt;code&gt;prev_sql_id&lt;/code&gt; 만으로도 충분히 식별되었다.
하지만 만에 하나를 위해 &lt;code&gt;prev_exec_start&lt;/code&gt;도 추가했다.
누적된 데이터를 Kibana로 시각화하면 다음과 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/db/oracle-dbms-session-kibana.png&#34; alt=&#34;Oracle DBMS Session to Kibana&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;사용-사례&#34;&gt;사용 사례&lt;/h1&gt;
&lt;p&gt;DBMS 성능 저하가 발생한 뒤 확인하는 Wait Event와 SQL은 후행 지표다.
메트릭을 모니터링하고 알람을 줄 수 있는 지표가 아니다.
이런 지표가 필요하다면 Prometheus나 Datadog을 사용한다.
우리가 처음 원했던 건 성능 저하가 발생했을 때 이를 진단할 방법이었다.&lt;/p&gt;
&lt;h2 id=&#34;resmgrcpu-quantum&#34;&gt;resmgr:cpu quantum&lt;/h2&gt;
&lt;p&gt;세션이 CPU 자원을 할당받기 위해 대기하는 이벤트&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;다.
Oracle DBMS에 Resource Manager(resmgr)가 활성화되어 있고
CPU 사용량이 제한(throttling)되어 있을 때 발생한다.&lt;/p&gt;
&lt;p&gt;먼저 IDC에서 CPU 사용량 알람이 지속적으로 발생했다.
대시보드를 확인해보니 Wait Event &lt;code&gt;resmgr:cpu quantum&lt;/code&gt;이 다수 발생했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/db/wait-event-cpu-quantum.png&#34; alt=&#34;Wait Event - cpu quantum&#34;&gt;&lt;/p&gt;
&lt;p&gt;해당 Wait Event가 발생한 SQL의 Execution Plan을 확인해보니,
실행 시간은 빠르지만 CPU cost가 높은 것이 집중적으로 실행되었다.
SE2는 리소스가 제한된 만큼 &lt;strong&gt;리소스를 효율적으로 사용하는 것이 속도만큼 중요했다&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;이는 Execution Plan을 확인하면서 SQL을 튜닝하는 방법으로 해결했다.
주로 인덱스를 변경하거나 캐싱하는 방법으로 해결했다.
불필요한 쿼리도 제거했다.&lt;/p&gt;
&lt;h2 id=&#34;enq-tx---row-lock-contention&#34;&gt;enq: TX - row lock contention&lt;/h2&gt;
&lt;p&gt;여러 개의 트랜잭션이 동시에 같은 데이터 블록에 접근하려고 할 때 발생하는 이벤트&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/db/wait-event-row-lock-contention.png&#34; alt=&#34;Wait Event - row lock contention&#34;&gt;&lt;/p&gt;
&lt;p&gt;해당 Wait Event가 발생한 SQL을 확인해보니
데이터 집계 후 집계 데이터를 마스터 테이블(Master Table)에 업데이트하는 쿼리가 많았다.&lt;/p&gt;
&lt;p&gt;분명 이 쿼리가 만들어질 당시에는 데이터가 많지 않아서 문제가 없었을 것이다&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;주목할 것은, 오라클에서 발생하는 Lock 경합의 대부분을 차지하는 &lt;code&gt;enq: TM - contention&lt;/code&gt; 이벤트&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;와
&lt;code&gt;enq: TX - row lock contention&lt;/code&gt; 이벤트&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;가 Concurrency가 아닌 Application으로 분류돼 있다는 사실이다.
&amp;hellip;
이런 유형의 프로그램 오류와 같이 분류한 것은 이들 문제가 DBA 이슈가 아니라 개발자 이슈임을 분명히 밝히고 있는 것이다.
Lock이 해제되지 않는 상황이 지속될 때 DBA가 할 수 있는 일은, Lock을 소유한 세션을 찾아 프로세스를 강제로 중지시키는 일뿐이다.
근본적인 해법은 애플리케이션 로직에서 찾아야 한다.&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;결론&#34;&gt;결론&lt;/h1&gt;
&lt;p&gt;리소스를 효율적으로 사용하는 것은 어떤 기술을 사용하든 중요할 것이다.
애초에 RDB가 적합하지 않을 수 있다.&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;어떤 기술을 사용하든 진단 도구부터 찾아보자.
기술 도입 후 진단 도구가 제공되지 않는다는 걸 알았다면, 시스템 장애에 대비하기 위해 직접 준비해야 할 수 있다.&lt;/p&gt;
&lt;h1 id=&#34;참조&#34;&gt;참조&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Oracle Database 19
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/dblic/Licensing-Information.html&#34;&gt;Licensing Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/oracle-wait-events.html&#34;&gt;Oracle Wait Events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;오라클 성능 고도화 - 원리와 해법 1, 조시형&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;각주&#34;&gt;각주&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/descriptions-of-wait-events.html#GUID-078224AC-3117-48ED-AC8A-4C570AD462A0&#34;&gt;resmgr:cpu quantum&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/descriptions-of-wait-events.html#GUID-2A907B53-E98C-44C3-BBF0-4C649D73DF07&#34;&gt;enq: TX - row lock contention&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;DML 테이블 Lock 경합 시 발생한다.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;DML 로우 Lock 경합 시 발생한다.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;오라클 성능 고도화 - 원리와 해법 1, 100쪽&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;적정 기술&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/db/oracle-dbms-session-diagnosis/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>Too many open files</title>
        <link>https://markruler.github.io/posts/java/too-many-open-files/</link>
        <pubDate>Mon, 20 Mar 2023 21:58:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/java/too-many-open-files/</guid>
        <description>임창수 https://markruler.github.io/posts/java/too-many-open-files/ -&lt;blockquote&gt;
&lt;p&gt;커버 이미지 출처: &lt;a href=&#34;https://stablediffusionweb.com/&#34;&gt;Stable diffusion&lt;/a&gt; &amp;ldquo;swimming pool lane pattern&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;증상&#34;&gt;증상&lt;/h1&gt;
&lt;p&gt;Spring framework로 만든 웹 애플리케이션에서 비동기로 HTTP 요청하는 기능을 개발하고 있었다.
요구 사항을 위해 동시에 1,000개 이상의 요청을 보낼 때가 있는데, &lt;code&gt;Too many open files&lt;/code&gt; 에러가 발생했다.
작업 PC(Ubuntu 22.04)에서 문제 없이 동작하던 프로그램이
IDC에 위치한 서버(CentOS 7)에서는 &lt;code&gt;OutOfMemoryError&lt;/code&gt;가 발생하면서 동작하지 않았다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.lang.OutOfMemoryError: unable to create new native thread
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.util.concurrent.ExecutionException: com.markruler.RuntimeException: request error
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Caused by: java.net.SocketException: Too many open files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;SocketException&lt;/code&gt;인데 &lt;code&gt;Too many open files&lt;/code&gt;? &lt;strong&gt;이게 OOM&lt;/strong&gt;?
이해되지 않았다.&lt;/p&gt;
&lt;p&gt;문제를 정의하기 위해 먼저 이해부터 해야 했다.&lt;/p&gt;
&lt;h1 id=&#34;분석&#34;&gt;분석&lt;/h1&gt;
&lt;h2 id=&#34;too-many-open-files&#34;&gt;Too many open files&lt;/h2&gt;
&lt;p&gt;근본적인 원인이 되는 &lt;code&gt;Too many open files&lt;/code&gt;는
프로세스에서 열려 있는 파일 디스크립터의 수가 시스템 제한을 초과하면 발생한다.
로컬 환경(Ubuntu 22.04)에서 먼저 테스트해봤다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 우선 별도의 세션을 연다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;prlimit&lt;/code&gt;를 이용해 현재 프로세스의 파일 디스크립터 제한을 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prlimit -n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기본적으로 &lt;strong&gt;4096&lt;/strong&gt;이 설정되어 있었다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RESOURCE DESCRIPTION              SOFT    HARD UNITS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NOFILE   max number of open files &lt;span style=&#34;color:#f60&#34;&gt;4096&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1048576&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ulimit&lt;/code&gt;를 이용해 열 수 있는 파일 디스크립터 수를 제한한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ulimit -n &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고 &lt;code&gt;cat&lt;/code&gt; 명령어를 실행하면 &lt;code&gt;Too many open files&lt;/code&gt;가 발생한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /etc/os-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# bash: start_pipeline: pgrp pipe: Too many open files&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ls: error while loading shared libraries: libselinux.so.1: cannot open shared object file: Error 24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다시 나갔다가 새로운 세션을 연다.
limit을 4로 설정하면 파일 내용이 정상적으로 출력된다.
하지만 에러가 발생한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ulimit -n &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /etc/os-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# bash: start_pipeline: pgrp pipe: Too many open files&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# PRETTY_NAME=&amp;#34;Ubuntu 22.04.2 LTS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;5로 설정하면 에러가 발생하지 않고 정상적으로 출력된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ulimit -n &lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /etc/os-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# PRETTY_NAME=&amp;#34;Ubuntu 22.04.2 LTS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이유가 무엇일까?&lt;/p&gt;
&lt;h2 id=&#34;파일-디스크립터-file-descriptor&#34;&gt;파일 디스크립터 (File descriptor)&lt;/h2&gt;
&lt;p&gt;리눅스에서는 파일을 열면(open) 파일 디스크립터를 반환한다.
반환된 파일 디스크립터는 &lt;code&gt;fdtable&lt;/code&gt;의 참조값을 나타내며, 파일을 읽고 쓰는데 사용된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;// https://github.com/torvalds/linux/blob/v6.2/include/linux/sched.h#L1088
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;stuct task_struct {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;/* Filesystem information: */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;struct&lt;/span&gt; fs_struct    *fs;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;/* Open file information: */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;struct&lt;/span&gt; files_struct *files;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;// https://github.com/torvalds/linux/blob/v6.2/include/linux/fdtable.h#L49
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt; * Open file table structure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;struct&lt;/span&gt; files_struct {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;struct&lt;/span&gt; fdtable __rcu *fdt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;struct&lt;/span&gt; file __rcu * fd_array[NR_OPEN_DEFAULT];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;정확히 fd를 어떻게 찾는지는 확인하지 않았다. 나중에 &lt;a href=&#34;https://m.blog.naver.com/arcyze/60048807080&#34;&gt;이 블로그&lt;/a&gt; 참고해서 공부하자.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fdtable&lt;/code&gt;의 0번 fd는 표준 입력(&lt;code&gt;stdin&lt;/code&gt;), 1번 fd는 표준 출력(&lt;code&gt;stdout&lt;/code&gt;).
2번 fd는 표준 에러(&lt;code&gt;stderr&lt;/code&gt;)다.
3번 fd부터 어떤 작업을 수행하는 프로세스가 필요한 파일을 가리킨다.
그래서 &lt;code&gt;ulimit -n 4&lt;/code&gt;로 설정하면 정상적으로 &lt;code&gt;cat&lt;/code&gt;의 출력이 나오는 것이다.&lt;/p&gt;
&lt;p&gt;다시 문제로 돌아가서 그럼 &lt;code&gt;java.net.SocketException: Too many open files&lt;/code&gt;는 왜 발생했던 걸까?&lt;/p&gt;
&lt;p&gt;Linux에서는 Socket도 파일로 취급한다.
그래서 소켓을 열 때마다 파일 디스크립터가 증가하고,
시스템 제한을 초과하면 &lt;code&gt;Too many open files&lt;/code&gt; 에러가 발생하는 것이다.&lt;/p&gt;
&lt;p&gt;문제가 발생했던 서버의 시스템 제한을 확인해봤다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prlimit -n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SOFT 값이 1024로 1024개의 파일 디스크립터를 열 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RESOURCE DESCRIPTION              SOFT    HARD UNITS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NOFILE   max number of open files &lt;span style=&#34;color:#f60&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1048576&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 제한을 늘리면 문제가 해결될 것 같았다.
그런데 다시 생각해보면 1024 만큼의 요청이 발생할 필요 없는 서버였다.
갑자기 요청이 늘어난 원인이 무엇일까?&lt;/p&gt;
&lt;p&gt;혼자가 아닌 함께 개발할 때,
내가 사용하려는 인터페이스가 이미 팀 내에서 통용되어 사용되고 있다면
해당 소스 코드를 복사해서 사용하는 경우가 많았다.
&lt;code&gt;OkHttpClient&lt;/code&gt;도 그대로 복사해서 사용했었다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OkHttpClient client = &lt;span style=&#34;color:#f00&#34;&gt;new&lt;/span&gt; OkHttpClient();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;하지만 &lt;code&gt;OkHttpClient&lt;/code&gt;를 생성자로 생성하면 OkHttp ConnectionPool 스레드가 생성된다.
파일 개수 제한이 4096인 로컬 환경에서 4,000개의 요청을 보내도록 테스트해봤다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://markruler.github.io/posts/java/jvm-monitoring/#visualvm&#34;&gt;VisualVM&lt;/a&gt;을 사용해서 스레드를 확인해봤다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/too-many-open-files/visualvm-bad-okhttp-connectionpool.png&#34; alt=&#34;visualvm-bad-okhttp-connectionpool&#34;&gt;&lt;/p&gt;
&lt;p&gt;OkHttp ConnectionPool의 스레드가 4,000개가 채 못 되어 &lt;code&gt;java.net.SocketException: Too many open files&lt;/code&gt;이 발생했다.&lt;/p&gt;
&lt;h1 id=&#34;문제-정의&#34;&gt;문제 정의&lt;/h1&gt;
&lt;p&gt;실제 문제는 불필요한 스레드가 과다 생성되어 발생한 것이다.
&lt;strong&gt;이 에러가 특히 위험한 이유는 시스템 제한을 초과했기 때문에 동일한 머신에 있는 다른 프로세스에도 영향을 준다는 것이다.&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;해결&#34;&gt;해결&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;OkHttp ConnectionPool&lt;/code&gt;을 재사용하기 위해 Spring Bean으로 등록했다.
&lt;strong&gt;이는 &lt;a href=&#34;https://square.github.io/okhttp/5.x/okhttp/okhttp3/-ok-http-client/index.html&#34;&gt;공식 문서&lt;/a&gt;에도 있는 내용이다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;OkHttpClients Should Be Shared&lt;/strong&gt;
&lt;br&gt;
OkHttp performs best when you create a single OkHttpClient instance
and reuse it for all of your HTTP calls.
This is because each client holds its own connection pool and thread pools.
Reusing connections and threads reduces latency and saves memory.
Conversely, creating a client for each request wastes resources on idle pools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; okhttp3.OkHttpClient;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; org.springframework.context.annotation.Bean;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; org.springframework.context.annotation.Configuration;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@Configuration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; OkHttpConfig {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Bean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; OkHttpClient &lt;span style=&#34;color:#ff0&#34;&gt;okHttpClient&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;new&lt;/span&gt; OkHttpClient();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; okhttp3.OkHttpClient;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;import&lt;/span&gt; org.springframework.stereotype.Component;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@Component
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; MyHttpClient {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;final&lt;/span&gt; OkHttpClient httpClient;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Autowired
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#ff0&#34;&gt;MyHttpClient&lt;/span&gt;(OkHttpClient httpClient) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;this&lt;/span&gt;.httpClient = httpClient;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;// ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다시 4,000개의 요청을 보내도록 테스트했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/too-many-open-files/visualvm-okhttpclient-bean.png&#34; alt=&#34;visualvm okhttpclient bean&#34;&gt;&lt;/p&gt;
&lt;p&gt;더 이상 불필요하게 스레드가 늘어나지 않았고,
스레드를 새로 생성할 필요도 없으니 성능 또한 개선되었다.
(평균 10초 → 3초)&lt;/p&gt;
&lt;p&gt;시스템 제한 설정을 변경할 필요 없이
&lt;code&gt;Too many open files&lt;/code&gt; 에러도 발생하지 않았다.&lt;/p&gt;
- https://markruler.github.io/posts/java/too-many-open-files/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>엘라스틱서치(Elasticsearch)와 데이터 인덱싱 전략</title>
        <link>https://markruler.github.io/posts/search/elasticsearch-indexing-strategy/</link>
        <pubDate>Wed, 21 Dec 2022 22:20:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/search/elasticsearch-indexing-strategy/</guid>
        <description>임창수 https://markruler.github.io/posts/search/elasticsearch-indexing-strategy/ -&lt;p&gt;엘라스틱서치(Elasticsearch)는 문서 기반 검색 엔진으로 빠른 키워드 검색 속도를 제공한다.
엘라스틱서치가 빠른 이유는 문서의 단어(term)들을 역색인(inverted index)하기 때문이다.
책에서 특정 단어를 찾는 걸 상상해 보자.
&lt;strong&gt;관계형 데이터베이스(RDB, Relational Database)는&lt;/strong&gt; &lt;code&gt;LIKE&lt;/code&gt; 검색을 통해 검색 키워드가 포함된 &lt;strong&gt;모든 페이지를 찾아야 한다&lt;/strong&gt;.
&lt;strong&gt;엘라스틱서치는&lt;/strong&gt; 책 뒷부분에 있는 색인(index)을 보고 &lt;strong&gt;필요한 페이지만 찾으면 된다&lt;/strong&gt;.
이 글에서는 e커머스 서비스에서 검색 성능을 개선하기 위해 도입한 엘라스틱서치와 인덱싱 전략에 대해 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%97%98%EB%9D%BC%EC%8A%A4%ED%8B%B1%EC%84%9C%EC%B9%98-%EB%8F%84%EC%9E%85-%EB%B0%B0%EA%B2%BD&#34;&gt;엘라스틱서치 도입 배경&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rdb-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%9D%B8%EB%8D%B1%EC%8B%B1%ED%95%98%EB%8A%94-%EC%A0%84%EB%9E%B5&#34;&gt;RDB 데이터를 인덱싱하는 전략&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%EA%B0%80%EC%9E%A5-%EC%89%AC%EC%9A%B4-%EB%B0%A9%EB%B2%95-batch&#34;&gt;1. 가장 쉬운 방법 Batch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-update-%EB%8D%B0%EC%9D%B4%ED%84%B0&#34;&gt;2. UPDATE 데이터&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-hard-delete-%EB%8D%B0%EC%9D%B4%ED%84%B0&#34;&gt;3. HARD DELETE 데이터&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EA%B0%9C%EC%84%A0%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%B6%80%EB%B6%84&#34;&gt;더 개선할 수 있는 부분&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%9D%B4-%EA%B3%A0%EB%AF%BC%EC%9D%84-%EB%82%98%EB%A7%8C-%ED%96%88%EB%8D%98-%EA%B2%8C-%EC%95%84%EB%8B%88%EC%97%88%EB%8B%A4&#34;&gt;이 고민을 나만 했던 게 아니었다&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;엘라스틱서치-도입-배경&#34;&gt;엘라스틱서치 도입 배경&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;매일 새벽에 장애가 발생하기 시작했다&lt;/strong&gt;.
유저 트래픽이 주로 새벽에 몰리는데, 이때 DB 레이턴시가 높아져서 모든 서버에 장애가 발생했다.
왜 DB 레이턴시가 높았을까?
현재 서비스에서 트래픽이 가장 많이 발생하는 페이지가 메인, 상품 검색, 상품 상세 페이지다.
이 중 검색 페이지에서 쿼리 대기 시간이 길어지고 있었다.
원인은 크게 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;LIKE %keyword%&lt;/code&gt; 검색&lt;/strong&gt; — 최악의 경우 DB는 모든 레코드를 찾아야 한다.
&lt;ul&gt;
&lt;li&gt;검색 페이지가 증가할수록 검색 속도는 더 느려졌다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;상품 수의 급증&lt;/strong&gt; — 상품 수가 약 50만 개에서 270만 개로 증가했다.
&lt;ul&gt;
&lt;li&gt;판매 중인 상품만 보면 약 6만 개에서 76만 개로 증가했다.&lt;/li&gt;
&lt;li&gt;개선 전에는 판매된 상품도 검색 결과에 포함되어 있었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;당장 개선이 필요했다&lt;/strong&gt;.
RDB에도 역인덱싱 타입이 있었지만, 참조할 만한 문서가 많지 않았다.
더 중요한 건 RDB에 부하가 발생하고 있었기 때문에 RDB에서 작업할 수 없던 상황이었다.
당시 검색 키워드를 저장하고 집계만 하던 기능에 사용되던 Elastic Cloud가 있었고,
MSP(Managed Service Provider)를 통해 계약되어 있던 상태라 기술지원을 받을 수 있었다.
그래서 빠른 도입과 개선을 위해 관리형 서비스(Managed Service)를 쓰는 게 더 낫다고 판단했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/search/elasticsearch-indexing-strategy/improve-response-time.png&#34; alt=&#34;Elasticsearch로 응답 속도 개선&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;엘라스틱서치를 검색 기능에 도입 후 서버 응답 속도 (Datadog APM)&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;개선 전 평균 응답 시간: &lt;strong&gt;약 6,000~7,000ms&lt;/strong&gt; (7일 집계)&lt;/li&gt;
&lt;li&gt;개선 후 평균 응답 시간: &lt;strong&gt;약 80~100ms&lt;/strong&gt; (7일 집계)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rdb-데이터를-인덱싱하는-전략&#34;&gt;RDB 데이터를 인덱싱하는 전략&lt;/h1&gt;
&lt;h2 id=&#34;1-가장-쉬운-방법-batch&#34;&gt;1. 가장 쉬운 방법 Batch&lt;/h2&gt;
&lt;p&gt;처음엔 &lt;a href=&#34;https://www.elastic.co/kr/blog/how-to-keep-elasticsearch-synchronized-with-a-relational-database-using-logstash&#34;&gt;Elastic 공식 문서&lt;/a&gt;를 참조해서
&lt;strong&gt;로그스태시(Logstash)&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;로 시작했지만 원하는 로그와 커스텀 동작을 추가하기 힘들었다.
그래서 성능 개선 후 바로 &lt;strong&gt;파이썬(Python)&lt;/strong&gt; 스크립트로 전환했다.
대략적인 ETL 과정은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extract: Oracle DBMS에서 마지막으로 조회한 &lt;em&gt;최근 수정된 날짜(&lt;code&gt;updated_at&lt;/code&gt;)&lt;/em&gt; 기준 이후로 데이터 조회&lt;/li&gt;
&lt;li&gt;Transform: 엘라스틱서치 인덱스의 스키마(Schema)에 맞게 데이터 수정&lt;/li&gt;
&lt;li&gt;Load: 엘라스틱서치에 데이터 인덱싱&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-update-데이터&#34;&gt;2. UPDATE 데이터&lt;/h2&gt;
&lt;p&gt;시간이 지날수록 RDB 데이터와 Elasticsearch 데이터에 차이가 발생하기 시작했다. (평균 약 300개/1d)
이러한 이유로 &lt;strong&gt;엘라스틱서치에서 조회 후 RDB에서 한번 더 조회하는 방식&lt;/strong&gt;을 사용했다.&lt;/p&gt;
&lt;p&gt;Python의 &lt;code&gt;deepdiff&lt;/code&gt; 모듈을 사용해서 RDB와 엘라스틱서치 데이터 전체를 비교해봤다.
특정 패턴을 분석해보니 내가 파악하지 못한 레거시 시스템이나 스케줄러에서 &lt;code&gt;updated_at&lt;/code&gt;을 업데이트 하지 않고 데이터를 수정한다는 것을 알게 되었다.
추가로 트랜잭션 문제로 인해 데이터에 차이가 발생하는 경우도 있었다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
간략히 설명하면 &lt;strong&gt;데이터 UPDATE를 위한 트랜잭션 시작 후 COMMIT 전에 배치 작업이 SELECT를 실행하면 업데이트 이벤트가 누락될 수 있다.&lt;/strong&gt;
&lt;code&gt;updated_at&lt;/code&gt; 기준이 아닌 전체 인덱싱도 고려해야 한다는 것을 느끼고 2가지 배치를 동시에 실행하기 시작했다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;실시간 배치 — &lt;code&gt;updated_at&lt;/code&gt;을 기준으로 5초 Fixed Delay&lt;/li&gt;
&lt;li&gt;전체 배치 — 최근 데이터까지 인덱싱하면 다시 처음부터 반복 (약 3시간 소요)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-hard-delete-데이터&#34;&gt;3. HARD DELETE 데이터&lt;/h2&gt;
&lt;p&gt;수정 후 데이터 차이가 많이 줄었다. (평균 약 2개/1d)
하지만 남은 건 어디서 발생하는지 한참 찾아야 했다.
운영상 상품을 HARD DELETE&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; 해야 하는 상황이 있었고, 이 정보가 팀원 간에 공유되지 않았었다.
지금까지 설명한 배치 방식은 Hard Delete에 대응하지 못한다.&lt;/p&gt;
&lt;p&gt;다른 대안이 있을까 찾아봤더니 &lt;strong&gt;CDC(Change Data Capture)와 같은 스트림(Stream) 방식&lt;/strong&gt;을 사용할 수 있다.
하지만 Oracle CDC&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, Apache Kafka Streams 혹은 Apache Flink 등의 시스템을 추가로 학습하고 도입해서 관리해야 한다는 점 때문에 선택하지 않았다.&lt;/p&gt;
&lt;p&gt;그럼 또 다른 대안은? &lt;strong&gt;상품 인덱스에 alias를 지정하고, 1일 1번 새로운 인덱스를 생성해서 변경한다&lt;/strong&gt;.
예를 들어 &lt;code&gt;product-20220102&lt;/code&gt; 인덱스를 생성하고,
전체 문서 인덱싱을 완료할 경우 &lt;code&gt;product&lt;/code&gt; alias를 &lt;code&gt;product-20220101&lt;/code&gt;에서 &lt;code&gt;product-20220102&lt;/code&gt;로 변경한다.
그럼 Hard Delete가 발생해도 최대 1일 동안만 차이가 발생한다.&lt;/p&gt;
&lt;h1 id=&#34;더-개선할-수-있는-부분&#34;&gt;더 개선할 수 있는 부분&lt;/h1&gt;
&lt;p&gt;검색 기능 구현에 Spring Data Elasticsearch 모듈을 사용했다.
&lt;strong&gt;인덱스 스키마를 Python과 Java 언어로 된 2개의 프로젝트에서 관리하는 것&lt;/strong&gt;이다.
엘라스틱서치 인덱스는 &lt;code&gt;@Entity&lt;/code&gt;로 정의했는데 이를 &lt;strong&gt;별도 모듈로 재사용&lt;/strong&gt;하면 Spring Batch를 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;현재 전체 데이터를 인덱싱하는데 평균 3시간이 걸린다.&lt;/strong&gt;
파이썬은 GIL(Global Interpreter Lock) 때문에 &lt;code&gt;multiprocessing&lt;/code&gt; 모듈을 사용해야 병렬 처리가 가능하지만,
Spring Batch로 전환하면 &lt;strong&gt;배치 작업을 병럴 처리해서 처리 속도를 향상&lt;/strong&gt;시킬 수 있다.&lt;/p&gt;
&lt;p&gt;하지만 Elastic Cloud를 사용한다면 &lt;strong&gt;비용(Credit)도 고려&lt;/strong&gt;해야 한다.
데이터 인덱싱을 더 많이, 더 자주 해보니 데이터 노드의 CPU 사용량이 높아지는 것을 확인했다.&lt;/p&gt;
&lt;p&gt;검색 기능의 서버 응답 속도는 평균 85.2ms/1w 이다&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;.
데이터에 차이가 발생하는 문제 때문에 &lt;strong&gt;엘라스틱서치에서 조회 후 RDB에서 한번 더 조회하는 방식&lt;/strong&gt;을 사용했는데,
배치 처리 속도를 개선하면 RDB를 조회하는 부분을 제거할 수 있다.
게다가 현재 서비스의 주요 이용자들은 &lt;strong&gt;아프리카, 중남미, 중앙아시아&lt;/strong&gt; 지역인데 여기서 검색 시 평균 응답 속도가 2.26s/1w 이다&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;.
RDB를 조회할 필요가 없어지면 마케팅 집중 국가와 가장 가까운 지역에 검색 서버를 두어서 응답 속도를 개선할 수 있을 것이다.&lt;/p&gt;
&lt;h1 id=&#34;이-고민을-나만-했던-게-아니었다&#34;&gt;이 고민을 나만 했던 게 아니었다&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/tune-for-indexing-speed.html&#34;&gt;Tune for indexing speed&lt;/a&gt; | Elastic&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/fBfUr_8Pq8A&#34;&gt;엘라스틱서치를 이용한 상품 검색 엔진 개발 일지&lt;/a&gt; | NHN FORWARD 22&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/1hpfNvcEbYQ&#34;&gt;샵바이 주문 검색 성능 개선기&lt;/a&gt; | NHN FORWARD 22&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redhat.com/topics/integration/what-is-change-data-capture&#34;&gt;What is change data capture (CDC)?&lt;/a&gt; | Red Hat
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.kakaopay.com/post/kakaopaysec-mongodb-cdc/&#34;&gt;Oracle에서 MongoDB로의 CDC Pipeline 구축&lt;/a&gt; | 카카오페이&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hyperconnect.github.io/2021/01/11/cdc-platform.html&#34;&gt;CDC &amp;amp; CDC Sink Platform 개발 1편 - CDC Platform 개발&lt;/a&gt; | 하이퍼커넥트&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Logstash 사용 시 고려했던 성능 관련 &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/7.17/performance-tuning.html&#34;&gt;문서1&lt;/a&gt;,
&lt;a href=&#34;https://www.elastic.co/guide/en/logstash/7.17/resiliency.html&#34;&gt;문서2&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/1hpfNvcEbYQ?t=862&#34;&gt;동일한 사례&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;strong&gt;Hard Delete&lt;/strong&gt;란 데이터를 삭제할 때 실제 데이터를 삭제하는 것을 말한다. SQL에서는 &lt;code&gt;DELETE&lt;/code&gt;.
이와 반대로 &lt;strong&gt;Soft Delete&lt;/strong&gt;는 삭제 플래그(ex: &lt;code&gt;is_deleted&lt;/code&gt;)만 수정하고 데이터를 삭제하지 않는다.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;Oracle Streams는 Oracle DBMS에 무료로 제공된 Oracle의 기본 CDC 도구였지만 12c 버전부터 Deprecated 되었다.
또 Debezium과 같은 오픈 소스 CDC 도구들은 Oracle LogMiner에서 redo log를 읽는 방식이었지만 19c부터 LogMiner는 Deprecated 되었다.
&lt;a href=&#34;https://bryteflow.com/oracle-cdc-change-data-capture-13-things-to-know/&#34;&gt;Oracle GoldenGate라는 유료 CDC 도구를 만들고 이를 사용하도록 유도하기 위해&amp;hellip;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;Avg: 85.2ms, P50:87.7ms, P75:106ms, P95:140ms (Datadog APM 최근 1주일 집계)&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;Datadog RUM 측정 기준&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/search/elasticsearch-indexing-strategy/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>Jenkins Workspace 동시성 문제</title>
        <link>https://markruler.github.io/posts/ci/jenkins-workspace-concurrency/</link>
        <pubDate>Mon, 14 Nov 2022 00:38:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/ci/jenkins-workspace-concurrency/</guid>
        <description>임창수 https://markruler.github.io/posts/ci/jenkins-workspace-concurrency/ -&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;
&lt;p&gt;Jenkins Pipeline을 사용해서 잡 스케줄러를 실행하기 위해
&lt;a href=&#34;https://www.jenkins.io/doc/book/pipeline/syntax/#triggers&#34;&gt;triggers&lt;/a&gt; directive를 사용했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    triggers {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cron(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;* * * * *&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#0f0&#34;&gt;// HERE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages {...}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    post {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        always {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cleanWs(cleanWhenNotBuilt: &lt;span style=&#34;color:#f00&#34;&gt;false&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    deleteDirs: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    disableDeferredWipeout: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    notFailBuild: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    patterns: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [pattern: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;.git/**&amp;#39;&lt;/span&gt;, type: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;EXCLUDE&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [pattern: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt;, type: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;EXCLUDE&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [pattern: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;.meta/**&amp;#39;&lt;/span&gt;, type: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;EXCLUDE&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;해당 Job은 빌드 간 메타데이터(&lt;code&gt;.meta/&lt;/code&gt;)를 공유해야 했기 때문에
&lt;a href=&#34;https://plugins.jenkins.io/ws-cleanup/&#34;&gt;cleanWs&lt;/a&gt; 플러그인에서도
&lt;code&gt;.git&lt;/code&gt; 디렉토리와 함께 삭제되지 않도록 설정했다.&lt;/p&gt;
&lt;p&gt;하지만 무슨 이유인지 메타데이터가 간헐적으로 누락되었고,
작업도 원하는대로 동작하지 않고 있었다.&lt;/p&gt;
&lt;h1 id=&#34;workspacelist&#34;&gt;WorkspaceList&lt;/h1&gt;
&lt;p&gt;Jenkins에서 Job을 실행할 경우 말그대로 작업 공간을 위한
Workspace(&lt;code&gt;$JENKINS_HOME/workspace&lt;/code&gt;) 디렉토리가 생성된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;// hudson.slaves.WorkspaceList&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;synchronized&lt;/span&gt; Lease &lt;span style=&#34;color:#ff0&#34;&gt;allocate&lt;/span&gt;(@NonNull FilePath base, Object context) &lt;span style=&#34;color:#f00&#34;&gt;throws&lt;/span&gt; InterruptedException {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#ee82ee&#34;&gt;int&lt;/span&gt; i = 1; ; i++) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        FilePath candidate = i == 1 ? base : base.withSuffix(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; + i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Entry e = inUse.get(candidate.getRemote());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; (e != &lt;span style=&#34;color:#f00&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !e.quick &amp;amp;&amp;amp; e.context != context)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f00&#34;&gt;continue&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f00&#34;&gt;return&lt;/span&gt; acquire(candidate, &lt;span style=&#34;color:#f00&#34;&gt;false&lt;/span&gt;, context);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Jenkins는 Workspace 목록을 별도의 메타데이터 파일에 저장해서 관리하지 않는다.
Jenkins 런타임의 &lt;a href=&#34;https://github.com/jenkinsci/jenkins/blob/jenkins-2.374/core/src/main/java/hudson/slaves/WorkspaceList.java&#34;&gt;WorkspaceList 객체&lt;/a&gt;에
전체 Workspace 목록을 저장한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;// hudson.slaves.WorkspaceList&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt; * Used by {@link Computer} to keep track of workspaces that are actively in use.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; WorkspaceList {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; AllocationAt &lt;span style=&#34;color:#f00&#34;&gt;extends&lt;/span&gt; Exception {...}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;      * Book keeping for workspace allocation.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;      */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; Entry {...}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;     * Represents a leased workspace that needs to be returned later.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; Lease &lt;span style=&#34;color:#f00&#34;&gt;implements&lt;/span&gt; &lt;span style=&#34;color:#0f0&#34;&gt;/*Auto*/&lt;/span&gt;Closeable {...}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;// ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;문제&#34;&gt;문제&lt;/h2&gt;
&lt;p&gt;만약 파이프라인에서 &lt;code&gt;Concurrent Build&lt;/code&gt; 옵션을 허용한 채
여러 개의 빌드를 동시에 실행하면 간혹 &lt;code&gt;job_name&lt;/code&gt; workspace에서 실행되지 않고
&lt;code&gt;job_name@2&lt;/code&gt; 에서만 실행되는 경우가 있다.
그런데 메타데이터 파일을 공유해서 사용해야 하는 경우
&lt;code&gt;job_name&lt;/code&gt; workspace에서 실행되기를 보장해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;해결&#34;&gt;해결&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Jenkins Master 프로세스를 재시작&lt;/strong&gt;해서 &lt;code&gt;WorkspaceList&lt;/code&gt;를 초기화하거나
&lt;strong&gt;새로운 이름의 Job을 생성&lt;/strong&gt;하면 새로운 이름의 workspace에서 빌드할 수 있다.
이후 &lt;a href=&#34;https://en.wikipedia.org/wiki/Thread_safety&#34;&gt;스레드 안전성&lt;/a&gt;을 보장하기 위해
&lt;code&gt;Concurrent Build&lt;/code&gt; 옵션을 허용하지 않은 채 빌드한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    triggers {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cron(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;* * * * *&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;// https://www.jenkins.io/doc/book/pipeline/syntax/#options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;    options {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;// cron 설정에 따라 빌드 간 겹치지 않도록 타임아웃을 설정한다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;        timeout(time: &lt;span style=&#34;color:#f60&#34;&gt;50&lt;/span&gt;, unit: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;SECONDS&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;// 빌드 스케줄이 2개 생성되면 &amp;#39;job_name&amp;#39;, &amp;#39;job_name@2&amp;#39; workspace가 생성되고
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;// metadata를 각각 관리하게 된다. abortPrevious 값을 true로 설정하면
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;// 이미 빌드 중인 프로세스와 겹쳐서 &amp;#39;job_name@2&amp;#39; workspace가 생성되더라도
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#0f0&#34;&gt;// 이후 빌드부터는 기존 빌드 프로세스가 제거되고 &amp;#39;job_name&amp;#39; workspace에서 실행된다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;        disableConcurrentBuilds(abortPrevious: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages {...}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;timeout과-cron&#34;&gt;timeout과 cron&lt;/h1&gt;
&lt;p&gt;Crontab(Unix의 Job Scheduler)처럼 Jenkins는 &lt;code&gt;cron&lt;/code&gt; 설정을 통해 잡 스케줄러를 만들 수 있다.
Jenkins &lt;code&gt;cron&lt;/code&gt;의 최소 간격은 1분(&lt;code&gt;* * * * *&lt;/code&gt;)이다.&lt;/p&gt;
&lt;h2 id=&#34;문제-1&#34;&gt;문제&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; 설정도 &lt;code&gt;cron&lt;/code&gt; 설정과 같이 1분으로 두면 timeout abort 되기 전
&lt;code&gt;job_name@2&lt;/code&gt; workspace 디렉토리가 생성되고 별도의 메타데이터를 갖는 Job이 실행될 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;해결-1&#34;&gt;해결&lt;/h2&gt;
&lt;p&gt;만약 &lt;code&gt;cron&lt;/code&gt; 간격을 1분으로 설정했다면 &lt;code&gt;timeout&lt;/code&gt;을 50초로 설정하는 등 차이를 둔다. (55초는 살짝 겹쳤다…)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timeout(time: &lt;span style=&#34;color:#f60&#34;&gt;50&lt;/span&gt;, unit: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;SECONDS&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://markruler.github.io/posts/ci/jenkins-workspace-concurrency/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>Tomcat 이해하기</title>
        <link>https://markruler.github.io/posts/java/tomcat/</link>
        <pubDate>Tue, 23 Aug 2022 02:45:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/java/tomcat/</guid>
        <description>임창수 https://markruler.github.io/posts/java/tomcat/ -&lt;h1 id=&#34;architecture&#34;&gt;Architecture&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/tomcat-architecture.png&#34; alt=&#34;Tomcat Architecture&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/tomcat-architecture-and-performance/&#34;&gt;이미지 출처 - Datadog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&amp;lt;!-- server.xml --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5e5e5&#34;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;utf-8&amp;#39;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;Server port=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8005&amp;#34;&lt;/span&gt; shutdown=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;SHUTDOWN&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.AprLifecycleListener&amp;#34;&lt;/span&gt; SSLEngine=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;on&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.JasperListener&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.JreMemoryLeakPreventionListener&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Listener className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.core.ThreadLocalLeakPreventionListener&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;GlobalNamingResources&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Resource name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;UserDatabase&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              auth=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              type=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.UserDatabase&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              description=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;User database that can be updated and saved&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              factory=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.users.MemoryUserDatabaseFactory&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              pathname=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;conf/tomcat-users.xml&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/GlobalNamingResources&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;Service name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Catalina&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Connector port=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt; protocol=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;HTTP/1.1&amp;#34;&lt;/span&gt; redirectPort=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt; connectionTimeout=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;20000&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Connector port=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8009&amp;#34;&lt;/span&gt; protocol=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;AJP/1.3&amp;#34;&lt;/span&gt; redirectPort=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;Engine name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Catalina&amp;#34;&lt;/span&gt; defaultHost=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;Realm className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.realm.LockOutRealm&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;Realm className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.realm.UserDatabaseRealm&amp;#34;&lt;/span&gt; resourceName=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;UserDatabase&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/Realm&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;Host name=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;  appBase=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;webapps&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            unpackWARs=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; autoDeploy=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;Valve className=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;org.apache.catalina.valves.AccessLogValve&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              directory=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;logs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              prefix=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;localhost_access_log.&amp;#34;&lt;/span&gt; suffix=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              pattern=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/Host&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/Engine&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/Service&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/Server&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;
&lt;p&gt;카탈리나 서버(Catalina Server)는 Tomcat 아키텍처 전체를 나타내며 서블릿 컨테이너를 말한다.
즉, 서블릿을 실행하기 위한 환경을 제공한다.
이러한 카탈리나 서버에는 하나 이상의 서비스(Service)가 포함된다.&lt;/p&gt;
&lt;h2 id=&#34;service&#34;&gt;Service&lt;/h2&gt;
&lt;p&gt;1개의 서비스는 1개 이상의 &lt;a href=&#34;#connector&#34;&gt;커넥터&lt;/a&gt;와 1개의 &lt;a href=&#34;#engine-container&#34;&gt;엔진&lt;/a&gt;를 포함한다.&lt;/p&gt;
&lt;h2 id=&#34;connector&#34;&gt;Connector&lt;/h2&gt;
&lt;p&gt;코요테(&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/http.html&#34;&gt;Coyote&lt;/a&gt;) 커넥터는
클라이언트와 Tomcat 사이의 통신을 관리한다.
TCP 포트에서 요청을 수신 대기(listen)한다.
그리고 해당 요청을 처리하고 응답을 만들기 위해 엔진(Engine)으로 보낸다.
기본 구성으로 &lt;code&gt;HTTP/1.1&lt;/code&gt; 와 &lt;code&gt;AJP/1.3&lt;/code&gt;(Apache JServ Protocol) 커넥터가 포함된다.&lt;/p&gt;
&lt;h2 id=&#34;container&#34;&gt;Container&lt;/h2&gt;
&lt;h3 id=&#34;engine-container&#34;&gt;Engine Container&lt;/h3&gt;
&lt;p&gt;Engine은 웹 애플리케이션의 라우팅을 담당한다.
여러 개의 &lt;a href=&#34;#host-container&#34;&gt;Host&lt;/a&gt;를 가질 수 있으며, 클라이언트의 요청을 적절한 Host로 전달한다.&lt;/p&gt;
&lt;p&gt;Tomcat은 &lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/jasper-howto.html&#34;&gt;재스퍼(Jasper) 엔진&lt;/a&gt;을 사용하여
JSP 파일을 서블릿(Servlet)으로 변환하여 클라이언트의 HTML 페이지로 렌더링한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;org.apache.catalina.LifecycleListener&lt;/code&gt; 를 구현한 구현체는 해당 엔진이 언제 시작되고 중지되는지 감시하기 위한 컴포넌트다.
설정하면 엔진의 수명 주기(Lifecycle) 이벤트 발생을 감지할 수 있다.&lt;/li&gt;
&lt;li&gt;줄리(JULI: &lt;code&gt;java.util.logging&lt;/code&gt;) 패키지를 사용해서 로깅(Logging)을 수행한다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;host-container&#34;&gt;Host Container&lt;/h3&gt;
&lt;p&gt;Host 요소는 실행 중인 Tomcat 서버의 개별 가상 호스트를 나타낸다.
클라이언트가 네트워크 이름을 사용하여 Tomcat 서버에 연결하려면
이 이름이 사용자가 속한 인터넷 도메인을 관리하는 DNS(도메인 이름 서비스) 서버에 등록되어 있어야 한다.
만약 Apache HTTP Server, NGINX와 같은 웹 프록시 서버를 사용한다면 불필요할 수 있다.
— 기본적으로 &lt;code&gt;localhost&lt;/code&gt; 로 입력되어 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET http:&lt;span style=&#34;color:#0f0&#34;&gt;//www.testwebapp.com/sample/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Request Headers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: keep-alive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.testwebapp.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Apache-HttpClient/&lt;span style=&#34;color:#f60&#34;&gt;4.5&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt; (Java/&lt;span style=&#34;color:#f60&#34;&gt;10.0&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같은 HTTP 요청은 &lt;code&gt;Host&lt;/code&gt; 헤더와 일치하는 호스트에 매핑한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CATALINA_BASE&lt;/code&gt; 변수를 사용하여 여러 Tomcat 인스턴스를 구성한 경우&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;가 아니라면
&lt;code&gt;CATALINA_BASE&lt;/code&gt; 는 Tomcat을 설치한 디렉토리인 &lt;code&gt;CATALINA_HOME&lt;/code&gt; 의 값으로 설정된다.&lt;/p&gt;
&lt;h3 id=&#34;context-container&#34;&gt;Context Container&lt;/h3&gt;
&lt;p&gt;Context 요소는 특정 가상 호스트(Host Container) 내에서 실행되는 웹 애플리케이션을 나타낸다.
단순하게 바라보면 &lt;code&gt;webapp/&lt;/code&gt; 디렉토리로 구분되는 것이 하나의 컨텍스트다.
&lt;code&gt;Host&lt;/code&gt;는 각각 고유한 경로를 가진 여러 &lt;code&gt;Context&lt;/code&gt;를 포함할 수 있다.
&lt;code&gt;Context&lt;/code&gt; 인터페이스를 구현한 &lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/api/org/apache/catalina/core/StandardContext.html&#34;&gt;&lt;code&gt;StandardContext&lt;/code&gt;&lt;/a&gt;가
주로 사용된다.&lt;/p&gt;
&lt;p&gt;서블릿 리스너인 &lt;code&gt;javax.servlet.ServletContextListener&lt;/code&gt; 와 &lt;code&gt;javax.servlet.HttpSessionListener&lt;/code&gt; 등은
&lt;code&gt;javax.servlet.ServletContextEvent&lt;/code&gt; 를 관리하는 &lt;code&gt;java.util.EventListener&lt;/code&gt; 를 구현한다.
— 엔진의 수명 주기를 관리하는 &lt;code&gt;LifecycleListener&lt;/code&gt; 와 다르다.
&lt;code&gt;LifecycleListener&lt;/code&gt; 를 구현한 &lt;code&gt;JasperListener&lt;/code&gt; 를 사용해서 Jasper 엔진을 관리하고,
Jasper 엔진을 사용해서 servlet을 관리한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; MyServletListener &lt;span style=&#34;color:#f00&#34;&gt;implements&lt;/span&gt; ServletContextListener {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f00&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#ee82ee&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#ff0&#34;&gt;addLifeCycleListener&lt;/span&gt;(ServletContextEvent event) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ApplicationContextFacade source = (ApplicationContextFacade) event.getSource();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ApplicationContext applicationContext = get(source, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        StandardContext standardContext = get(applicationContext, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        standardContext.addLifecycleListener(&lt;span style=&#34;color:#f00&#34;&gt;new&lt;/span&gt; LifecycleListenerImpl());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;valve&#34;&gt;Valve&lt;/h3&gt;
&lt;p&gt;밸브(Valve)는 컨테이너에 들어오는 HTTP 요청을 가로채는 필터다.
밸브는 톰캣에서만 쓸 수 있는 기술이고,
서블릿 필터(Servlet Filter)는 톰캣 이외의 다른 서블릿 컨테이너에서도 사용할 수 있는 기술이다.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h1 id=&#34;spring-application에서-httprequest의-흐름&#34;&gt;Spring application에서 HttpRequest의 흐름&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/http-servlet-request-flow.png&#34; alt=&#34;HTTP Servlet Request&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/xpdojo/java/tree/study/request-lifecycle-servlet/&#34;&gt;Demonstration&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;versions&#34;&gt;Versions&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://tomcat.apache.org/whichversion.html&#34;&gt;출처 문서&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Servlet Spec&lt;/th&gt;
          &lt;th&gt;JSP Spec&lt;/th&gt;
          &lt;th&gt;EL Spec&lt;/th&gt;
          &lt;th&gt;WebSocket Spec&lt;/th&gt;
          &lt;th&gt;Authentication (JASPIC) Spec&lt;/th&gt;
          &lt;th&gt;Apache Tomcat Version&lt;/th&gt;
          &lt;th&gt;Supported Java Versions&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;6.0&lt;/td&gt;
          &lt;td&gt;3.1&lt;/td&gt;
          &lt;td&gt;5.0&lt;/td&gt;
          &lt;td&gt;2.1&lt;/td&gt;
          &lt;td&gt;3.0&lt;/td&gt;
          &lt;td&gt;10.1.x&lt;/td&gt;
          &lt;td&gt;11 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5.0&lt;/td&gt;
          &lt;td&gt;3.0&lt;/td&gt;
          &lt;td&gt;4.0&lt;/td&gt;
          &lt;td&gt;2.0&lt;/td&gt;
          &lt;td&gt;2.0&lt;/td&gt;
          &lt;td&gt;10.0.x&lt;/td&gt;
          &lt;td&gt;8 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4.0&lt;/td&gt;
          &lt;td&gt;2.3&lt;/td&gt;
          &lt;td&gt;3.0&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;9.0.x&lt;/td&gt;
          &lt;td&gt;8 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3.1&lt;/td&gt;
          &lt;td&gt;2.3&lt;/td&gt;
          &lt;td&gt;3.0&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;8.5.x&lt;/td&gt;
          &lt;td&gt;7 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3.1&lt;/td&gt;
          &lt;td&gt;2.3&lt;/td&gt;
          &lt;td&gt;3.0&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;8.0.x (superseded)&lt;/td&gt;
          &lt;td&gt;7 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3.0&lt;/td&gt;
          &lt;td&gt;2.2&lt;/td&gt;
          &lt;td&gt;2.2&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;7.0.x (archived)&lt;/td&gt;
          &lt;td&gt;6 and later (7 and later for WebSocket)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2.5&lt;/td&gt;
          &lt;td&gt;2.1&lt;/td&gt;
          &lt;td&gt;2.1&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;6.0.x (archived)&lt;/td&gt;
          &lt;td&gt;5 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2.4&lt;/td&gt;
          &lt;td&gt;2.0&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;5.5.x (archived)&lt;/td&gt;
          &lt;td&gt;1.4 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2.3&lt;/td&gt;
          &lt;td&gt;1.2&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;4.1.x (archived)&lt;/td&gt;
          &lt;td&gt;1.3 and later&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2.2&lt;/td&gt;
          &lt;td&gt;1.1&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
          &lt;td&gt;3.3.x (archived)&lt;/td&gt;
          &lt;td&gt;1.1 and later&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;ajp-apache-jserv-protocol&#34;&gt;AJP: Apache JServ Protocol&lt;/h1&gt;
&lt;p&gt;웹 서버(httpd)의 인바운드 요청을
애플리케이션 서버(Tomcat)로 프록시할 수 있는 바이너리 프로토콜이다.&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h1 id=&#34;jmx-java-management-extensions&#34;&gt;&lt;strong&gt;JMX:&lt;/strong&gt; Java Management eXtensions&lt;/h1&gt;
&lt;p&gt;애플리케이션을 관리하고 모니터링하기 위한 Java API다. &lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jmx-architecture.png&#34; alt=&#34;JMX Architecture&#34;&gt;&lt;/p&gt;
&lt;p&gt;Probe Level의 MBean(Managed Bean)은 JMX에서 관리되는 객체다.
모니터링 및 관리할 수 있는 속성, 연산 및 알림을 제공한다.
Standard MBean, Dynamic MBean과 추가적으로 Model MBean, Open MBean, Monitor MBean으로 구분되며
이를 통해 구현할 수 있다.&lt;/p&gt;
&lt;p&gt;MBean Server는 MBean을 관리하고 제공하는 JMX 인프라의 핵심 구성 요소다.
애플리케이션은 MBean Server에 등록된 MBean을 조회하고 조작할 수 있다.
MBean Server는 MBean의 생명주기를 관리하고,
MBean의 속성 및 연산에 대한 액세스를 제공하며,
알림을 수신하는 등의 작업을 수행한다.&lt;/p&gt;
&lt;p&gt;JMX 에이전트는 JMX 서비스의 일부로, 애플리케이션을 관리하기 위한 JMX 인터페이스를 외부로 노출한다.
에이전트는 MBean Server와 통신하고, 원격 액세스를 허용하며,
MBean Server를 통해 애플리케이션의 관리 작업을 수행한다.
JMX 에이전트는 Java 애플리케이션 내부에 포함되거나, 별도의 프로세스로 실행될 수 있다.&lt;/p&gt;
&lt;h1 id=&#34;참조&#34;&gt;참조&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/architecture/overview.html&#34;&gt;Apache Tomcat 8 Architecture&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/server.html&#34;&gt;Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/service.html&#34;&gt;Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/http.html&#34;&gt;Connectors - HTTP/1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/engine.html&#34;&gt;Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/host.html&#34;&gt;Host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/config/context.html&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://howtodoinjava.com/tomcat/tomcats-architecture-and-server-xml-configuration-tutorial/&#34;&gt;Tomcat – Architecture and server.xml configuration&lt;/a&gt; - HowToDoInJava
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://howtodoinjava.com/tomcat/a-birds-eye-view-on-how-web-servers-work/&#34;&gt;How web servers work?&lt;/a&gt; - HowToDoInJava&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/servlet-flow-of-execution/&#34;&gt;Servlet – Flow Of Execution&lt;/a&gt; - GeeksforGeeks&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/tomcat-architecture-and-performance/&#34;&gt;Key metrics for monitoring Tomcat&lt;/a&gt; - Datadog&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/servletcontextlistener-servlet-listener-example&#34;&gt;ServletContextListener Servlet Listener Example&lt;/a&gt; - DigitalOcean&lt;/li&gt;
&lt;li&gt;&amp;lt;자바 고양이 톰캣(Tomcat) 이야기&amp;gt; - 최진식&lt;/li&gt;
&lt;li&gt;&amp;lt;아파치 톰캣 7 따라잡기&amp;gt; - Tanuj Khare&lt;/li&gt;
&lt;li&gt;&amp;lt;톰캣 최종 분석&amp;gt; (톰캣4, 5) - Budi Kurniawan, Paul Deck&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lesstif.com/linux-core/linux-web-server-web-application/nginx-apache-tomcat&#34;&gt;nginx 와 apache tomcat 연동하기&lt;/a&gt; - lessif&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ehdvudee.tistory.com/20&#34;&gt;AJP 프로토콜 모든 것을 분석 해보자&lt;/a&gt; - ehdvudee&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cheershennah.tistory.com/142&#34;&gt;아파치Apache - 톰캣 Tomcat  연동하는 이유?  AJP란?&lt;/a&gt; - cheersHena&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;각주&#34;&gt;각주&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-8.5-doc/logging.html&#34;&gt;Logging in Tomcat&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://howtodoinjava.com/tomcat/running-multiple-instances-of-tomcat-with-single-server-installation/&#34;&gt;Running multiple instances of Tomcat with single server installation&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://i5on9i.blogspot.com/2014/07/tomcat-valve-servlet-filter.html&#34;&gt;Tomcat 의 Valve 와 Servlet Filter&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_JServ_Protocol&#34;&gt;AJP: Apache JServ Protocol&lt;/a&gt; - Wikipedia&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Java_Management_Extensions&#34;&gt;JMX: Java Management Extensions&lt;/a&gt; - Wikipedia&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/java/tomcat/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>X Desktop Group</title>
        <link>https://markruler.github.io/posts/gui/x-based-desktop/</link>
        <pubDate>Sun, 21 Aug 2022 23:04:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/gui/x-based-desktop/</guid>
        <description>임창수 https://markruler.github.io/posts/gui/x-based-desktop/ -&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#freedesktoporg&#34;&gt;freedesktop.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B4%80%EB%A0%A8-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&#34;&gt;관련 소프트웨어&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xdg-user-dirs-xdg-user-directories&#34;&gt;xdg-user-dirs (XDG user directories)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xdg-open-open&#34;&gt;xdg-open (open)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#x-window-system&#34;&gt;X Window System&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#x11-forwarding&#34;&gt;X11 Forwarding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gnome-desktop&#34;&gt;GNOME Desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gui-toolkit&#34;&gt;GUI Toolkit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gtk-gimp-toolkit&#34;&gt;GTK: GIMP ToolKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#qt&#34;&gt;Qt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gui-%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%83%91-%ED%99%98%EA%B2%BD%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%B6%94%EA%B0%80-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&#34;&gt;GUI 데스크탑 환경과 관련된 추가 소프트웨어&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#vnc-virtual-network-computing&#34;&gt;VNC: Virtual Network Computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rdp-remote-desktop-protocol&#34;&gt;RDP: Remote Desktop Protocol&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%B0%B8%EC%A1%B0&#34;&gt;참조&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;freedesktoporg&#34;&gt;freedesktop.org&lt;/h1&gt;
&lt;p&gt;XDG는 &lt;code&gt;X Desktop Group&lt;/code&gt;의 약자로, &lt;a href=&#34;https://freedesktop.org&#34;&gt;freedesktop.org&lt;/a&gt;의 옛 이름이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;freedesktop.org hosts the development of free and open source software, focused on interoperability and shared technology for open-source graphical and desktop systems.
&lt;br&gt;
&lt;br&gt;
freedesktop.org는 오픈 소스 그래픽 및 데스크탑 시스템을 위한 상호 운용성과 공유 기술에 중점을 둔 무료 및 오픈 소스 소프트웨어의 개발을 주도합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;관련-소프트웨어&#34;&gt;관련 소프트웨어&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/&#34;&gt;Software&lt;/a&gt; - &lt;code&gt;freedesktop.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xdg-user-dirs-xdg-user-directories&#34;&gt;xdg-user-dirs (XDG user directories)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/xdg-user-dirs/&#34;&gt;xdg-user-dirs&lt;/a&gt;는 사용자 홈 디렉터리에서 &amp;ldquo;well known&amp;rdquo; 디렉토리를 관리하기 위한 도구입니다.
&lt;ul&gt;
&lt;li&gt;well known 디렉토리? Downloads, Documents, Music, Pictures, Videos 등 사용자 홈 디렉터리에 자주 사용되는 디렉토리를 말한다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/XDG_user_directories&#34;&gt;XDG user directories&lt;/a&gt; - archilinux&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printenv | grep XDG_
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# XDG_SESSION_ID=57404&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# XDG_RUNTIME_DIR=/run/user/1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# XDG_SESSION_TYPE=tty&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# XDG_SESSION_CLASS=user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;man xdg-user-dirs-update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# xdg-user-dirs-update - Update XDG user dir configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;man xdg-user-dir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# xdg-user-dir - Find an XDG user dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xdg-user-dir DESKTOP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /home/markruler/Desktop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;전역 설정&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /etc/xdg/user-dirs.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# the XDG_CONFIG_HOME and/or XDG_CONFIG_DIRS to override this&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;enabled&lt;/span&gt;=True
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;filename_encoding&lt;/span&gt;=UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /etc/xdg/user-dirs.defaults&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Default settings for user directories&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# The values are relative pathnames from the home directory and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# will be translated on a per-path-element basis into the users locale&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;DESKTOP&lt;/span&gt;=Desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;DOWNLOAD&lt;/span&gt;=Downloads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;TEMPLATES&lt;/span&gt;=Templates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PUBLICSHARE&lt;/span&gt;=Public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;DOCUMENTS&lt;/span&gt;=Documents
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;MUSIC&lt;/span&gt;=Music
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PICTURES&lt;/span&gt;=Pictures
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;VIDEOS&lt;/span&gt;=Videos
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Another alternative is:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#MUSIC=Documents/Music&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#PICTURES=Documents/Pictures&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#VIDEOS=Documents/Videos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;유저 설정&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ~/.config/user-dirs.dirs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# This file is written by xdg-user-dirs-update&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# If you want to change or add directories, just edit the line you&amp;#39;re&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# interested in. All local changes will be retained on the next run.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Format is XDG_xxx_DIR=&amp;#34;$HOME/yyy&amp;#34;, where yyy is a shell-escaped&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# homedir-relative path, or XDG_xxx_DIR=&amp;#34;/yyy&amp;#34;, where /yyy is an&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# absolute path. No other format is supported.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_DESKTOP_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Desktop&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_DOWNLOAD_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Downloads&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_TEMPLATES_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Templates&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_PUBLICSHARE_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Public&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_DOCUMENTS_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Documents&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_MUSIC_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Music&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_PICTURES_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Pictures&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;XDG_VIDEOS_DIR&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;/Videos&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ~/.config/user-dirs.locale&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;en_US
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xdg-open-open&#34;&gt;xdg-open (open)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/xdg-utils/&#34;&gt;xdg-open&lt;/a&gt;은 주어진 파일이나 URL을 사용자의 기본 애플리케이션으로 열어주는 도구다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;디렉토리를 가리키면 파일 관리자가 열린다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;간혹 열리지 않는 경우가 있는데 GNOME 데스크탑 환경에서는 파일 관리자인 &lt;code&gt;nautilus&lt;/code&gt; 패키지를 설치해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xdg-open .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;파일을 가리키면 지정된 MIME 타입에 따라 알맞은 프로그램이 실행된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ~/.config/mimeapps.list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Default Applications]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text/html=google-chrome.desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x-scheme-handler/http=google-chrome.desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x-scheme-handler/https=google-chrome.desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Added Associations]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;image/png=gimp_gimp.desktop;pinta_pinta.desktop;shotwell-viewer.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text/x-csrc=code.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;image/jpeg=shotwell-viewer.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;application/sql=code.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text/markdown=code.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text/html=google-chrome.desktop;code.desktop;microsoft-edge.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text/plain=code.desktop;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;x-window-system&#34;&gt;X Window System&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.x.org/&#34;&gt;X.Org&lt;/a&gt;은 &lt;a href=&#34;https://en.wikipedia.org/wiki/X_Window_System&#34;&gt;X 윈도우 시스템&lt;/a&gt;(X Window System, X11)을 만들었다.&lt;/li&gt;
&lt;li&gt;유닉스 계열 운영 체제에서 일반적으로 사용되는 &lt;a href=&#34;https://en.wikipedia.org/wiki/Bitmap&#34;&gt;비트맵&lt;/a&gt; 디스플레이용 &lt;a href=&#34;https://en.wikipedia.org/wiki/Windowing_system&#34;&gt;윈도우 시스템&lt;/a&gt;이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;x11-forwarding&#34;&gt;X11 Forwarding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;macOS에서 &lt;a href=&#34;https://www.xquartz.org/&#34;&gt;XQuartz&lt;/a&gt;를 사용하여 원격으로 X11 포워딩을 할 수 있다.
&lt;ul&gt;
&lt;li&gt;SSH 데몬 설정에 X11 포워딩을 허용해야 한다.&lt;/li&gt;
&lt;li&gt;RHEL에서 &lt;code&gt;xorg-x11-apps&lt;/code&gt; 패키지는 &lt;a href=&#34;https://access.redhat.com/solutions/3887371&#34;&gt;9부터 deprecated&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# sshd_config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#X11Forwarding no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#X11DisplayOffset 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#X11UseLocalhost yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;X11Forwarding yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;X11DisplayOffset &lt;span style=&#34;color:#f60&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;X11UseLocalhost yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd -t | sshd -T
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl reload sshd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;macOS에서 XQuartz 설치 후 X11 연결&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# macOS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask xquartz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 재시작&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -X user@host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Activate the web console with: systemctl enable --now cockpit.socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;X Window System이 동작하는지 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;firefox
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# No matching fbConfigs or visuals found&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/gui/xdg/x-firefox.png&#34; alt=&#34;Firefox&#34;&gt;&lt;/p&gt;
&lt;p&gt;혹은 xterm 으로 확인&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# dnf provides xterm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnf install xterm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xterm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gnome-desktop&#34;&gt;GNOME Desktop&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.freedesktop.org/wiki/GNOME/&#34;&gt;GNOME Desktop&lt;/a&gt; is an attractive and useful desktop environment created by the GNU project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNOME 설정법&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gconf&lt;/strong&gt; - XML based database (backend system). The older one.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dconf&lt;/strong&gt; - BLOB based database (backend system). The newer one.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gsettings&lt;/strong&gt; - CLI tool to edit settings. Looks like it works only with Dconf (although I saw somewhere that it might work with Gconf).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gnome-shell --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# GNOME Shell 41.8.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock animation-time 0.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode FIXED &lt;span style=&#34;color:#0f0&#34;&gt;# 투명도 모드&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock background-opacity 0.6 &lt;span style=&#34;color:#0f0&#34;&gt;# 배경 투명도&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock running-indicator-style DASHES &lt;span style=&#34;color:#0f0&#34;&gt;# 실행 중인 앱 표시 형태&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock intellihide-mode FOCUS_APPLICATION_WINDOWS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size &lt;span style=&#34;color:#f60&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#0f0&#34;&gt;# 범위: 16-64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false &lt;span style=&#34;color:#0f0&#34;&gt;# 화면에 아이콘이 꽉 차지 않을 때 여백을 두지 않음&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock show-windows-preview true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock show-favorites true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock show-trash true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock show-mounts true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock multi-monitor true &lt;span style=&#34;color:#0f0&#34;&gt;# 모니터가 여러 개일 때 어느 모니터에서든 dock을 볼 수 있음&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock scroll-action cycle-windows &lt;span style=&#34;color:#0f0&#34;&gt;# 아이콘 위에서 마우스 스크롤하면 여러 윈도우를 이동할 수 있음&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock hot-keys true &lt;span style=&#34;color:#0f0&#34;&gt;# `super`+`num`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock hotkeys-show-dock true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gsettings set org.gnome.shell.extensions.dash-to-dock force-straight-corner false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;gui-toolkit&#34;&gt;GUI Toolkit&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kernelpanic.kr/25&#34;&gt;출처&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;GTK&lt;/th&gt;
          &lt;th&gt;QT&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;지원언어&lt;/td&gt;
          &lt;td&gt;C, C++, Python 등&lt;/td&gt;
          &lt;td&gt;C++, Python 등&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;플랫폼&lt;/td&gt;
          &lt;td&gt;Linux, Windows, MacOS&lt;/td&gt;
          &lt;td&gt;Linux, WIndows, MacOS&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;라이센스&lt;/td&gt;
          &lt;td&gt;LGPL2.1&lt;/td&gt;
          &lt;td&gt;LGPL, GPL, 상용 라이센스&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;대표 데스크탑 환경&lt;/td&gt;
          &lt;td&gt;GNOME, Xfce&lt;/td&gt;
          &lt;td&gt;KDE&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;gtk-gimp-toolkit&#34;&gt;GTK: GIMP ToolKit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/GTK&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GNOME Desktop: desktop environment&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP (GNU Image Manipulation Program)&lt;/a&gt;: raster graphics editor&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt;: office suite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/firefox/&#34;&gt;Mozilla Firefox&lt;/a&gt;: web browser&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thunderbird.net/&#34;&gt;Mozilla Thunderbird&lt;/a&gt;: email client&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;qt&#34;&gt;Qt&lt;/h2&gt;
&lt;p&gt;Qt(&amp;ldquo;cute&amp;quot;로 발음)는 GUI 프로그램 개발에 널리 쓰이는 크로스 플랫폼 소프트웨어다.
서버용 콘솔과 명령 줄 도구와 같은 CLI 프로그램 개발에도 사용된다.
그래픽 사용자 인터페이스를 사용하는 경우에는 Qt를
&lt;a href=&#34;https://en.wikipedia.org/wiki/Widget_toolkit&#34;&gt;Widget toolkit&lt;/a&gt;으로 분류한다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/KDE&#34;&gt;KDE&lt;/a&gt;: K(ool) Desktop Environment
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kdenlive.org/&#34;&gt;kdenlive&lt;/a&gt;: video editing software&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gui-데스크탑-환경과-관련된-추가-소프트웨어&#34;&gt;GUI 데스크탑 환경과 관련된 추가 소프트웨어&lt;/h1&gt;
&lt;h2 id=&#34;vnc-virtual-network-computing&#34;&gt;VNC: Virtual Network Computing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RFB 프로토콜(Remote Frame Buffer protocol)을 이용하여 원격으로 다른 컴퓨터를 제어하는 그래픽 데스크탑 공유 시스템이다.&lt;/li&gt;
&lt;li&gt;RealVNC, TightVNC, TigerVNC 등이 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rdp-remote-desktop-protocol&#34;&gt;RDP: Remote Desktop Protocol&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RDP는 Microsoft에서 만든 프로토콜로 Windows에서는 &lt;a href=&#34;https://learn.microsoft.com/windows-server/administration/windows-commands/mstsc&#34;&gt;MSTSC&lt;/a&gt;(Microsoft Terminal Services Client)를 사용하여 원격 데스크탑을 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;XRDP, MS 원격 데스크탑, 팀뷰어 등이 있다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/neutrinolabs/xrdp&#34;&gt;XRDP&lt;/a&gt;는 리눅스 서버에 RDP로 연결할 수 있다.
&lt;ul&gt;
&lt;li&gt;XDG에서 만든 건 아니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/azure/virtual-machines/linux/use-remote-desktop&#34;&gt;Ubuntu에 원격 데스크탑을 사용하도록 xrdp 설치 및 구성&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;참조&#34;&gt;참조&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Freedesktop.org&#34;&gt;freedesktop.org&lt;/a&gt; - Wikipedia&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://askubuntu.com/questions/249887/gconf-dconf-gsettings-and-the-relationship-between-them&#34;&gt;Ask Ubuntu&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Qt_(software)&#34;&gt;Qt&lt;/a&gt; - Wikipedia&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/gui/x-based-desktop/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>Load Balancer를 활용해서 배포 프로세스를 개선해보자</title>
        <link>https://markruler.github.io/posts/ci/ci-with-lb/</link>
        <pubDate>Wed, 17 Aug 2022 03:44:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/ci/ci-with-lb/</guid>
        <description>임창수 https://markruler.github.io/posts/ci/ci-with-lb/ -&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%9A%94&#34;&gt;개요&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B8%B0%EC%A1%B4-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4&#34;&gt;기존 프로세스&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%84%A0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-continuous-delivery&#34;&gt;개선 프로세스 (Continuous Delivery)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8F%84%EC%9E%85-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EB%B0%9C%EC%83%9D%ED%95%9C-%EB%AC%B8%EC%A0%9C%EB%93%A4&#34;&gt;도입 과정에서 발생한 문제들&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#active-health-check%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%98%EB%8B%A4&#34;&gt;Active Health Check가 필요하다&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iptables-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%8B%A4%EC%8B%9C-%EC%8B%9C%EC%9E%91%ED%95%B4%EC%95%BC-%ED%95%A0-%EB%95%8C&#34;&gt;iptables 서비스를 다시 시작해야 할 때&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#httpd%EB%A5%BC-%EB%8B%A4%EC%8B%9C-%EC%8B%A4%ED%96%89%ED%95%B4%EC%95%BC-%ED%95%A0-%EB%95%8C&#34;&gt;httpd를 다시 실행해야 할 때&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%84%A0%EC%9D%98-%EC%97%AC%EC%A7%80%EA%B0%80-%EC%9E%88%EB%8B%A4&#34;&gt;개선의 여지가 있다&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sessionrepositoryfilter-%EC%97%90%EB%9F%AC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%91%EB%8B%B5&#34;&gt;&lt;code&gt;SessionRepositoryFilter&lt;/code&gt; 에러 페이지 응답&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#proxy&#34;&gt;Proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#akamai-%EC%97%90%EB%9F%AC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%91%EB%8B%B5&#34;&gt;Akamai 에러 페이지 응답&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#haproxy-%EC%A0%84%ED%99%98&#34;&gt;HAProxy 전환&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%84%A0%EC%96%B8%ED%98%95-%EB%B0%B0%ED%8F%AC-gitops&#34;&gt;선언형 배포 (GitOps?)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84-%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을 거리&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B0%81%EC%A3%BC&#34;&gt;각주&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;
&lt;p&gt;현재 팀에서 빌드-배포 도구로 Bamboo를 사용하고 있다.
놀랍게도 개발자가 커밋한 소스 코드를 운영 환경에 반영하기까지 14단계의 수동 작업이 필요했다.
그래서 개발팀 모두가 배포 작업에 많은 부담을 갖고 있었다.
한번 빌드하고 배포하는데 최소 30분에서 길면 1시간까지 걸리는 이 불필요한 시간을 줄이고 싶었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/ci/old-system-2022.webp&#34; alt=&#34;개발중인 서비스의 기존 시스템&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;화살표 방향은 단순히 요청의 흐름을 나타낸다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;단일 서버의 처리량(Capacity)을 초과한 대량 요청 트래픽은 속도 저하나 서비스 지연 또는 장애를 유발한다.
이 상황을 대비해 부하(Load)를 여러 서버로 분산(Balancing)하는 것을 서버 로드 밸런싱(SLB: Server Load Balancing)이라고 한다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
기존 운영 환경에서는 Alteon Application Switch를 Layer 4 로드 밸런서로 사용하고 있었다.
하지만 80번 포트에 대한 Layer 4 헬스체크만 하고 있었기 때문에 애플리케이션 배포 시 연결을 비활성화해야 했다.
배포 작업의 대부분이 이 작업에 의존했다.
웹 애플리케이션이 실행 중인 서버에 Apache HTTP 서버(&lt;code&gt;httpd&lt;/code&gt;)도 있었기 때문에 가장 빠르고 효과적인 해결책으로 Layer 7 Load Balancing 기능을 생각했다.
정리하자면 기존 프로세스와 개선 프로세스는 다음과 같다.&lt;/p&gt;
&lt;h2 id=&#34;기존-프로세스&#34;&gt;기존 프로세스&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;코드 리뷰를 마치고 소스 코드가 배포 브랜치에 병합되면 버튼을 눌러 빌드한다.
&lt;ul&gt;
&lt;li&gt;대부분의 이슈들은 2개의 애플리케이션(&lt;code&gt;:38888&lt;/code&gt;, &lt;code&gt;:39999&lt;/code&gt;)에 함께 반영된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;telnet&lt;/code&gt; 을 사용해서 Alteon Switch에 접속한다.&lt;/li&gt;
&lt;li&gt;배포하기 전에 서비스 도메인(&lt;code&gt;d1.markruler.com&lt;/code&gt;, &lt;code&gt;d2.markruler.com&lt;/code&gt;)에 접속할 수 있는지 확인한다.&lt;/li&gt;
&lt;li&gt;가상 호스트(vhost)에 묶여 있는 &lt;code&gt;s1&lt;/code&gt; 서버를 비활성화한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-s&#34; data-lang=&#34;s&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Server Load Balancing Information&lt;span style=&#34;color:#0f0&#34;&gt;# /info/slb/virt 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: IP4 &amp;lt;vhost_IP_Address&amp;gt;,   &lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  virtual ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  http: rport http, group &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, backup none, rtspslb none
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      real servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: &amp;lt;s1_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;: &amp;lt;s2_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  https: rport https, group &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, backup none, rtspslb none
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      real servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: &amp;lt;s1_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;: &amp;lt;s2_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-s&#34; data-lang=&#34;s&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Main&lt;span style=&#34;color:#0f0&#34;&gt;# /cfg/slb/real 1/dis&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Current status: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New status:     disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Main&lt;span style=&#34;color:#0f0&#34;&gt;# apply&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;다시 3번과 동일하게 서비스 도메인에 접속할 수 있는지 확인한다.&lt;/li&gt;
&lt;li&gt;Bamboo를 사용해서 새로운 버전의 애플리케이션 2개(&lt;code&gt;s1:38888&lt;/code&gt;, &lt;code&gt;s1:39999&lt;/code&gt;)를 배포한다.&lt;/li&gt;
&lt;li&gt;배포 스크립트에서 별도로 헬스체크를 하지 않기 때문에 수동으로 접속할 수 있는지 확인(&amp;ldquo;새로 고침&amp;rdquo;)한다.&lt;/li&gt;
&lt;li&gt;정상적으로 접속되면 Alteon Switch에서 &lt;code&gt;s1&lt;/code&gt; 서버를 활성화한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-s&#34; data-lang=&#34;s&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Main&lt;span style=&#34;color:#0f0&#34;&gt;# /cfg/slb/real 1/ena&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Current status: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New status:     enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Main&lt;span style=&#34;color:#0f0&#34;&gt;# apply&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;그 후 &lt;code&gt;s2&lt;/code&gt; 서버를 비활성화한다. (8번과 동시에 적용하면 Akamai CDN 서비스에서 &lt;a href=&#34;#akamai-%EC%97%90%EB%9F%AC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%91%EB%8B%B5&#34;&gt;&lt;code&gt;ERR_ZERO_SIZE_OBJECT&lt;/code&gt; 에러가 발생할 수 있다&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;다시 3번과 동일하게 서비스 도메인에 접속할 수  있는지 확인한다.&lt;/li&gt;
&lt;li&gt;Bamboo에서 새로운 버전의 애플리케이션 2개(&lt;code&gt;s2:38888&lt;/code&gt;, &lt;code&gt;s2:39999&lt;/code&gt;)를 배포한다.&lt;/li&gt;
&lt;li&gt;다시 7번과 동일한 이유로 서비스 도메인에 접속할 수  있는지 확인한다.&lt;/li&gt;
&lt;li&gt;모두 접속되면 Alteon Switch에서 &lt;code&gt;s2&lt;/code&gt; 서버를 활성화한다.&lt;/li&gt;
&lt;li&gt;마지막으로 반영 사항을 갈무리해서 업무 메신저에 공유한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;개선-프로세스-continuous-delivery&#34;&gt;개선 프로세스 (Continuous Delivery)&lt;/h2&gt;
&lt;p&gt;웹 서버가 동일 머신에 있는 웹 애플리케이션만 바라보는 것이 아니라 다른 머신에 있는 서버도 바라보도록 설정했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/ci/new-system-2022.webp&#34; alt=&#34;개발중인 서비스의 새로운 시스템&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;총 14단계에서 1단계까지 줄였다.
먼저 코드 리뷰를 마치고 소스 코드가 통합 브랜치(trunk)에 병합되면 자동으로 빌드된다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;운영 환경에 반영하기 위해 배포 버튼을 누른다.
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;쉘 스크립트를 활용해 자동으로 새로운 버전의 애플리케이션을 배포하고 헬스체크한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5e5e5&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e5e5e5&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;while&lt;/span&gt; ! curl --silent --output /dev/null --head --fail --max-time &lt;span style=&#34;color:#f60&#34;&gt;3&lt;/span&gt; --location &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#f00&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Healthchecking...&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sleep &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;마지막으로 반영 사항을 갈무리해서 업무 메신저에 공유한다.&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;업무 메신저가 Slack에서 NAVER Works로 변경되고 연동을 못하고 있었는데
&lt;a href=&#34;https://github.com/markruler/naver-works-plugin&#34;&gt;Jenkins 플러그인&lt;/a&gt;을 직접 만들어서 알림 메시지가 가도록 만들었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;도입-과정에서-발생한-문제들&#34;&gt;도입 과정에서 발생한 문제들&lt;/h1&gt;
&lt;h2 id=&#34;active-health-check가-필요하다&#34;&gt;Active Health Check가 필요하다&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.haproxy.com/documentation/hapee/2-5r1/load-balancing/health-checking/active-health-checks/&#34;&gt;Active Health Check&lt;/a&gt;란
주기적으로 서버에 연결을 시도하거나 HTTP 요청을 보내서 서버 상태를 확인한다.
반면 &lt;a href=&#34;https://www.haproxy.com/documentation/hapee/2-5r1/load-balancing/health-checking/passive-health-checks/&#34;&gt;Passive Health Check&lt;/a&gt;는
오류가 있는지 활성 트래픽(active traffic)만 검사한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;s1&lt;/code&gt; 과 &lt;code&gt;s2&lt;/code&gt; 서버에는 CentOS 7이 설치되어있다.
해당 OS에서는 httpd를 &lt;strong&gt;2.4.6 버전&lt;/strong&gt;까지만 업데이트 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; yum info httpd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Available Packages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name        : httpd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Arch        : x86_64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Version     : 2.4.6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Layer 7 헬스체크를 위한 &lt;code&gt;mod_proxy_hcheck&lt;/code&gt; 모듈은
&lt;strong&gt;2.4.21 버전&lt;/strong&gt;부터 사용할 수 있기 때문에 OS 변경이 불가피했다.
하지만 클라우드 컴퓨트 서비스를 사용하는 것이 아닌
IDC 물리 서버를 사용하고 있었기 때문에 OS 교체는 상당히 큰 부담이었다.
그래서 컨테이너를 도입하기로 결정했다.&lt;/p&gt;
&lt;p&gt;설정 파일(&lt;code&gt;httpd.conf&lt;/code&gt;)은 기존 설정을 최대한 그대로 사용하기로 했다.
&lt;code&gt;volumes&lt;/code&gt; 경로는 어느 환경에서든 동일하도록 가급적 절대 경로를 사용했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; cd &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;/httpd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose.yaml  httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# docker-compose.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;3.8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;services:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  slb:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    image: httpd:2.4.54-alpine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    container_name: slb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hostname: markruler.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f60&#34;&gt;80&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f60&#34;&gt;443&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;443&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    volumes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#0f0&#34;&gt;# httpd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/home/markruler/httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#0f0&#34;&gt;# logs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/etc/httpd/logs/d1.markruler:/usr/local/apache2/logs/d1.markruler&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#0f0&#34;&gt;# SSL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/etc/ssl/certs/d1.crt:/etc/ssl/certs/d1/cert.pem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/etc/ssl/certs/d1.key:/etc/ssl/certs/d1/privkey.pem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/etc/ssl/certs/d1.chain.crt:/etc/ssl/certs/d1/chain.pem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/etc/ssl/certs/CA_AAA_CERTIFICATE_SERVICES.crt:/etc/ssl/certs/d1/ca.pem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#0f0&#34;&gt;# SSL Key Password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/etc/ssl/certs/key_password.sh:/etc/ssl/certs/d1/key_password.sh&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  default:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver_opts:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      com.docker.network.enable_ipv6: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ipam:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      driver: default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      config:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - subnet: &lt;span style=&#34;color:#f60&#34;&gt;172.18.0.0&lt;/span&gt;/16 &lt;span style=&#34;color:#0f0&#34;&gt;# 255.255.0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          gateway: &lt;span style=&#34;color:#f60&#34;&gt;172.18.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;httpd -t&lt;/code&gt; 명령어로 서버 실행 전 설정 파일을 검증할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker compose run --rm slb httpd -t
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;up&lt;/code&gt; 명령어로 서버를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# sudo docker compose up --detach&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker compose -f &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;/httpd/docker-compose.yaml up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;docker inspect&lt;/code&gt; 명령어로 실제 실행된 컨테이너의 정보를 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker inspect slb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;iptables-서비스를-다시-시작해야-할-때&#34;&gt;iptables 서비스를 다시 시작해야 할 때&lt;/h2&gt;
&lt;p&gt;iptables 서비스를 다시 시작하면 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt; 파일에
있는 규칙들만 적용되기 때문에 Docker에서 설정하는 iptables 규칙이 사라진다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; systemctl restart iptables
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실제로 Docker 도입 사실을 IDC 매니저와 공유하지 않았다가 문제가 발생했다.
IDC 매니저가 우리 회사 측 요청으로 iptables 규칙을 변경하고 재시작했는데
해당 서버의 Docker 네트워크 규칙들이 사라져서 컨테이너가 실행되지 못하고 있었다.
현재는 iptables를 재실행할 때 Docker도 같이 재실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; systemctl restart docker
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; iptables -nvL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;추가로 컨테이너에서 각 서비스로 트래픽을 보내기 위해 iptables 규칙을 추가한다.
Docker 데몬은 기본적으로 &lt;code&gt;docker0&lt;/code&gt; 라는 브릿지 네트워크 인터페이스를 사용하는데 IP address range를
&lt;a href=&#34;https://github.com/moby/moby/blob/a77317882d010b884a9101c6ad0b2d7db141082f/libnetwork/docs/network.md&#34;&gt;172.17.0.1/16&lt;/a&gt; 으로 설정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; ip -br -c a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lo               UNKNOWN        127.0.0.1/8 ::1/128
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker0          DOWN           172.17.0.1/16 &lt;span style=&#34;color:#0f0&#34;&gt;# HERE!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;iptables 규칙을 추가하기 위해 해당 네트워크를 고정시켰다.
&lt;a href=&#34;https://docs.docker.com/network/bridge/&#34;&gt;bip&lt;/a&gt;는 Docker 데몬이 사용할 bridge network IP address range를 지정하는 옵션이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 기본 설정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;lt;&amp;lt;EOF | sudo tee /etc/docker/daemon.json
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;  &amp;#34;bip&amp;#34;: &amp;#34;172.17.0.1/16&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Docker 데몬을 재시작하면 &lt;code&gt;docker0&lt;/code&gt; 네트워크 인터페이스가 변경되어 있을 것이다.
이제 컨테이너에서 웹 애플리케이션으로 패킷을 전달할 수 있도록 iptables 규칙을 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; vi /etc/sysconfig/iptables
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-A INPUT -m state --state NEW -s 172.16.0.0/12 -m tcp -p tcp --dport &lt;span style=&#34;color:#f60&#34;&gt;38888&lt;/span&gt; -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-A INPUT -m state --state NEW -s 172.16.0.0/12 -m tcp -p tcp --dport &lt;span style=&#34;color:#f60&#34;&gt;39999&lt;/span&gt; -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;172.16.0.0/12&lt;/code&gt; 로 설정한 이유는 docker-compose로 컨테이너를 실행할 경우
이미 있는 인터페이스가 아닌 추가 인터페이스를 생성하기 때문이다.
만약 &lt;code&gt;docker0&lt;/code&gt; 와 동일한 &lt;code&gt;172.17.0.1/16&lt;/code&gt; 으로 생성하려고 시도하면 아래와 같은 에러가 발생한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failed to create network httpd_default: Error response from daemon: Pool overlaps with other one on this address space
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Docker에서 추가 인터페이스를 생성할 때 &lt;code&gt;172.17-31.x.x/16&lt;/code&gt;, &lt;code&gt;192.168.x.x/20&lt;/code&gt; 범위에서 추가하게 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;// https://github.com/moby/moby/blob/df650a1aeb190a319287c4d26bd3593b5343fb72/libnetwork/ipamutils/utils.go
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f00&#34;&gt;var&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;// PredefinedLocalScopeDefaultNetworks contains a list of 31 IPv4 private networks with host size 16 and 12
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;// (172.17-31.x.x/16, 192.168.x.x/20) which do not overlap with the networks in `PredefinedGlobalScopeDefaultNetworks`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;  PredefinedLocalScopeDefaultNetworks []*net.IPNet
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;// PredefinedGlobalScopeDefaultNetworks contains a list of 64K IPv4 private networks with host size 8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;// (10.x.x.x/24) which do not overlap with the networks in `PredefinedLocalScopeDefaultNetworks`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&lt;/span&gt;  PredefinedGlobalScopeDefaultNetworks []*net.IPNet
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  mutex                                sync.Mutex
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  localScopeDefaultNetworks = []*NetworkToSplit{{&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.17.0.0/16&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.18.0.0/16&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.19.0.0/16&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.20.0.0/14&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.24.0.0/14&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.28.0.0/14&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;192.168.0.0/16&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;20&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  globalScopeDefaultNetworks = []*NetworkToSplit{{&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;10.0.0.0/8&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;24&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#ff0&#34;&gt;init&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;var&lt;/span&gt; err &lt;span style=&#34;color:#ee82ee&#34;&gt;error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; PredefinedGlobalScopeDefaultNetworks, err = &lt;span style=&#34;color:#ff0&#34;&gt;splitNetworks&lt;/span&gt;(globalScopeDefaultNetworks); err != &lt;span style=&#34;color:#f00&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    panic(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;failed to initialize the global scope default address pool: &amp;#34;&lt;/span&gt; + err.&lt;span style=&#34;color:#ff0&#34;&gt;Error&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt; PredefinedLocalScopeDefaultNetworks, err = &lt;span style=&#34;color:#ff0&#34;&gt;splitNetworks&lt;/span&gt;(localScopeDefaultNetworks); err != &lt;span style=&#34;color:#f00&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    panic(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;failed to initialize the local scope default address pool: &amp;#34;&lt;/span&gt; + err.&lt;span style=&#34;color:#ff0&#34;&gt;Error&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;만약 범위를 변경하고 싶다면 &lt;a href=&#34;https://docs.mirantis.com/mke/3.4/install/plan-deployment/mcr-considerations/default-address-pools.html&#34;&gt;Mirantis 문서&lt;/a&gt;처럼 &lt;code&gt;default-address-pools&lt;/code&gt; 옵션을 직접 추가할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;default-address-pools&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.17.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;}, &amp;lt;-- docker0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.18.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.19.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.20.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.21.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.22.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.23.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.24.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.25.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.26.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.27.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.28.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.29.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;172.30.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;192.168.0.0/16&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;20&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정이 끝났다면 iptables를 다시 실행한다.&lt;/p&gt;
&lt;h2 id=&#34;httpd를-다시-실행해야-할-때&#34;&gt;httpd를 다시 실행해야 할 때&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;httpd 컨테이너를 재실행(restart)하지 않고도 설정 파일을 다시 적용(reload)하는 방법을 아직 찾지 못했다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;테스트 환경의 Alteon Switch에서 Layer 4 헬스체크가 잘 되는지 확인해 본다.
그러고는 &lt;code&gt;s2&lt;/code&gt; 서버의 &lt;code&gt;httpd&lt;/code&gt; 를 죽여본다.
&lt;code&gt;FAILED&lt;/code&gt; 상태가 되고 트래픽을 보내지 않는다!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-s&#34; data-lang=&#34;s&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Server Load Balancing Information&lt;span style=&#34;color:#0f0&#34;&gt;# /info/slb/virt 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: IP4 &amp;lt;vhost_IP_Address&amp;gt;,   &lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    virtual ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    http: rport http, group &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, backup none, rtspslb none
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        real servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: &amp;lt;s1_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;: &amp;lt;s2_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, FAILED &lt;span style=&#34;color:#0f0&#34;&gt;# HERE!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    https: rport https, group &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, backup none, rtspslb none
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        real servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: &amp;lt;s1_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;: &amp;lt;s2_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, FAILED &lt;span style=&#34;color:#0f0&#34;&gt;# HERE!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다시 &lt;code&gt;httpd&lt;/code&gt; 를 살려본다.
&lt;code&gt;up&lt;/code&gt; 상태가 되고 트래픽을 보낸다!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-s&#34; data-lang=&#34;s&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt; Server Load Balancing Information&lt;span style=&#34;color:#0f0&#34;&gt;# /info/slb/virt 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: IP4 &amp;lt;vhost_IP_Address&amp;gt;,   &lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    virtual ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    http: rport http, group &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, backup none, rtspslb none, slowstart
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        real servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: &amp;lt;s1_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;: &amp;lt;s2_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up &lt;span style=&#34;color:#0f0&#34;&gt;# HERE!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    https: rport https, group &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, backup none, rtspslb none, slowstart
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        real servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;: &amp;lt;s1_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;: &amp;lt;s2_IP_Address&amp;gt;, backup none, &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; ms, group ena, up &lt;span style=&#34;color:#0f0&#34;&gt;# HERE!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;개선의-여지가-있다&#34;&gt;개선의 여지가 있다&lt;/h1&gt;
&lt;p&gt;아래에서 언급할 사항들은 위에서 도입한 기술과 별개로 기존에도 발생하던 문제다.&lt;/p&gt;
&lt;h2 id=&#34;sessionrepositoryfilter-에러-페이지-응답&#34;&gt;&lt;code&gt;SessionRepositoryFilter&lt;/code&gt; 에러 페이지 응답&lt;/h2&gt;
&lt;p&gt;Tomcat Shutdown 직후 일시적으로 응답받을 수 있다. Graceful Shutdown, 요청 재시도(retry) 등을 고려해 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type - Exception report
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Message - Request processing failed; nested exception is java.lang.NullPointerException
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Description - The server encountered an internal error that prevented it from fulfilling &lt;span style=&#34;color:#f00&#34;&gt;this&lt;/span&gt; request.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Exception
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:126)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Root Cause
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.lang.NullPointerException
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.forward(SessionRepositoryFilter.java:447)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;proxy&#34;&gt;Proxy&lt;/h2&gt;
&lt;p&gt;upstream 서버(Tomcat)의 응답이 늦어질 경우 발생할 수 있다.
&lt;code&gt;mod_proxy&lt;/code&gt; 의 timeout 값을 조절하여 응답이 늦어지는 경우를 방지할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;&amp;lt;!-- 502 Bad Gateway --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Proxy Error
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The proxy server received an invalid response from an upstream server.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The proxy server could not handle the request
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Reason: Error reading from remote server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;akamai-에러-페이지-응답&#34;&gt;Akamai 에러 페이지 응답&lt;/h2&gt;
&lt;p&gt;Layer 4 Switch에서 1번 서버와 2번 서버 상태를 동시에 교체할 경우 응답받을 수 있다.
예를 들어, 1번 서버는 &lt;code&gt;disable&lt;/code&gt;, 2번 서버는 &lt;code&gt;enable&lt;/code&gt; 상태일 때
1번 서버를 &lt;code&gt;enable&lt;/code&gt;, 2번 서버를 &lt;code&gt;disable&lt;/code&gt; 상태로 변경한 후 &lt;code&gt;apply&lt;/code&gt; 하면
다음과 같은 에러가 발생할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Service Unavailable - Zero size object
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The server is temporarily unable to service your request. Please try again later.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Reference &lt;span style=&#34;color:#0f0&#34;&gt;#15.6f4bc817.1651592357.1872133&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2번 서버로 갔던 패킷이 갑자기 유실되면 CDN에서 받는 응답 데이터가 없어서 발생하는 것으로 추측하고 있다. 🤯
&lt;a href=&#34;https://techdocs.akamai.com/edge-diagnostics/docs/error-codes&#34;&gt;Akamai Reference&lt;/a&gt;에 따르면 &lt;code&gt;#15.x.x.x&lt;/code&gt;는 &lt;code&gt;ERR_ZERO_SIZE_OBJECT&lt;/code&gt; 에러다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ERR_ZERO_SIZE_OBJECT&lt;/code&gt; — A response from the origin server has zero length.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Akamai에 문의 결과 해당 페이지는 커스텀 할 수 없다고 한다.
버려지는 요청들을 어떻게 처리할지 고민이 필요하다.&lt;/p&gt;
&lt;h2 id=&#34;haproxy-전환&#34;&gt;HAProxy 전환&lt;/h2&gt;
&lt;p&gt;이미 부분적으로 HAProxy를 사용해서 서비스를 이중화하고 있었다.
HAProxy를 선택한 이유는 기본적으로 &lt;a href=&#34;https://www.haproxy.com/blog/exploring-the-haproxy-stats-page/&#34;&gt;statistics 기능이 Web UI로 제공&lt;/a&gt;되면서
Layer 4, Layer 7 스위치로도 사용할 수 있다는 점이었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/web/haproxy-statistics-report.webp&#34; alt=&#34;HAProxy&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;무엇보다도 XML 형식인 httpd 설정 파일에 비해 HAProxy의 설정 파일은 정말 간소하게 느껴졌기 때문에 전환하고 싶었다.&lt;/strong&gt;
또한 가장 흔히 쓰는 것 같은 NGINX를 사용하지 않았던 이유는 가장 원했던 기능인
&lt;a href=&#34;https://docs.nginx.com/nginx/admin-guide/load-balancer/http-health-check/&#34;&gt;Active Healthcheck가 유료(NGINX Plus) 기능&lt;/a&gt;이기 때문이다.&lt;/p&gt;
&lt;h2 id=&#34;선언형-배포-gitops&#34;&gt;선언형 배포 (GitOps?)&lt;/h2&gt;
&lt;p&gt;Bamboo에서는 &lt;a href=&#34;https://confluence.atlassian.com/bamboo/bamboo-specs-894743906.html&#34;&gt;Bamboo Specs&lt;/a&gt;라는 명칭으로 Infrastructure as Code(IaC)를 구현한다.
— &lt;a href=&#34;https://confluence.atlassian.com/bamboo/bamboo-yaml-specs-938844479.html&#34;&gt;YAML Specs&lt;/a&gt;의
설정 파일에서는 SCP, SSH 등 주요 플러그인들을 지원하지 않기 때문에
&lt;a href=&#34;https://confluence.atlassian.com/bamboo/bamboo-java-specs-941616821.html&#34;&gt;Java Specs&lt;/a&gt;를 사용하는 것이 좋다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Task com.atlassian.bamboo.plugins.bamboo-scp-plugin:scptask is not supported yet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Task com.atlassian.bamboo.plugins.bamboo-scp-plugin:sshtask is not supported yet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;반면 Jenkins는 사용자가 많기 때문에 비교적 많은 플러그인을 지원하며 레퍼런스도 많다.
Jenkins Pipeline을 활용하면 &lt;code&gt;Jenkinsfile&lt;/code&gt; 을 사용해서 선언형 배포 방식으로 쉽게 이전할 수도 있다.
그럼 빌드-배포 과정에서 발생할 수 있는 실수를 줄일 수 있고, 설정 정보를 버전 관리할 수 있다는 장점이 있다.&lt;/p&gt;
&lt;p&gt;또한 Bamboo는 Slack으로 알림을 보내기 위해서는 Instant Message(IM) 서버가 필요하다.
반면 Jenkins는 Slack 연동 플러그인만 설치하면 쉽게 알림을 보낼 수 있다.
그럼 배포 작업은 단 1단계로 줄어든다.
— 다만 기존에는 반영 사항을 공유할 때 Bamboo와 연동되어 있는 Jira 이슈만 간단히 캡처하면 됐지만,
아직 Jenkins와 Jira를 연동하지 못해서 어떻게 공유해야 할지 고민이 필요하다.&lt;/p&gt;
&lt;h1 id=&#34;더-읽을-거리&#34;&gt;더 읽을 거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CI/CD
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xpdojo/docs/blob/da871cd8fc4e59736a5f5ab5a44908534505b29f/reference/agile/ci-cd.md&#34;&gt;CI/CD 정리&lt;/a&gt; - markruler&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xpdojo/docs/blob/da871cd8fc4e59736a5f5ab5a44908534505b29f/reference/agile/continuous-integration.md&#34;&gt;&amp;lt;지속적인 통합&amp;gt; 요약&lt;/a&gt; - markruler&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.banksalad.com/tech/become-an-organization-that-deploys-1000-times-a-day/&#34;&gt;하루에 1000번 배포하는 조직 되기&lt;/a&gt; - Banksalad&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.kakaoenterprise.com/113&#34;&gt;Release Note 톺아보기&lt;/a&gt; - kakao enterprise&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Proxy Server
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lesstif.com/system-admin/forward-proxy-reverse-proxy-21430345.html&#34;&gt;포워드 프록시(forward proxy) 리버스 프록시(reverse proxy)의 차이&lt;/a&gt; - lesstif
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/cdn/glossary/reverse-proxy/&#34;&gt;Proxy servers explained&lt;/a&gt; - Cloudflare&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oxylabs.io/blog/reverse-proxy-vs-forward-proxy&#34;&gt;Reverse Proxy vs. Forward Proxy: The Differences&lt;/a&gt; - Oxylabs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SLB: Server Load Balancing
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-7-load-balancing/&#34;&gt;Differences Between Layer 4 and Layer 7 Load Balancing&lt;/a&gt; - NGINX
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.cloudflare.com/high-availability-load-balancers-with-maglev/&#34;&gt;High Availability Load Balancers with Maglev&lt;/a&gt; - Cloudflare&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vincent.bernat.ch/en/blog/2018-multi-tier-loadbalancer&#34;&gt;Multi-tier load-balancing with Linux&lt;/a&gt; - Vincent Bernat&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.cloudflare.com/a-primer-on-proxies/&#34;&gt;A Primer on Proxies&lt;/a&gt; - Cloudflare&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://levelup.gitconnected.com/l4-vs-l7-load-balancing-d2012e271f56&#34;&gt;L4 vs L7 Load Balancing&lt;/a&gt; - Mohak Puri&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nowwatersblog.com/backend/serverLoad/L4L7&#34;&gt;L4 &amp;amp; L7&lt;/a&gt; - nowwater&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;lt;인프라/네트워크 엔지니어를 위한 네트워크 이해 및 설계 가이드&amp;gt; - 미야타 히로시&lt;/li&gt;
&lt;li&gt;&amp;lt;인프라 엔지니어의 교과서: 네트워크 관리편&amp;gt; - 기술평론사 엮음&lt;/li&gt;
&lt;li&gt;&amp;lt;웹 엔지니어가 알아야 할 인프라의 기본&amp;gt; - 바바 토시아키&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.kakao.com/2014/05/30/l4/&#34;&gt;L4 장비의 동작과 서비스 배포시 유의점&lt;/a&gt; - Kakao&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elky84.github.io/2018/08/19/network_issue/&#34;&gt;L4 스위치 도입시 생겼던 이야기&lt;/a&gt; - elky84&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://meetup.toast.com/posts/189&#34;&gt;Safe Deploy - 안전하게 L4 에서 제외하는 방법&lt;/a&gt; - NHN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/284659&#34;&gt;L4/L7 스위치의 대안, 오픈 소스 로드 밸런서 HAProxy&lt;/a&gt; - NAVER D2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Docker
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://subicura.com/2016/06/07/zero-downtime-docker-deployment.html&#34;&gt;도커를 이용한 웹서비스 무중단 배포하기&lt;/a&gt; - subicura&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://straz.to/2021-09-08-docker-address-pools/&#34;&gt;The definitive guide to docker&amp;rsquo;s default-address-pools option&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;각주&#34;&gt;각주&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&amp;lt;AWS 토폴로지로 이해하는 Amazon VPC&amp;gt; 10장. 분산 제어 - 차정도&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/ci/ci-with-lb/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
    
        <item>
        <title>JVM 모니터링</title>
        <link>https://markruler.github.io/posts/java/jvm-monitoring/</link>
        <pubDate>Mon, 23 May 2022 00:09:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/java/jvm-monitoring/</guid>
        <description>임창수 https://markruler.github.io/posts/java/jvm-monitoring/ -&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://markruler.github.io/posts/java/java-timeout-monitoring/&#34;&gt;모니터링과 타임아웃의 중요성&lt;/a&gt;은 아무리 강조해도 지나치지 않는다.
최근 회사에서 아주 느린 API(약 15초)를 발견했는데 분명 매일 트래픽이 발생하는데도 2년동안 방치되고 있었다.
이런 레거시는 유지 보수할 일이 없다면 개발팀에서도 확인하기 어렵다.
사용자가 리포팅해주길 기대하는 것보다 모니터링 도구를 통해 파악하는 것이 좋다.
심지어 굉장히 간단한 문제여서 파악하고 수정하는 데에 1시간도 안걸렸지만 약 15초 걸리던 API를 100ms까지 줄였다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;먼저 알아두면 좋은 명령어가 있다.
&lt;code&gt;jps&lt;/code&gt;는 JVM Process Status를 출력하는 명령어로
현재 머신에서 실행중인 JVM의 PID나 실행 옵션을 확인할 때 유용하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jps -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PID&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt; Bootstrap -Djava...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;thread-dump&#34;&gt;Thread Dump&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A thread dump is a snapshot of the state of all threads that are part of the process.
(&lt;a href=&#34;https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/using_threaddumps.html&#34;&gt;Oracle Docs&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;쓰레드 덤프(Thread Dump)란 모든 쓰레드 상태의 스냅샷이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/java-thread-state-machine.png&#34; alt=&#34;java-thread-state-machine&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.uml-diagrams.org/java-thread-uml-state-machine-diagram-example.html&#34;&gt;Java Thread States and Life Cycle&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;쓰레드 덤프에 메서드 콜 스택 정보를 가진 스택 프레임(Stack Frame)은 없다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/debugging-in-intellij.png&#34; alt=&#34;Debugging in IntelliJ&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;IntelliJ에서 디버깅하면 볼 수 있는 스택 프레임&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread1   Thread2   Thread3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-------+ +-------+ +-------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|       | |       | |       |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|       | |       | | frame |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|       | |       | | frame |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| frame | |       | | frame |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| frame | | frame | | frame |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-------+ +-------+ +-------+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;daemon-thread&#34;&gt;Daemon Thread&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Daemon Thread
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;thread.setDaemon(true)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Daemon Thread는 JVM 종료 시 자동으로 강제 종료한다.&lt;/li&gt;
&lt;li&gt;언제든지 죽어도 상관없는 작업에 사용한다.&lt;/li&gt;
&lt;li&gt;Garbage Collector, JMX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Non-Daemon Thread
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;thread.setDaemon(false)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Non-Daemon Thread가 실행 중인 경우 JVM은 종료되지 않는다.&lt;/li&gt;
&lt;li&gt;기본적으로 개발자가 새로 생성하는 쓰레드는 Non-Daemon Thread이다.&lt;/li&gt;
&lt;li&gt;메인 쓰레드(Main Thread)도 Non-Daemon Thread다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;// java.lang.Thread&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;/* Whether or not the thread is a daemon thread. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#ee82ee&#34;&gt;boolean&lt;/span&gt; daemon = &lt;span style=&#34;color:#f00&#34;&gt;false&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tool&#34;&gt;Tool&lt;/h2&gt;
&lt;p&gt;나는 주로 쓰레드 간 교착 현상(deadlock)이나
단일 쓰레드의 병목 현상이 의심될 때 사용한다.
하지만 NAVER D2에 올라온 글 &amp;lsquo;&lt;a href=&#34;https://d2.naver.com/helloworld/10963&#34;&gt;스레드 덤프 분석하기&lt;/a&gt;&amp;lsquo;를 보면
이 외의 다양한 상황에서도 쓰레드 덤프를 확인해 볼 수 있다.
쓰레드 덤프 분석이 처음이라면 해당 글을 정독해보자.&lt;/p&gt;
&lt;h3 id=&#34;jstack&#34;&gt;jstack&lt;/h3&gt;
&lt;p&gt;쓰레드 스택(Java Thread Stack)을 확인할 수 있는 CLI 도구다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jstack -l &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PID&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt; &amp;gt; thread_dump.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;visualvm&#34;&gt;VisualVM&lt;/h3&gt;
&lt;p&gt;VisualVM을 사용하면 실시간으로 쓰레드 스택의 상태를 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualvm-tomcat-threads.png&#34; alt=&#34;visualvm-tomcat-threads&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;VisualVM에서 확인한 Thread Stack. OkHttp ConnectionPool이 여러 개 생긴 것으로 문제가 발생했었다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;공식 홈페이지에서 다운로드한 후 &lt;code&gt;bin&lt;/code&gt; 디렉토리의 실행 파일을 실행하면 된다.
실행하면 로컬 환경의 모든 JVM 프로세스를 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/visualvm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;IntelliJ 플러그인 &lt;a href=&#34;https://plugins.jetbrains.com/plugin/7115-visualvm-launcher&#34;&gt;VisualVM Launcher&lt;/a&gt;도 있긴 하지만,
기본적으로 실행했을 때 모든 JVM 프로세스를 확인할 수 있어서
VisualVM을 사용하는 데에 큰 불편함이 없었다.&lt;/p&gt;
&lt;h1 id=&#34;heap-dump&#34;&gt;Heap Dump&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A heap dump is a snapshot of all the objects in the Java Virtual Machine (JVM) heap at a certain point in time.
(&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/guides/visualvm/heapdump.html&#34;&gt;Oracle Docs&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;힙 덤프(Heap Dump)란 JVM 힙의 모든 Object를 담은 스냅샷이다.&lt;/p&gt;
&lt;h2 id=&#34;outofmemoryerror&#34;&gt;OutOfMemoryError&lt;/h2&gt;
&lt;p&gt;JVM 실행 시 아래 옵션을 추가하면 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 발생으로 JVM이 종료될 때 힙 덤프를 생성한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-XX:HeapDumpPath&lt;/code&gt;를 생략하면 Java Process를 실행시킨 곳에 &lt;code&gt;java_pid&amp;lt;pid&amp;gt;.hprof&lt;/code&gt; 형태로 파일이 생성된다.
&lt;blockquote&gt;
&lt;p&gt;By default the heap dump is created in a file called java_pid.hprof in the working directory of the VM. - &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/clopts001.html&#34;&gt;Oracle Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-XX:+PrintClassHistogramAfterFullGC&lt;/code&gt;, &lt;code&gt;-XX:+PrintClassHistogramBeforeFullGC&lt;/code&gt; 등의 옵션으로
Full GC 전후의 메모리 상태를 간략히 덤프할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-XX:+HeapDumpOnOutOfMemoryError &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;-XX:HeapDumpPath=jvm.hprof
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tool-1&#34;&gt;Tool&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OutOfMemoryError&lt;/code&gt;가 발생한 게 아니라면 &lt;code&gt;jmap&lt;/code&gt;을 사용해서 힙 덤프를 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# jmap -dump:format=b,file=/path/app.hprof ${PID}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jmap -dump:file=/path/app.hprof &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PID&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Dumping heap to /path/app.hprof ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Heap dump file created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; file /path/app.hprof
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app.hprof: Java HPROF dump, created Tue May &lt;span style=&#34;color:#f60&#34;&gt;17&lt;/span&gt; 01:15:39 &lt;span style=&#34;color:#f60&#34;&gt;2022&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;eclipse-memory-analyzer-mat&#34;&gt;Eclipse Memory Analyzer (MAT)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eclipse.org/mat/&#34;&gt;MAT&lt;/a&gt;는 힙 덤프를 분석할 수 있게 도와주는 프로그램이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK를 찾지 못하는 경우 아래와 같이 옵션을 추가한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ${MAT_HOME}/MemoryAnalyzer.ini&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-vm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;JAVA_HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# -vmargs 보다 위에 추가해야 한다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-vmargs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기본 Heap Size가 1024m이다. Heap Dump 파일이 이보다 큰 경우 Parsing할 때 아래와 같은 에러가 발생한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;An internal error occurred during:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Parsing heap dump from &amp;#39;/path/java_pid1234.hprof&amp;#39;&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Java heap space
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정 파일에 JVM 옵션을 추가하면 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# ${MAT_HOME}/MemoryAnalyzer.ini&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-vmargs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#-Xmx1024m&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-Xms6g
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-Xmx6g
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;visualvm-1&#34;&gt;VisualVM&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://visualvm.github.io/download.html&#34;&gt;VisualVM&lt;/a&gt;은 애플리케이션을 &lt;strong&gt;실시간으로 분석&lt;/strong&gt;하는 데 주로 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# $VISUALVM_HOME/etc/visualvm.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Default location of JDK:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# It can be overridden on command line by using --jdkhome &amp;lt;dir&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Be careful when changing jdkhome.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# There are two VisualVM launchers for Windows (32-bit and 64-bit) and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# installer points to one of those in the VisualVM application shortcut &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# based on the Java version selected at installation time.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#visualvm_jdkhome=&amp;#34;/path/to/jdk&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;visualvm_jdkhome&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;$JAVA_HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bin/visualvm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래 기능으로 힙 덤프를 간략히 확인할 수도 있다.
하지만 기능이 다양한 &lt;a href=&#34;#eclipse-memory-analyzer-mat&#34;&gt;MAT&lt;/a&gt;가 있기 때문에
VisualVM은 실시간으로 확인하는 용도로 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;File &amp;gt; Load &amp;gt; *.hprof&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualvm-heap-dump.png&#34; alt=&#34;visualvm-heap-dump&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;VisuamVM에서 확인한 Heap Dump&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Remote에서 모니터링하기 위해서는 JVM 애플리케이션에 JMX 옵션을 추가해야 한다.
&lt;a href=&#34;https://archive.apache.org/dist/tomcat/&#34;&gt;Apache Tomcat&lt;/a&gt;을 사용한다면 아래와 같이 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Tomcat 다운로드&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -LO https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.41/bin/extras/catalina-jmx-remote.jar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;CATALINA_HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;/bin/catalina.sh version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;CATALINA_HOME&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;/bin/catalina.sh start &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;  -Dcom.sun.management.jmxremote &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;  -Dcom.sun.management.jmxremote.local.only=false &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;  -Dcom.sun.management.jmxremote.port=&lt;span style=&#34;color:#f60&#34;&gt;1099&lt;/span&gt; &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;  -Dcom.sun.management.jmxremote.rmi.port=&lt;span style=&#34;color:#f60&#34;&gt;1099&lt;/span&gt; &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -Dcom.sun.management.jmxremote.ssl=false &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -Dcom.sun.management.jmxremote.authenticate=false &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;# -Dcom.sun.management.jmxremote.authenticate=true \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;# -Dcom.sun.management.jmxremote.password.file=$CATALINA_BASE/conf/jmxremote.password \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;# -Dcom.sun.management.jmxremote.access.file=$CATALINA_BASE/conf/jmxremote.access \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#0f0&#34;&gt;# -Djava.rmi.server.hostname=${REAL_HOST} \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -Djava.rmi.server.hostname=255.255.255.255 &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -jar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이후 VisualVM에서 다음과 같이 설정한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;File &amp;gt; Add JMX Connection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualvm-file-add-jmx-connection.png&#34; alt=&#34;File &amp;gt; Add JMX Connection&#34;&gt;&lt;/p&gt;
&lt;p&gt;JVM 옵션으로 추가한 RMI(Remote Method Invocation) HOST와 PORT를 입력한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualvm-setting-jmx-connection.png&#34; alt=&#34;Setting JMX Connection&#34;&gt;&lt;/p&gt;
&lt;p&gt;추가하면 다음과 같이 스레드를 실시간으로 모니터링 할 수 있다.
스레드와 힙 메모리의 스냅샷을 저장할 수도 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualvm-jmx-monitoring.png&#34; alt=&#34;Setting JMX Connection&#34;&gt;&lt;/p&gt;
&lt;p&gt;설정만 한다면 여러 호스트를 모니터링 할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualvm-double-jmx-monitoring.png&#34; alt=&#34;Setting JMX Connection&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;gc-monitoring&#34;&gt;GC Monitoring&lt;/h1&gt;
&lt;p&gt;GC 모니터링이란 JVM이 어떻게 GC를 수행하고 있는지 알아내는 과정을 말한다.&lt;/p&gt;
&lt;h2 id=&#34;tool-2&#34;&gt;Tool&lt;/h2&gt;
&lt;p&gt;처음이라면 NAVER D2에 올라온 글
&amp;lsquo;&lt;a href=&#34;https://d2.naver.com/helloworld/6043&#34;&gt;Garbage Collection 모니터링 방법&lt;/a&gt;&amp;lsquo;이 굉장히 도움된다.&lt;/p&gt;
&lt;h3 id=&#34;jstat&#34;&gt;jstat&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JVM Statistics Monitoring&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html&#34;&gt;공식 문서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 1초마다 gc 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jstat -gc &amp;lt;PID&amp;gt; &lt;span style=&#34;color:#f60&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jstat -options
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;옵션&lt;/th&gt;
          &lt;th&gt;기능&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;gc&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;각 힙(heap) 영역의 현재 크기와 현재 사용량(Eden 영역, Survivor 영역, Old 영역등), 총 GC 수행 횟수, 누적 GC 소요 시간을 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;gccapactiy&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;각 힙 영역의 최소 크기(ms), 최대 크기(mx), 현재 크기, 각 영역별 GC 수행 횟수를 알 수 있는 정보를 보여 준다. 단, 현재 사용량과 누적 GC 소요 시간은 알 수 없다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;gccause&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-gcutil 옵션이 제공하는 정보와 함께 마지막 GC 원인과 현재 발생하고 있는 GC의 원인을 알 수 있는 정보를 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gcnew&lt;/td&gt;
          &lt;td&gt;New 영역에 대한 GC 수행 정보를 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gcnewcapacity&lt;/td&gt;
          &lt;td&gt;New 영역의 크기에 대한 통계 정보를 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gcold&lt;/td&gt;
          &lt;td&gt;Old 영역에 대한 GC 수행 정보를 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gcoldcapacity&lt;/td&gt;
          &lt;td&gt;Old 영역의 크기에 대한 통계 정보를 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gcpermcapacity&lt;/td&gt;
          &lt;td&gt;Permanent 영역에 대한 통계 정보를 보여 준다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;gcutil&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;각 힙 영역에 대한 사용 정도를 백분율로 보여 준다. 아울러 총 GC 수행 횟수와 누적 GC 시간을 알 수 있다.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;visual-gc&#34;&gt;Visual GC&lt;/h3&gt;
&lt;p&gt;JVM이 어떻게 GC를 수행하고 있는지 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualgc-plugin.png&#34; alt=&#34;VisualGC Plugin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;VisualVM의 Tools &amp;gt; Plugins에서 다운로드 할 수 있다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/jvm-monitoring/visualgc-with-visualvm.png&#34; alt=&#34;visualgc-with-visualvm&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;함께-사용하는-도구들&#34;&gt;함께 사용하는 도구들&lt;/h1&gt;
&lt;h2 id=&#34;jdk-tools&#34;&gt;JDK Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/tools/index.html&#34;&gt;JDK Tools and Utilities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/java/java-conceptual-diagram.png&#34; alt=&#34;Java Platform Standard Edition 8 Documentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/&#34;&gt;Java Platform Standard Edition 8 Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jcmd: 성능 관련 카운터 조회&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jcmd &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PID&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt; PerfCounter.print
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.threads.daemon=&lt;span style=&#34;color:#f60&#34;&gt;42&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.threads.live=&lt;span style=&#34;color:#f60&#34;&gt;49&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.threads.livePeak=&lt;span style=&#34;color:#f60&#34;&gt;52&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.threads.started=&lt;span style=&#34;color:#f60&#34;&gt;3951&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;jmap: JVM Heap 조회&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jmap -heap &lt;span style=&#34;color:#87ceeb&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#eedd82&#34;&gt;PID&lt;/span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Attaching to process ID 3838860, please wait...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Debugger attached successfully.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server compiler detected.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JVM version is 25.292-b10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;using thread-local object allocation.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Parallel GC with &lt;span style=&#34;color:#f60&#34;&gt;10&lt;/span&gt; thread(s)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Heap Configuration:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;MinHeapFreeRatio&lt;/span&gt;         = &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;MaxHeapFreeRatio&lt;/span&gt;         = &lt;span style=&#34;color:#f60&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;MaxHeapSize&lt;/span&gt;              = &lt;span style=&#34;color:#f60&#34;&gt;8348762112&lt;/span&gt; (7962.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;NewSize&lt;/span&gt;                  = &lt;span style=&#34;color:#f60&#34;&gt;174063616&lt;/span&gt; (166.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;MaxNewSize&lt;/span&gt;               = &lt;span style=&#34;color:#f60&#34;&gt;2782920704&lt;/span&gt; (2654.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;OldSize&lt;/span&gt;                  = &lt;span style=&#34;color:#f60&#34;&gt;348127232&lt;/span&gt; (332.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;NewRatio&lt;/span&gt;                 = &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;SurvivorRatio&lt;/span&gt;            = &lt;span style=&#34;color:#f60&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;MetaspaceSize&lt;/span&gt;            = &lt;span style=&#34;color:#f60&#34;&gt;21807104&lt;/span&gt; (20.796875MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;CompressedClassSpaceSize&lt;/span&gt; = &lt;span style=&#34;color:#f60&#34;&gt;1073741824&lt;/span&gt; (1024.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;MaxMetaspaceSize&lt;/span&gt;         = &lt;span style=&#34;color:#f60&#34;&gt;17592186044415&lt;/span&gt; MB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;G1HeapRegionSize&lt;/span&gt;         = &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; (0.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Heap Usage:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PS Young Generation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Eden Space:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;capacity&lt;/span&gt; = &lt;span style=&#34;color:#f60&#34;&gt;2094006272&lt;/span&gt; (1997.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;used&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;398200696&lt;/span&gt; (379.75377655029297MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;free&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;1695805576&lt;/span&gt; (1617.246223449707MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   19.0162131472355% used
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From Space:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;capacity&lt;/span&gt; = &lt;span style=&#34;color:#f60&#34;&gt;82837504&lt;/span&gt; (79.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;used&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; (0.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;free&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;82837504&lt;/span&gt; (79.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   0.0% used
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To Space:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;capacity&lt;/span&gt; = &lt;span style=&#34;color:#f60&#34;&gt;78643200&lt;/span&gt; (75.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;used&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; (0.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;free&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;78643200&lt;/span&gt; (75.0MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   0.0% used
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PS Old Generation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;capacity&lt;/span&gt; = &lt;span style=&#34;color:#f60&#34;&gt;467140608&lt;/span&gt; (445.5MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;used&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;107232904&lt;/span&gt; (102.26526641845703MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#eedd82&#34;&gt;free&lt;/span&gt;     = &lt;span style=&#34;color:#f60&#34;&gt;359907704&lt;/span&gt; (343.23473358154297MB)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   22.955166423896078% used
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f60&#34;&gt;47952&lt;/span&gt; interned Strings occupying &lt;span style=&#34;color:#f60&#34;&gt;5230216&lt;/span&gt; bytes.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;jhat: Java Heap Analyzer Tool
&lt;ul&gt;
&lt;li&gt;JDK 9에서 제거되었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; jhat -J-Xmx6g -port &lt;span style=&#34;color:#f60&#34;&gt;7000&lt;/span&gt; /path/app.hprof
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;datadog&#34;&gt;Datadog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.datadoghq.com/tracing/profiler/enabling/java/&#34;&gt;Enabling the Java Profiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-Ddd.profiling.enabled=true &lt;span style=&#34;color:#87ceeb&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;&lt;/span&gt;-XX:FlightRecorderOptions=&lt;span style=&#34;color:#eedd82&#34;&gt;stackdepth&lt;/span&gt;=&lt;span style=&#34;color:#f60&#34;&gt;256&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;이-외의-도구들&#34;&gt;이 외의 도구들&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oracle.com/java/technologies/jdk-mission-control.html&#34;&gt;JDK Mission Control&lt;/a&gt; - Oracle&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pinpoint-apm/pinpoint&#34;&gt;Pinpoint&lt;/a&gt; - NAVER에서 만든 오픈소스 APM&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yourkit.com/java/profiler&#34;&gt;Java Profiler Features&lt;/a&gt; - YourKit&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ej-technologies.com/products/jprofiler/overview.html&#34;&gt;JProfiler&lt;/a&gt; (유료)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;더-읽을-거리&#34;&gt;더 읽을 거리&lt;/h1&gt;
&lt;p&gt;다른 개발자들의 실제 사례를 보면 얻을 수 있는 인사이트가 많다.&lt;/p&gt;
&lt;h2 id=&#34;thread-stack&#34;&gt;Thread Stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/10963&#34;&gt;스레드 덤프 분석하기&lt;/a&gt; - NAVER D2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/how-to-read-a-thread-dump&#34;&gt;How to Read a Thread Dump&lt;/a&gt; - DZone&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://johngrib.github.io/wiki/jvm-stack/&#34;&gt;JVM stack과 frame&lt;/a&gt; - 기계인간 John Grib&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;heap-memory&#34;&gt;Heap Memory&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/1326256&#34;&gt;하나의 메모리 누수를 잡기까지&lt;/a&gt; - NAVER D2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techblog.woowahan.com/2628/&#34;&gt;도움이 될수도 있는 JVM memory leak 이야기&lt;/a&gt; - 우아한 형제들&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/184615&#34;&gt;자바 애플리케이션 성능 튜닝의 도(道)&lt;/a&gt; - NAVER D2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/1286587&#34;&gt;Java 애플리케이션 트러블 슈팅&lt;/a&gt; - NAVER D2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kwonnam.pe.kr/wiki/java/memory&#34;&gt;Java Memory Analysis&lt;/a&gt; - 권남&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.whatap.io/ko/blog/28/&#34;&gt;JVM Crash 문제 해결하기&lt;/a&gt; - 와탭&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://honeymon.io/tech/2019/05/30/java-memory-leak-analysis.html&#34;&gt;자바 메모리누수(with 힙덤프) 분석하기&lt;/a&gt; - 김지헌&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lng1982.tistory.com/352&#34;&gt;Java Heap Dump 를 이용한 문제 해결&lt;/a&gt; - 탁구치는 개발자&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sarc.io/index.php/java/1092-jvm-default-heap-size&#34;&gt;JVM의 default Heap Size가 궁금하세요?&lt;/a&gt; - 삵(sarc)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://perfectacle.github.io/2019/04/28/heap-memory-analytics-with-eclipse-mat/&#34;&gt;생애 첫 Heap 메모리 분석기&lt;/a&gt; - 양권성&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://spoqa.github.io/2012/02/06/eclipse-mat.html&#34;&gt;Eclipse Memory Analyzer 소개&lt;/a&gt; - spoqa&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/eclipse-mat-incoming-outgoing-references&#34;&gt;Eclipse MAT — Incoming, Outgoing References&lt;/a&gt; - DZone&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/visualvm-jmx-remote&#34;&gt;Remote Monitoring with VisualVM and JMX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lesstif.com/java/apache-tomcat-jmx-monitoring-20776824.html&#34;&gt;아파치 톰캣(Apache Tomcat)을 JMX로 Remote Monitoring 하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;전문가를 위한 스프링 5 (15장 애플리케이션 모니터링)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;garbage-collection&#34;&gt;Garbage Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9788979145229&#34;&gt;자바 성능을 결정짓는 코딩 습관과 튜닝 이야기&lt;/a&gt;&amp;gt;라는
책의 저자가 쓰신 글들은 모두 재밌고 유용하다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/6043&#34;&gt;Garbage Collection 모니터링 방법&lt;/a&gt; - NAVER D2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://d2.naver.com/helloworld/4717&#34;&gt;Garbage Collection과 Statement Pool&lt;/a&gt; - NAVER D2
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zzikjh.tistory.com/entry/DBCP-%EC%82%AC%EC%9A%A9%EC%8B%9C-poolPreparedStatements-%EC%86%8D%EC%84%B1%EC%9D%B4-%EC%84%B1%EB%8A%A5%EC%97%90-%EB%AF%B8%EC%B9%98%EB%8A%94-%EC%98%81%ED%96%A5&#34;&gt;DBCP 사용시 poolPreparedStatements 속성이 성능에 미치는 영향&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;기타&#34;&gt;기타&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.naver.com/pcmola/222064546600&#34;&gt;Java 프로파일링 도구&lt;/a&gt; - 메이커 꾸러기&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/news/2015/12/OpenJDK-9-removal-of-HPROF-jhat/&#34;&gt;OpenJDK 9: Life Without HPROF and jhat&lt;/a&gt; - InfoQ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/8wHx31mvSLY&#34;&gt;Everything I Ever Learned About JVM Performance Tuning at Twitter&lt;/a&gt; - Attila Szegedi&lt;/li&gt;
&lt;/ul&gt;
- https://markruler.github.io/posts/java/jvm-monitoring/ - Im Changsu 2020 - 2024</description>
        </item>
    
    
  </channel>
</rss> 