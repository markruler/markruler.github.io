<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>임창수</title>
    <link>https://markruler.github.io/</link>
    <description>Recent content on 임창수</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>imcxsu@gmail.com (Im Changsu)</managingEditor>
    <webMaster>imcxsu@gmail.com (Im Changsu)</webMaster>
    <copyright>Im Changsu | Since 2020</copyright>
    <lastBuildDate>Mon, 24 Mar 2025 12:10:00 +0900</lastBuildDate>
    
        <atom:link href="https://markruler.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>HTTP 응답 패킷을 압축해서 Outbound 네트워크 비용 절약하기</title>
        <link>https://markruler.github.io/posts/network/http-response-compression/</link>
        <pubDate>Sun, 23 Mar 2025 00:10:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/network/http-response-compression/</guid>
        <description>임창수 https://markruler.github.io/posts/network/http-response-compression/ -&lt;p&gt;클라이언트 로딩 시간을 줄이기 위해 API 하나에 많은 걸 담기 시작했습니다.
브라우저에서는 HTTP/1.1 연결 시 최대 6개의 커넥션만 허용해주기 때문입니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
그래서 서버 응답 데이터의 사이즈가 점점 커지기 시작했고,
덩달아 CDN과 IDC 네트워크 트래픽(outbound) 비용이 늘기 시작했습니다.
그 중에는 변하지 않는 데이터도 포함되어 있고, 변하는 데이터도 포함되어 있습니다.
변하지 않는 데이터는 중간 레이어에서 캐시를 통해 해결할 수도 있지만,
이 글에서는 서버에서 응답 데이터를 압축해서 보내는 방법을 소개합니다.&lt;/p&gt;
&lt;h1 id=&#34;spring-boot-애플리케이션-설정&#34;&gt;Spring Boot 애플리케이션 설정&lt;/h1&gt;
&lt;p&gt;서버에서 클라이언트에 응답 시 응답 데이터를 압축해서 보낼 수 있습니다.
Spring Boot 애플리케이션이라면 간단하게 &lt;code&gt;application.yaml&lt;/code&gt; 파일에 아래 설정만 추가하면 됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  compression:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    enabled: &lt;span style=&#34;color:#f00&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    min-response-size: &lt;span style=&#34;color:#f60&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Servlet Filter에서 Response의 OutputStream을 &lt;code&gt;GZIPOutputStream&lt;/code&gt;으로 교체하면
좀 더 세밀하게 설정할 수 있습니다.
예를 들면, 특정 경로만 압축한다거나 압축 정도를 조절할 수 있습니다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h1 id=&#34;결과&#34;&gt;결과&lt;/h1&gt;
&lt;p&gt;Akamai CDN을 통해서 확인해보니
(Edge Server에서 캐시되어 Origin에서 더 이상 불러오지 않는)
&lt;a href=&#34;https://techdocs.akamai.com/ion/docs/configure-the-origin-offload-rule#caching&#34;&gt;offload&lt;/a&gt;
트래픽 양이 확연히 늘었고,
Origin 응답 트래픽 양이 줄어들었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/http-response-compression/akamai-load-compression.png&#34; alt=&#34;Akamai CDN load compression&#34;&gt;&lt;/p&gt;
&lt;p&gt;네트워크 대역폭(Bandwidth)과 처리량(Throughput)에 따라 응답 사이즈가 크지 않다면 속도에는 별 차이 없는 것 같습니다.
하지만 사이즈 자체가 작아지면서 네트워크 비용을 줄일 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/http-response-compression/before-after-http-response-compression.png&#34; alt=&#34;before and after http response compression&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;더-읽을-거리&#34;&gt;더 읽을 거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTTP/Guides/Compression&#34;&gt;Compression in HTTP&lt;/a&gt; | MDN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTTP/Reference/Headers/Content-Encoding&#34;&gt;Content-Encoding&lt;/a&gt; | MDN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTTP/Reference/Headers/Transfer-Encoding&#34;&gt;Transfer-Encoding&lt;/a&gt; | MDN&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GoogleChrome/developer.chrome.com/blob/e262dd234c039ab14e4ad7c3451153d7636ac12d/site/en/docs/devtools/network/reference/index.md?plain=1#L541-L546&#34;&gt;Chrome Docs&lt;/a&gt; 참조.
최신 브라우저나 프록시 서버는 대부분 HTTP/2 혹은 HTTP/3를 지원하지만,
여러 개의 요청으로 나눈다해도 그만큼의 네트워크 트래픽이 발생합니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://jongmin4943.tistory.com/entry/Spring-%ED%8A%B9%EC%A0%95-API%EC%9D%98-Response-%EC%95%95%EC%B6%95%ED%95%98%EA%B8%B0&#34;&gt;Spring 특정 API의 Response 압축하기&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/network/http-response-compression/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>네트워크 레이어 - OSI 모델</title>
        <link>https://markruler.github.io/posts/network/network-layer/</link>
        <pubDate>Thu, 20 Mar 2025 23:03:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/network/network-layer/</guid>
        <description>임창수 https://markruler.github.io/posts/network/network-layer/ -&lt;p&gt;&lt;strong&gt;TCP/IP 모델&lt;/strong&gt;은 1970년대 미국 국방부 연구기관 DARPA에서
인터넷 초기 설계(ARPANet)에 사용한 모델로 4계층으로 구성되어 있습니다.
실제 인터넷을 구현하기 위해 실용적 목적으로 개발되었습니다.&lt;/p&gt;
&lt;p&gt;반면 &lt;strong&gt;OSI 모델&lt;/strong&gt;은 다양한 컴퓨터 시스템이 서로 통신할 수 있도록
1984년 국제표준화기구(ISO)에서 만든 개념 모델입니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;실제 네트워크에서는 TCP/IP 모델이 사용됩니다.
하지만 개념을 이해하고 설명하기에는 OSI 모델이 더 적합하기 때문에 OSI 모델이 통용됩니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 각 계층의 주요 기능과 특징을 살펴보기 위해
일반적으로 사용되는 &lt;strong&gt;OSI 모델을 따르지만 5~7계층은 TCP/IP 모델처럼 합쳐진 5계층 모델&lt;/strong&gt;을 설명합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%9A%A9%EC%96%B4&#34;&gt;용어&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#layer-1---physical-layer&#34;&gt;Layer 1 - Physical Layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#l1-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EA%B8%B0&#34;&gt;L1 주요 기기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#layer-2---data-link-layer&#34;&gt;Layer 2 - Data Link Layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#l2-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EA%B8%B0&#34;&gt;L2 주요 기기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#l2-%EC%A3%BC%EC%9A%94-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C&#34;&gt;L2 주요 프로토콜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#layer-3---network-layer&#34;&gt;Layer 3 - Network Layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#l3-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EA%B8%B0&#34;&gt;L3 주요 기기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#l3-%EC%A3%BC%EC%9A%94-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C&#34;&gt;L3 주요 프로토콜&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ip-%EC%A3%BC%EC%86%8C-%EC%B2%B4%EA%B3%84&#34;&gt;IP 주소 체계&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ip-%EB%9D%BC%EC%9A%B0%ED%8C%85&#34;&gt;IP 라우팅&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#layer-4---transport-layer&#34;&gt;Layer 4 - Transport Layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#l4-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EA%B8%B0&#34;&gt;L4 주요 기기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#l4-%EC%A3%BC%EC%9A%94-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C&#34;&gt;L4 주요 프로토콜&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8&#34;&gt;포트 번호&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#layer-7---application-layer&#34;&gt;Layer 7 - Application Layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#l7-%EC%A3%BC%EC%9A%94-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C&#34;&gt;L7 주요 프로토콜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84-%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을 거리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;용어&#34;&gt;용어&lt;/h1&gt;
&lt;p&gt;먼저 공통 용어를 정리하며 시작하겠습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1 계층&lt;/strong&gt;은 영어로 Layer 1, &lt;strong&gt;줄여서 L1&lt;/strong&gt;이라고 부릅니다.
이 글에서도 글을 줄여 쓰기 위해서 물리 계층은 L1이라고 표기하겠습니다.&lt;/p&gt;
&lt;p&gt;계층에서 처리하는 한 덩어리의 데이터 단위를 &lt;strong&gt;PDU&lt;/strong&gt;(&lt;strong&gt;Protocol Data Unit&lt;/strong&gt;)라고 부릅니다.
PDU는 제어 정보를 포함한 헤더(header), 데이터 자체인 페이로드(payload)로 구성되어 있습니다.
웹 서비스를 개발해보셨다면 HTTP 헤더와 바디를 생각하시면 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MTU&lt;/strong&gt;는 &lt;strong&gt;Maximum Transmission Unit&lt;/strong&gt;의 약자로,
**네트워크를 통해 한 번에 전송할 수 있는 최대 데이터 크기(바이트 단위)**를 의미합니다.
즉, PDU의 최대 크기를 말합니다.
일반적으로 MTU는 1500 바이트입니다.
MTU가 작으면 큰 데이터를 전송할 때 데이터를 나눠서 보내야 하므로 전송 오버헤드&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;가 증가합니다.
MTU가 크면&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; 큰 데이터를 한 번에 보낼 수 있지만, 중간 네트워크 장비가 처리할 수 있는 크기를 넘어서면 패킷 드랍(packet drop)이 발생할 수 있습니다.
PMTUD(Path MTU Discovery)는 경로 중 최소 MTU를 찾아서 데이터를 전송하는 기법입니다.&lt;/p&gt;
&lt;p&gt;PDU를 부르는 명칭도 계층마다 다릅니다.
L1에서는 비트(bit), L2에서는 프레임(frame), L3에서는 패킷(packet), L4 TCP에서는 세그먼트(segment), L4 UDP에서는 데이터그램(datagram), L7에서는 메시지(message)로 부릅니다.
특히 L3의 &lt;strong&gt;IP 패킷은 넓은 의미로 네트워크를 통해 흐르는 데이터 그 자체&lt;/strong&gt;를 일컫기도 합니다.
뭉뚱그려서 &amp;lsquo;&lt;strong&gt;패킷&lt;/strong&gt;&amp;rsquo;&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;이라고 부르죠.&lt;/p&gt;
&lt;p&gt;송신 측에서 데이터를 보낼 때는 &lt;strong&gt;상위 계층의 데이터에 하위 계층의 헤더(header)를 붙여서 캡슐화(encapsulation)하며&lt;/strong&gt; 내려가고,
수신 측에서는 그 과정을 역순으로 &lt;strong&gt;디캡슐화(decapsulation)하여&lt;/strong&gt; 상위 계층으로 전달합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;호스트&lt;/strong&gt;(&lt;strong&gt;Host&lt;/strong&gt;)는 네트워크에 연결된 장치를 의미합니다.&lt;/p&gt;
&lt;p&gt;네트워크 기기는 눈에 보이는 실제 기기인 &lt;strong&gt;물리 어플라이언스&lt;/strong&gt;(Physical Appliance)와
가상화 소프트웨어 위에서 동작하는 논리적 네트워크 기기인 &lt;strong&gt;가상 어플라이언스&lt;/strong&gt;(Virtual Appliance)dd로 나뉩니다.&lt;/p&gt;
&lt;p&gt;인터넷의 통신 방식은 크게 반이중화 통신과 전이중화 통신으로 나뉩니다.
&lt;strong&gt;반이중화 통신&lt;/strong&gt;(&lt;strong&gt;half duplex&lt;/strong&gt;)은 전송로가 1개이기 때문에 송신과 수신을 번갈아가며 하는 방식입니다.
&lt;strong&gt;전이중화 통신&lt;/strong&gt;(&lt;strong&gt;full duplex&lt;/strong&gt;)은 송신용 전송로와 수신용 전송로를 별도로 준비하고,
송신과 수신을 동시에 할 수 있는 방식입니다.&lt;/p&gt;
&lt;!-- ![](/images/network/network-layers/osi-7-layer-bytebytego.png) --&gt;
&lt;!-- *[ByteByteGo](https://blog.bytebytego.com/p/network-protocols-run-the-internet)* --&gt;
&lt;!-- ![](/images/network/network-layers/linux-network-protocol-stack.png) --&gt;
&lt;!-- *[ByteByteGo](https://blog.bytebytego.com/p/network-protocols-run-the-internet)* --&gt;
&lt;h1 id=&#34;layer-1---physical-layer&#34;&gt;Layer 1 - Physical Layer&lt;/h1&gt;
&lt;p&gt;L1(물리 계층)은 실제 물리 매체를 통해 &lt;strong&gt;디지털 신호를 전기 신호나 광신호 등으로 상호 변환&lt;/strong&gt;하여 송수신합니다.
L1은 데이터 전송의 가장 기본적인 단위를 담당하며, 전송 매체의 물리적 특성을 정의합니다.
케이블이나 커넥터 형태, 핀 배열 등 물리적인 사양에 관해 모두 정의되어 있는 계층입니다.
TCP/IP 모델에서는 L1과 L2를 합쳐 Network Access Layer로 표현합니다.
L1에서는 주로 물리적 사양을, L2에서는 통신 프로토콜을 기술합니다.&lt;/p&gt;
&lt;h2 id=&#34;l1-주요-기기&#34;&gt;L1 주요 기기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NIC&lt;/strong&gt;(&lt;strong&gt;Network Interface Card&lt;/strong&gt;)는 컴퓨터를 네트워크에 연결하기 위해 필요한 하드웨어입니다.
네트워크 인터페이스, 네트워크 어댑터라고도 부릅니다.
모바일 기기를 포함한 모든 네트워크 단말기는 애플리케이션과 운영체제가 처리한 패킷을
NIC를 통해 LAN 케이블이나 전파로 보냅니다.
&lt;strong&gt;MAC&lt;/strong&gt;(&lt;strong&gt;Medium access control&lt;/strong&gt;) 주소는 네트워크 인터페이스 카드(NIC)에 할당된 고유한 주소입니다.&lt;/p&gt;
&lt;p&gt;유선 LAN인 &lt;strong&gt;이더넷 케이블&lt;/strong&gt;은 IEEE 802.3로 표준화하고 있습니다.
대표적으로 트위스트 페어 케이블, 광섬유 케이블, 동축 케이블이 있습니다.
&lt;strong&gt;트위스트 페어 케이블&lt;/strong&gt;은 구리로 만든 LAN 케이블로 흔히 UTP(Unshielded Twisted Pair)가 사용됩니다.
UTP는 실드 처리가 없기 때문에 전자석 노이즈에 약합니다.
공장 등 전자석 노이즈가 많은 환경에서는 비싸지만 안정적인 STP(Shielded Twisted Pair)를 사용합니다.
&lt;strong&gt;동축 케이블&lt;/strong&gt;(Coaxial cable)은 고주파(높은 주파수) 전송에 적합하기 때문에 주로 TV나 오디오 신호 케이블로 사용됩니다.
트위스트 페어 케이블과 마찬가지로 구리로 만들어졌습니다.
&lt;strong&gt;광섬유 케이블&lt;/strong&gt;(Optic fiber cable)은 광 신호를 전달하는 케이블로 유리로 만들어집니다.
줄여서 광 케이블이라고도 부릅니다.
다중 모드 광섬유 케이블은 단파장(Short Wavelength) 레이저를 사용하며, 단거리 전송에 적합합니다.
단일 모드 광섬유 케이블은 장파장(Long Wavelength) 레이저를 사용하며, 장거리 전송에 적합합니다.
전기 신호는 감쇠가 심한 반면 광 케이블은 멀리(수십 km)까지 보낼 수 있습니다.
해저 광 케이블&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;의 경우 추가 리피터없이 300km까지 전송이 가능하다고 합니다.
다만 광 케이블은 구리선에 비해 비싼 편입니다.&lt;/p&gt;
&lt;p&gt;일반 구리선 LAN(Local Area Network) 케이블에 흐르는 전기 신호는
전송 거리가 길수록 감쇠(Signal Attenuation)하며, 100m 정도 되면 파형이 깨지고 데이터 수신에 문제가 발생합니다.&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;
&lt;strong&gt;리피터&lt;/strong&gt;(&lt;strong&gt;Repeater&lt;/strong&gt;)는 파형을 한 번 더 증폭해서 정돈한 뒤 다른 쪽으로 전송합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;미디어 컨버터&lt;/strong&gt;(&lt;strong&gt;Media Converter&lt;/strong&gt;)는 전기 신호와 광 신호를 서로 변환하는 기기입니다.
광 케이블을 연결하지 못하는 기기만 있는 상황에서
장거리 전송을 위해 광 케이블을 사용하고자 할 때,
또는 전자파 간섭이 심한 환경에서 안정적인 통신을 위해
기존의 전기 신호 기반 네트워크와 광 신호 기반 네트워크를 연결하는 데 사용됩니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;무선 LAN&lt;/strong&gt;은 &lt;strong&gt;전파를 이용해 통신&lt;/strong&gt;합니다.
무선 LAN은 주파수 대역에 따라 2.4GHz, 5GHz 대역으로 나뉩니다.
2.4GHz 대역은 장애물에 강하기 때문에 옥내외에서 사용할 수 있습니다.
하지만 일상생활에서 사용되는 전자레인지, 블루투스 등에서 전파 간섭을 일으키는 경우가 많습니다.
전파 간섭이 발생하면 갑자기 연결이 끊어지거나 패킷이 소실되어 버립니다.
5GHz 대역은 사용할 수 있는 채널이 많고 동시에 사용할 수 있기 때문에
깨끗한 전파 환경을 구축할 수 있습니다.
하지만 장애물에 약하며, 옥외에서는 특정 주파수 대역(W56)만 사용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;액세스 포인트&lt;/strong&gt;(&lt;strong&gt;Access Point&lt;/strong&gt;)는 &lt;strong&gt;패킷을 전파로 변조 및 복조&lt;/strong&gt;하는 기기입니다.
디지털 데이터를 아날로그 전파로 변환하는 것을 변조(modulation)라고 합니다.
그 반대를 복조(demodulation)라고 하죠.
쉽게 말하면 무선과 유선 사이의 다리 역할을 합니다.&lt;/p&gt;
&lt;h1 id=&#34;layer-2---data-link-layer&#34;&gt;Layer 2 - Data Link Layer&lt;/h1&gt;
&lt;p&gt;L2(데이터 링크 계층)는 &lt;strong&gt;직접 연결된 인접 노드(장치) 간 데이터 전송을 담당&lt;/strong&gt;합니다.
L2는 &lt;strong&gt;MAC 주소&lt;/strong&gt;를 이용해 통신하며, &lt;strong&gt;프레임&lt;/strong&gt; 단위로 데이터를 전송합니다.
다른 계층과 달리 페이로드 뒤에 &lt;strong&gt;트레일러&lt;/strong&gt;(&lt;strong&gt;trailer&lt;/strong&gt;)가 포함될 수 있습니다.
예를 들어, 이더넷의 &lt;strong&gt;CRC&lt;/strong&gt;(Cyclic Redundancy Check)는 오류 검출하는 용도로 트레일러에 추가됩니다.&lt;/p&gt;
&lt;h2 id=&#34;l2-주요-기기&#34;&gt;L2 주요 기기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;브리지&lt;/strong&gt;(&lt;strong&gt;Bridge&lt;/strong&gt;)는 포트와 포트 사이의 &amp;lsquo;다리 bridge&amp;rsquo; 역할을 합니다.
단말에서 받아들인 MAC 주소를 테이블(MAC address table)로 관리하고 전송합니다.
이 전송 처리를 브리징(bridging)이라고 합니다.
최근에는 L2 스위치가 브리지의 기능을 포함하고 있어서 단일 기기를 이용하지는 않습니다.&lt;/p&gt;
&lt;h2 id=&#34;l2-주요-프로토콜&#34;&gt;L2 주요 프로토콜&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/IEEE_802&#34;&gt;IEEE 802&lt;/a&gt;는 LAN(Local Area Network)과
MAN(Metropolitan Area Network)을 위한 표준을 정의하는 국제 표준화 기구입니다.
하위 워킹 그룹(working group)에 따라 다양한 프로토콜이 정의되어 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;유선 LAN 프로토콜&lt;/strong&gt;(&lt;strong&gt;IEEE 802.3&lt;/strong&gt;)은 이더넷(Ethernet)에 대한 표준입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;무선 LAN 프로토콜&lt;/strong&gt;(&lt;strong&gt;IEEE 802.11&lt;/strong&gt;)은 영어로 Wireless LAN(WLAN)이라고 하며, 와이파이(Wi-fi)가 대표적입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IEEE 802.15&lt;/strong&gt;는 10m 정도 이내의 &lt;strong&gt;초근거리 통신인 WPAN&lt;/strong&gt;(&lt;strong&gt;Wireless Personal Area Network&lt;/strong&gt;)에 대한 표준입니다.
하위 워킹 그룹으로 정말 다양한 프로토콜이 있습니다.&lt;/p&gt;
&lt;p&gt;그 중 대표적인 것이 &lt;strong&gt;IEEE 802.15.1&lt;/strong&gt;인 &lt;strong&gt;블루투스&lt;/strong&gt;(&lt;strong&gt;Bluetooth&lt;/strong&gt;)입니다.
블루투스는 저전력 근거리 통신 프로토콜입니다.
무선 LAN에 비해 전속 속도나 통신 거리가 부족하지만
소비 전력이 적고 다양한 장치를 간단히 페어링할 수 있게 때문에 널리 보급되었습니다.
초기 버전이었던 Classic Bluetooth(BR/EDR)을 넘어
현재는 BLE(Bluetooth Low Energy) 스택이 널리 사용되고 있습니다.
BLE는 주기적으로 신호를 송신하는 소형 무선 장치인 &lt;strong&gt;비콘&lt;/strong&gt;(&lt;strong&gt;Beacon&lt;/strong&gt;)에서도 사용됩니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;지그비 Zigbee&lt;/strong&gt;는 &lt;strong&gt;IEEE 802.15.4&lt;/strong&gt;에서 표준화된 저전력 단거리 무선 프로토콜입니다.
무선 LAN에 비해 전송 속도나 전송 거리가 열악합니다.
하지만 데이터 송수신 시 소비 전력이 적고 슬립 시 대기 전력이 블루투스보다도 적기 때문에
스마트홈 가전이나 제조 공장의 센서 등
필요할 때만 통신하는 일이 많은 &lt;strong&gt;IoT&lt;/strong&gt;(&lt;strong&gt;Internet of Things&lt;/strong&gt;)에서 사용됩니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WirelessMAN&lt;/strong&gt;(&lt;strong&gt;IEEE 802.16&lt;/strong&gt;)은 &lt;strong&gt;광대역 무선 접속&lt;/strong&gt;을 위한 표준입니다.
무선 LAN보다 더 넓은 범위를 커버할 수 있습니다.
해외에서는 와이맥스(WiMAX, Worldwide Interoperability for Microwave Access)라는 이름으로 상용화되었습니다.
국내에서는 과거 와이브로(Wireless Broadband)라는 이름의 모바일 와이맥스가 상용화되었던 적이 있습니다.&lt;/p&gt;
&lt;p&gt;IEEE 802 그룹 외에도 다양한 프로토콜도 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RFID&lt;/strong&gt;(&lt;strong&gt;Radio-Frequency Identification&lt;/strong&gt;)는 무선 주파수로 &lt;strong&gt;태그&lt;/strong&gt;와 &lt;strong&gt;리더&lt;/strong&gt;기 간 통신 기술입니다.
&lt;strong&gt;NFC&lt;/strong&gt;(&lt;strong&gt;Near Field Communication&lt;/strong&gt;)는 기본적으로 RFID를 기반으로 만들어졌습니다.
&lt;strong&gt;13.56 MHz&lt;/strong&gt; 주파수를 사용하는 10cm 이내 초근거리 통신 기술입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PPP&lt;/strong&gt;(&lt;strong&gt;Point-to-Point Protocol&lt;/strong&gt;)는 &lt;strong&gt;직렬 통신&lt;/strong&gt;을 위한 프로토콜입니다.
전화선을 통해 인터넷에 접속하는 &amp;lsquo;다이얼업 접속&amp;rsquo;에서 사용된 프로토콜입니다.
과거 인터넷 접속 시에 사용되던 모뎀은 PPP 프로토콜을 사용했습니다.
이더넷 네트워크에서도 사용할 수 있도록 확장한 PPPoE(PPP over Ethernet)도 있습니다.&lt;/p&gt;
&lt;!-- https://youtu.be/LnGHcfcC-nE --&gt;
&lt;p&gt;PPTP(Point-to-Point Tunneling Protocol)는 인터넷상에 가상 전용선(터널)을 만드는 &lt;strong&gt;VPN&lt;/strong&gt; 프로토콜입니다.
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2637&#34;&gt;RFC2637&lt;/a&gt;에 정의되어 있습니다.
인증 메커니즘이 취약하고 암호화 방식이 약하여 보안적으로 약점이 많아서 현재는 사용하지 않는 추세입니다.
macOS도 &lt;a href=&#34;https://support.apple.com/HT206844&#34;&gt;Sierra(10.12)&lt;/a&gt;부터 대응을 중단했습니다.&lt;/p&gt;
&lt;p&gt;L2TP(Layer 2 Tunneling Protocol)도 PPTP와 마찬가지로 인터넷상에 가상 전용선을 만드는 프로토콜입니다.
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2661&#34;&gt;RFC2661&lt;/a&gt;에 정의되어 있습니다.
보안 기능을 가진 IPsec을 함께 사용해
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc3193&#34;&gt;L2TP over IPsec(RFC3193)&lt;/a&gt;으로 사용하는 경우가 대부분입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ARP&lt;/strong&gt;(&lt;strong&gt;Address Resolution Protocol&lt;/strong&gt;)는 MAC 주소와 L3에 해당되는 IP 주소를 매핑하는 프로토콜입니다.
L2와 L3 사이에 있다고 볼 수 있습니다.&lt;/p&gt;
&lt;h1 id=&#34;layer-3---network-layer&#34;&gt;Layer 3 - Network Layer&lt;/h1&gt;
&lt;p&gt;L3(네트워크 계층)는 &lt;strong&gt;다른 네트워크들을 연결&lt;/strong&gt;하고
&lt;strong&gt;패킷(Packet) 단위의 데이터가 출발지에서 최종 목적지까지 전달되도록 경로를 선택&lt;/strong&gt;하는 계층입니다.
L3는 &lt;strong&gt;IP 주소&lt;/strong&gt;를 이용해 데이터를 라우팅하고, &lt;strong&gt;패킷&lt;/strong&gt; 단위로 데이터를 전송합니다.
또한, 혼잡 제어와 QoS(서비스 품질) 보장을 통해 네트워크의 효율성을 높입니다.&lt;/p&gt;
&lt;h2 id=&#34;l3-주요-기기&#34;&gt;L3 주요 기기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;라우터&lt;/strong&gt;(&lt;strong&gt;Router&lt;/strong&gt;)는 단말로부터 받은 IP 패킷의 목적지 IP 주소를 보고,
라우팅 테이블을 참조하여 최적의 경로를 선택합니다.
그리고 그 경로로 패킷을 전달합니다.
이 과정을 패키지 릴레이(Package Relay)라고 하며, 흔히 라우팅(routing)이라고 합니다.
자신이 속한 네트워크 내에서도 발생할 수 있으며,
다른 네트워크로 패킷을 전달하는 경우도 포함됩니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L3 스위치&lt;/strong&gt;(&lt;strong&gt;Layer 3 Switch&lt;/strong&gt;)는 라우터에 L2 스위치(포트가 많은 브리지)를 추가한 기기입니다.&lt;/p&gt;
&lt;h2 id=&#34;l3-주요-프로토콜&#34;&gt;L3 주요 프로토콜&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IP&lt;/strong&gt;(&lt;strong&gt;Internet Protocol&lt;/strong&gt;)는
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc791&#34;&gt;RFC791&lt;/a&gt;에 정의된 프로토콜로, &lt;strong&gt;패킷&lt;/strong&gt;을 전송하는 역할을 합니다.
패킷을 전송하기 위해 송신지 IP 주소와 수적지 IP 주소가 IP 헤더에 포함됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0               1               2               3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|Version|  IHL  |Type of Service|          Total Length         |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|         Identification        |Flags|      Fragment Offset    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  Time to Live |    Protocol   |         Header Checksum       |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                       Source Address                          |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                    Destination Address                        |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                    Options                    |    Padding    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|         IP Payload (TCP Segment / UDP Datagram) ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;ICMP&lt;/strong&gt;(&lt;strong&gt;Internet Control Message Protocol&lt;/strong&gt;)는
IP 패킷을 전송하면서 발생하는 오류를 알리는 프로토콜입니다.
대표적으로 &lt;code&gt;ping&lt;/code&gt;이 Echo Request와 Echo Reply 패킷을 사용해서
L3 네트워크에 접속된 단말이 살아있는지 확인하는 데 사용됩니다.&lt;/p&gt;
&lt;p&gt;IP 패킷 헤더에는 &lt;strong&gt;TTL&lt;/strong&gt;(&lt;strong&gt;Time To Live&lt;/strong&gt;)이라는 패킷의 수명을 나타내는 1바이트(8비트) 필드가 있습니다.
IP 패킷의 수명은 &amp;lsquo;경유하는 라우터(Hop)의 수&amp;rsquo;를 의미합니다.
하지만 실제로 TTL 값은 L3 이상에서 동작하는 모든 기기에서 1씩 감소합니다.
값이 0이 되면 패킷이 파기되고, &lt;code&gt;Time-to-live excceded&lt;/code&gt;라는 ICMPv4 패킷을 반환하고, 송신지 단말에 전달합니다.
이는 라우팅 루프 방지와 통신 경로 확인(traceroute)을 위해 사용됩니다.&lt;/p&gt;
&lt;h3 id=&#34;ip-주소-체계&#34;&gt;IP 주소 체계&lt;/h3&gt;
&lt;p&gt;IP 주소는 L3 네트워크에 접속된 단말을 식별하는 주소입니다.
IPv4는 32비트 주소체계를 사용하고, IPv6는 128비트 주소체계를 사용합니다.
&lt;strong&gt;듀얼 스택&lt;/strong&gt;(&lt;strong&gt;Dual Stack&lt;/strong&gt;)은 IPv4와 IPv6를 동시에 사용하는 방식입니다.&lt;/p&gt;
&lt;p&gt;IPv4를 10진수로 표현할 때 8비트(1바이트)씩 점(.)으로 구분하는데,
구분된 그룹은 8비트씩 묶여서 옥텟(octet)이라고 부릅니다.
보통 IPv4 주소는 &lt;strong&gt;서브넷 마스크&lt;/strong&gt;(&lt;strong&gt;subnet mask&lt;/strong&gt;)와 함께 사용됩니다.
서브넷 마스크는 IP 주소를 네트워크 부분과 호스트 부분으로 나누는 역할을 합니다.
서브넷 마스크는 32비트 중 네트워크 부분을 1로, 호스트 부분을 0으로 표현합니다.
서브넷 마스크를 IP 주소와 AND 연산하면 네트워크 주소를 얻을 수 있습니다.
CIDR 표기로는 IPv4 주소 뒤에 서브넷 마스크의 &amp;lsquo;1&amp;rsquo;의 비트 수를 표기합니다.&lt;/p&gt;
&lt;p&gt;IPv4 주소에는 예외적인 주소들이 있습니다.
루프백(Loopback) 주소인 &lt;code&gt;127.0.0.1/8&lt;/code&gt;은 호스트 자기 자신을 가리키는 주소입니다.
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc1122&#34;&gt;RFC1122&lt;/a&gt;에 정의되어 있습니다.
Private IP 주소는 특정 범위의 IP 주소로, 인터넷에 공개되지 않습니다.
내부 네트워크에서만 사용할 수 있으며, 인터넷에 접속하기 위해서는 NAT와 같은 기술을 사용해야 합니다.
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc1918&#34;&gt;RFC1918&lt;/a&gt;에 정의되어 있습니다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Class&lt;/th&gt;
          &lt;th&gt;Start Address&lt;/th&gt;
          &lt;th&gt;End Address&lt;/th&gt;
          &lt;th&gt;Subnet Mask&lt;/th&gt;
          &lt;th&gt;Maximum Hosts&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;10.0.0.0&lt;/td&gt;
          &lt;td&gt;10.255.255.255&lt;/td&gt;
          &lt;td&gt;255.0.0.0   (/8)&lt;/td&gt;
          &lt;td&gt;16,777,214 (=2^24 - 2)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;172.16.0.0&lt;/td&gt;
          &lt;td&gt;172.132.255.255&lt;/td&gt;
          &lt;td&gt;255.240.0.0 (/12)&lt;/td&gt;
          &lt;td&gt;1,048,574  (=2^20 - 2)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;192.168.0.0&lt;/td&gt;
          &lt;td&gt;192.168.255.255&lt;/td&gt;
          &lt;td&gt;255.0.0.0   (/16)&lt;/td&gt;
          &lt;td&gt;65,534     (=2^16 - 2)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;NAT&lt;/strong&gt;(&lt;strong&gt;Network Address Translation&lt;/strong&gt;)는
사설(Private) IP 주소를 공인(Public) IP 주소로 상호 변환하는 기술입니다.
NAT를 사용하면 같은 사설 IP 주소를 사용하는 여러 단말이 하나의 공인 IP 주소로 인터넷에 접속할 수 있습니다.
NAT 기기를 넘어 단말끼리 직접 통신하도록 하기 위한 NAT 트래버설(NAT Traversal)이라는 기술이 있습니다.
이 중 &lt;strong&gt;포트 포워딩&lt;/strong&gt;(&lt;strong&gt;Port Forwarding&lt;/strong&gt;)은 특정 &lt;code&gt;IP주소:포트&lt;/code&gt;로 들어온 패킷을 특정 단말로 전달하는 기술입니다.
내부(LAN)에 있는 서버를 외부(인터넷)에 공개할 때 사용합니다.&lt;/p&gt;
&lt;h3 id=&#34;ip-라우팅&#34;&gt;IP 라우팅&lt;/h3&gt;
&lt;p&gt;라우터는 라우팅 테이블(Routing Table)을 통해
수신지 네트워크 정보와 IP 패킷을 전송할 근접 기기의 IP 주소를 나타내는 네트워크 홉 정보를 관리함으로써
IP 패킷의 전송 대상자를 바꿉니다.
IP 패킷의 전송 대상자를 바꾸는 기능을 &lt;strong&gt;라우팅&lt;/strong&gt;(&lt;strong&gt;Routing&lt;/strong&gt;)이라고 합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;라우팅 프로토콜&lt;/strong&gt;은 그 제어 범위에 따라 IGP(Interior Gateway Protocol)와
EGP(Exterior Gateway Protocol)로 나뉩니다.
하나의 정책에 따라 관리되는 네트워크 집합을 &lt;strong&gt;AS&lt;/strong&gt;(&lt;strong&gt;Autonomous System&lt;/strong&gt;)라고 하는데,
AS 내부에서 라우팅하는 프로토콜을 IGP로, AS 간 라우팅하는 프로토콜을 EGP로 분류합니다.
여기서 AS는 ISP(Internet Service Provider), 기업, 연구 기관, 특정 거점 등이 될 수 있습니다.&lt;/p&gt;
&lt;p&gt;대표적인 IGP로 &lt;strong&gt;OSPF&lt;/strong&gt;(&lt;strong&gt;Open Shortest Path First&lt;/strong&gt;)가 있습니다.
다익스트라 알고리즘을 기반으로 하는 링크 상태 라우팅 프로토콜(Link-state routing protocol)입니다.
링크 상태를 활용해 최적 경로를 계산합니다.&lt;/p&gt;
&lt;p&gt;또 다른 IGP로 &lt;strong&gt;RIP&lt;/strong&gt;(&lt;strong&gt;Routing Information Protocol&lt;/strong&gt;)가 있습니다.
디스턴스 벡터 라우팅 프로토콜(Distance-vector routing protocol)로, 벨만-포드 알고리즘을 기반으로 합니다.
거리(distnace)와 방향(vector)를 활용해서 경로를 계산합니다.
여기에서의 거리는 수신지에 이를 때까지 경유하는 라우터의 수(홉 수)를 의미합니다.&lt;/p&gt;
&lt;p&gt;대표적인 EGP로 &lt;strong&gt;BGP&lt;/strong&gt;(&lt;strong&gt;Border Gateway Protocol&lt;/strong&gt;)가 있습니다.
BGP는 AS 간 라우팅을 담당하는 프로토콜로, 경로 벡터 라우팅 프로토콜(Path-vector routing protocol)입니다.
경로(path)와 방향(vector)를 활용해서 경로를 계산합니다.
여기에서 경로는 수신지까지 경유하는 AS, 방향은 BGP peer를 나타냅니다.
BGP는 EGP이지만 AS 안에서도 사용할 수 있습니다.
AS 내부에서 사용하는 BGP를 &lt;strong&gt;iBGP&lt;/strong&gt;(&lt;strong&gt;Internal BGP&lt;/strong&gt;),
AS 간에 사용하는 BGP를 &lt;strong&gt;eBGP&lt;/strong&gt;(&lt;strong&gt;External BGP&lt;/strong&gt;)라고 부릅니다.&lt;/p&gt;
&lt;h1 id=&#34;layer-4---transport-layer&#34;&gt;Layer 4 - Transport Layer&lt;/h1&gt;
&lt;p&gt;L4(전송 계층)는 &lt;strong&gt;종단 간(end-to-end) 신뢰성 있는 데이터 전송&lt;/strong&gt;을 담당합니다.
L4는 포트 번호를 이용해 프로세스 간 통신을 가능하게 하며, &lt;strong&gt;세그먼트&lt;/strong&gt; 단위로 데이터를 전송합니다.
연결 지향 서비스(TCP)와 비연결 지향 서비스(UDP)를 제공하며,
흐름 제어와 오류 제어를 통해 데이터 전송의 안정성을 보장합니다.&lt;/p&gt;
&lt;h2 id=&#34;l4-주요-기기&#34;&gt;L4 주요 기기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;L4 로드 밸런서&lt;/strong&gt;(&lt;strong&gt;Load Balancer&lt;/strong&gt;)는 여러 서버에 들어오는 트래픽(Load)을 분산(Balancing)하는 장치입니다.
L4 로드 밸런서는 L4 스위치 또는 애플리케이션 스위치라고 불리기도 합니다.
IP 혹은 Port 기반으로 헬스 체크(HC, Health Check)해서 서버의 상태를 확인하고,
사용자가 지정한 로드 밸런싱 방식을 이용해 가용성 확보를 목표로 합니다.
로드 밸런서는 L7에도 사용됩니다.&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;방화벽&lt;/strong&gt;(&lt;strong&gt;Firewall&lt;/strong&gt;)은 단말 사이에서 교환되는 패킷을 검사하여 허용할지 막을지 결정하는 기기입니다.
패킷의 IP 주소나 포트 번호를 보고, 통신을 허가하거나 차단합니다.
이 통신 제어 기능을 스테이트풀 인스펙션(Stateful Inspection)이라고 합니다.
별도의 하드웨어로도 사용하지만, Netfilter 프레임워크를 이용한 iptables 같은 소프트웨어 방화벽도 널리 사용됩니다.&lt;/p&gt;
&lt;h2 id=&#34;l4-주요-프로토콜&#34;&gt;L4 주요 프로토콜&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TCP&lt;/strong&gt;(&lt;strong&gt;Transmission Control Protocol&lt;/strong&gt;)는
데이터 전송의 신뢰성을 요구하는 통신에서 사용합니다.
(&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc793&#34;&gt;RFC793&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0                   1                   2                   3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|          Source Port          |       Destination Port        |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                        Sequence Number                        |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                    Acknowledgment Number                      |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  Data |           |U|A|P|R|S|F|                               |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Offset| Reserved  |R|C|S|S|Y|I|            Window             |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|       |           |G|K|H|T|N|N|                               |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|           Checksum            |         Urgent Pointer        |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                    Options                    |    Padding    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|              TCP Payload (Application data) ...                              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;먼저 &lt;strong&gt;3 Way Handshake&lt;/strong&gt;를 통해 연결을 열어서 통신합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    TCP A                                                TCP B
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.  CLOSED                                               LISTEN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.  SYN-SENT    --&amp;gt; &amp;lt;SEQ=100&amp;gt;&amp;lt;CTL=SYN&amp;gt;                --&amp;gt; SYN-RECEIVED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.  ESTABLISHED &amp;lt;-- &amp;lt;SEQ=300&amp;gt;&amp;lt;ACK=101&amp;gt;&amp;lt;CTL=SYN,ACK&amp;gt;   &amp;lt;-- SYN-RECEIVED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.  ESTABLISHED --&amp;gt; &amp;lt;SEQ=101&amp;gt;&amp;lt;ACK=301&amp;gt;&amp;lt;CTL=ACK&amp;gt;       --&amp;gt; ESTABLISHED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- 통신 시작
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.  ESTABLISHED --&amp;gt; &amp;lt;SEQ=101&amp;gt;&amp;lt;ACK=301&amp;gt;&amp;lt;CTL=ACK&amp;gt;&amp;lt;DATA&amp;gt; --&amp;gt; ESTABLISHED
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;통신이 끝나면 &lt;strong&gt;4 Way Handshake&lt;/strong&gt;를 통해 연결을 닫습니다.&lt;sup id=&#34;fnref:8&#34;&gt;&lt;a href=&#34;#fn:8&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    TCP A                                                TCP B
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.  ESTABLISHED                                          ESTABLISHED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.  (Close)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FIN-WAIT-1  --&amp;gt; &amp;lt;SEQ=100&amp;gt;&amp;lt;ACK=300&amp;gt;&amp;lt;CTL=FIN,ACK&amp;gt;  --&amp;gt; CLOSE-WAIT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.  FIN-WAIT-2  &amp;lt;-- &amp;lt;SEQ=300&amp;gt;&amp;lt;ACK=101&amp;gt;&amp;lt;CTL=ACK&amp;gt;      &amp;lt;-- CLOSE-WAIT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.                                                       (Close)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    TIME-WAIT   &amp;lt;-- &amp;lt;SEQ=300&amp;gt;&amp;lt;ACK=101&amp;gt;&amp;lt;CTL=FIN,ACK&amp;gt;  &amp;lt;-- LAST-ACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.  TIME-WAIT   --&amp;gt; &amp;lt;SEQ=101&amp;gt;&amp;lt;ACK=301&amp;gt;&amp;lt;CTL=ACK&amp;gt;      --&amp;gt; CLOSED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6.  (2 MSL)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    CLOSED
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기서 &lt;strong&gt;연결(Connection)이란 프로세스 간의 안정적이고 논리적인 통신 통로&lt;/strong&gt;를 말합니다.
이 때 연결을 위해 &lt;strong&gt;소켓&lt;/strong&gt;(&lt;strong&gt;Socket&lt;/strong&gt;)이라는 네트워크 통신을 위한 추상화된 인터페이스를 사용합니다.
소켓은 기본적으로 L3까지 포함하지만 속도를 높이기 위해 Loopback 통신이 필요한 경우
L3를 거치지 않는 &lt;strong&gt;UDS&lt;/strong&gt;(&lt;strong&gt;Unix Domain Socket&lt;/strong&gt;)를 사용하기도 합니다.
대표적으로 Docker, MySQL, Python Gunicorn 등의 &lt;code&gt;.sock&lt;/code&gt; 파일이 UDS입니다.&lt;/p&gt;
&lt;p&gt;네트워크에서는 L3까지 Unreliable 통신입니다.
Unreliable 통신에선 네트워크가 &lt;strong&gt;혼잡&lt;/strong&gt;(&lt;strong&gt;Congestion&lt;/strong&gt;)한 상태가 될 수 있습니다.
패킷 손실(packet loss), 패킷 순서 뒤바뀜(out of order), 패킷 중복 전송(duplicate), 과부하(network overload) 등의 오류가 발생할 수 있죠.&lt;/p&gt;
&lt;p&gt;TCP는 데이터 전송의 신뢰성을 확보하기 위해 흐름 제어, 혼잡 제어를 제공합니다.
&lt;strong&gt;흐름 제어&lt;/strong&gt;(&lt;strong&gt;Flow Control&lt;/strong&gt;)는 수신자가 송신자의 속도를 따라가도록 수신자의 흐름양을 조정합니다.
대표적으로 슬라이딩 윈도우(Sliding Window) 기법이 있습니다.
&lt;strong&gt;혼잡 제어&lt;/strong&gt;(&lt;strong&gt;Congestion Control&lt;/strong&gt;)는 네트워크의 혼잡 상태를 감지하고 송신자의 흐름양을 조정합니다.
대표적으로 AIMD(Additive Increase/Multiplicative Decrease), 저속 시작(Slow Start), 혼잡 회피(congestion avoidance), 빠른 재전송(Fast Retransmit), 빠른 회복(Fast Recovery) 등이 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UDP&lt;/strong&gt;(&lt;strong&gt;User Datagram Protocol&lt;/strong&gt;)는 실시간성을 요하는 애플리케이션에 사용되는
&lt;strong&gt;비연결&lt;/strong&gt;(Connectionless) 지향 프로토콜입니다.(&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc768&#34;&gt;RFC768&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0                   1                   2                   3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|          Source Port          |       Destination Port        |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|            Length             |            Checksum           |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|              UDP Payload (Application data) ...                              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;포트-번호&#34;&gt;포트 번호&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;포트 번호&lt;/strong&gt;(&lt;strong&gt;Port Number&lt;/strong&gt;)는 &lt;strong&gt;프로세스 간 통신을 위한 번호&lt;/strong&gt;입니다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Range&lt;/th&gt;
          &lt;th&gt;Name&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0 ~ 1023&lt;/td&gt;
          &lt;td&gt;Well-Known ports (System ports)&lt;/td&gt;
          &lt;td&gt;System processes (with superuser privileges)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1024 ~ 49151&lt;/td&gt;
          &lt;td&gt;Registered ports&lt;/td&gt;
          &lt;td&gt;User processes (without superuser privileges)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;49152 ~ 65535&lt;/td&gt;
          &lt;td&gt;Dynamic, private ports&lt;/td&gt;
          &lt;td&gt;for temporary purposes, and for automatic allocation of ephemeral ports.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;layer-7---application-layer&#34;&gt;Layer 7 - Application Layer&lt;/h1&gt;
&lt;p&gt;L7(응용 계층)은 &lt;strong&gt;응용 프로그램이 네트워크 서비스를 이용할 수 있도록 인터페이스를 제공&lt;/strong&gt;합니다.
L4까지는 시스템 수준의 네트워크라면,
L7은 사용자 수준의 네트워크로 시스템에서 제공되는 인터페이스를 사용하여 통신합니다.
이 계층은 파일 전송, 이메일, 원격 로그인, 디렉터리 서비스, 화상 통화 등 다양한 네트워크 응용 서비스에 대한 프로토콜을 정의하고 구현합니다.&lt;/p&gt;
&lt;h2 id=&#34;l7-주요-프로토콜&#34;&gt;L7 주요 프로토콜&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;HTTP&lt;/strong&gt;(&lt;strong&gt;HyperText Transfer Protocol&lt;/strong&gt;)는
웹 서버와 웹 클라이언트 간의 통신을 위한 프로토콜입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DNS&lt;/strong&gt;(&lt;strong&gt;Domain Name System&lt;/strong&gt;)는
도메인 이름으로 IP 주소를 찾는 프로토콜입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FTP&lt;/strong&gt;(&lt;strong&gt;File Transfer Protocol&lt;/strong&gt;)는
파일 전송을 위한 프로토콜입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SMTP&lt;/strong&gt;(&lt;strong&gt;Simple Mail Transfer Protocol&lt;/strong&gt;)는
이메일을 전송하는 프로토콜입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SSH&lt;/strong&gt;(&lt;strong&gt;Secure Shell&lt;/strong&gt;)는 원격 로그인을 위한 프로토콜입니다.
(&lt;a href=&#34;https://markruler.github.io/posts/network/ssh/&#34;&gt;more&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SNMP&lt;/strong&gt;(&lt;strong&gt;Simple Network Management Protocol&lt;/strong&gt;)는
네트워크 장비의 상태를 모니터링하고 관리하기 위한 프로토콜입니다.
(&lt;a href=&#34;https://markruler.github.io/posts/network/snmp/&#34;&gt;more&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DHCP&lt;/strong&gt;(&lt;strong&gt;Dynamic Host Configuration Protocol&lt;/strong&gt;)는
단말에 대해 자동으로 IP 주소를 설정하는 방법입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LDAP&lt;/strong&gt;(&lt;strong&gt;Lightweight Directory Access Protocol&lt;/strong&gt;)는
디렉터리 서비스를 위한 프로토콜입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MQTT&lt;/strong&gt;(&lt;strong&gt;Message Queuing Telemetry Transport&lt;/strong&gt;)는
경량 발행-구독 메시징 프로토콜로 IoT 기기 간 메시지 전달에 적합합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SIP&lt;/strong&gt;(&lt;strong&gt;Session Initiation Protocol&lt;/strong&gt;)는
음성, 비디오, 메시징 애플리케이션을 포함하는 통신 세션을 시작, 유지, 종료하는 데 사용되는 신호 프로토콜입니다.
흔히 VoIP 통화를 위해 사용됩니다.&lt;/p&gt;
&lt;h1 id=&#34;더-읽을-거리&#34;&gt;더 읽을 거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;네트워크 일반
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9791191600414&#34;&gt;그림으로 공부하는 TCP/IP 구조&lt;/a&gt; | 미야타 히로시&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9791165213183&#34;&gt;IT 엔지니어를 위한 네트워크 입문&lt;/a&gt; | 고재성, 이상훈&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/K9L9YZhEjC0&#34;&gt;(Youtube) TCP 송/수신 원리&lt;/a&gt; | 널널한 개발자&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/X73Jl2nsqiE&#34;&gt;(Youtube) TCP Connection 이론편&lt;/a&gt; | 쉬운코드&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/WwseO8l8rZc&#34;&gt;(Youtube) TCP Connection 실제편&lt;/a&gt; | 쉬운코드&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/lLb2lMQpKbY&#34;&gt;(Youtube) byte-stream protocol vs message-oriented protocol&lt;/a&gt; | 쉬운코드&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;네트워크 심화
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9791185475318&#34;&gt;컴퓨터 네트워킹 하향식 접근&lt;/a&gt; | James F. Kurose, Keith W. Ross&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9788989975908&#34;&gt;TCP/IP 완벽 가이드&lt;/a&gt; | Charles M. Kozierok&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9791161755632&#34;&gt;TCP/IP Illustrated, Volume 1&lt;/a&gt; | 케빈 폴,리차드 스티븐스&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9788960552890&#34;&gt;데이터 통신과 네트워킹&lt;/a&gt; | Behrouz A. Forouzan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9791191600445&#34;&gt;DNS 실전 교과서&lt;/a&gt; | 와타나베 유이, 사토 신타, 후지와라 가즈노리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTTP
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9788966261208&#34;&gt;HTTP 완벽 가이드&lt;/a&gt; | 데이빗 고울리, 브라이언 토티, 마조리 세이어, 세일루 레디, 안슈 아가왈&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ISBN=9791161754475&#34;&gt;HTTP/2 in Action&lt;/a&gt; | 배리 폴라드&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/&#34;&gt;OSI 모델이란&lt;/a&gt; | Cloudflare&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;오버헤드는 데이터를 전송하기 위해 추가로 붙는 정보입니다.
헤더, 트레일러를 말합니다.
PDU를 잘게 나누면 오버헤드가 PDU 수만큼 추가되어 전송 오버헤드가 증가합니다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;고성능 컴퓨팅(HPC), 스토리지 장비, 기업 내부 전용망, 통신사 백본망 등에서는 MTU를 9000 바이트까지 설정하여 성능을 높이기도 합니다.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;Packet Capture, Packet Sniffing, Packet Loss, Packet Analyzer 등&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.submarinecablemap.com/&#34;&gt;전세계 해저 케이블 지도&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/WMOr3WSsu6Q&#34;&gt;실제 테스트하는 영상&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;
&lt;p&gt;AWS의 로드 밸런서인 ELB(Elastic Load Balancer)는 대표적으로 2가지 종류가 있습니다.
NLB(Network Load Balancer)는 L4,
ALB(Application Load Balancer)는 L7을 지원합니다.&amp;#160;&lt;a href=&#34;#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;
&lt;p&gt;이 연결을 맺고 끊는 과정에서 발생하는 대기(WAIT)는 TCP가 UDP보다 느려지게 만드는 주요 원인입니다.&amp;#160;&lt;a href=&#34;#fnref:8&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/network/network-layer/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>비파괴 스캐너로 스캔한 책 PDF outline 만들기</title>
        <link>https://markruler.github.io/posts/pdf/pdf-editor/</link>
        <pubDate>Mon, 27 Jan 2025 23:15:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/pdf/pdf-editor/</guid>
        <description>임창수 https://markruler.github.io/posts/pdf/pdf-editor/ -&lt;p&gt;절판된 책이나 집에서 보관하던 두꺼운 책을 스캔해서 소장하고 싶은 경우가 있습니다.
그래서 저는 비파괴 스캐너를 구입해서 거의 10년 동안 책을 스캔해서 보관하고 있습니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
하지만 펼칠 때마다 목차&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;가 없으면 발췌독하기 불편한데요.
오픈 소스 OCR 도구인 Tesseract를 이용해 PDF 목차를 만들어보겠습니다.&lt;/p&gt;
&lt;h1 id=&#34;사적이용을-위한-저작권법&#34;&gt;사적이용을 위한 저작권법&lt;/h1&gt;
&lt;p&gt;먼저 저작권에 대해 확인해야 할 부분이 있습니다.
과연 책을 스캔해서 PDF로 만드는 것이 합법일까요?
인터넷에 검색해보면 도서관에서 빌린 책을 스캔하는 건 불법이라고 하는 경우가 많은 것 같습니다.
&lt;a href=&#34;https://www.law.go.kr/%EB%B2%95%EB%A0%B9/%EC%A0%80%EC%9E%91%EA%B6%8C%EB%B2%95/(20240828,20358,20240227)/%EC%A0%9C30%EC%A1%B0&#34;&gt;저작권법 제30조&lt;/a&gt;를 보면 다음과 같이 명시되어 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;제30조(사적이용을 위한 복제) 공표된 저작물을 영리를 목적으로 하지 아니하고 개인적으로 이용하거나 가정 및 이에 준하는 한정된 범위 안에서 이용하는 경우에는 그 이용자는 이를 복제할 수 있다.
다만, 공중의 사용에 제공하기 위하여 설치된 복사기기, 스캐너, 사진기 등 문화체육관광부령으로 정하는 복제기기에 의한 복제는 그러하지 아니하다. &amp;lt;개정 2020. 2. 4.&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;이 조항에 대해서도 인터넷 커뮤니티에서는 &amp;ldquo;개인이 구매한 서적만 가능한 것이다&amp;quot;라고 해석하는 경우가 많은 것 같습니다.
유명한 테크 유튜브 채널인 &lt;a href=&#34;https://youtu.be/NUfQGNMfwis?t=491&#34;&gt;테크몽&lt;/a&gt;에서도 &lt;strong&gt;한국저작권위원회&lt;/strong&gt;에 직접 문의한 결과 문제가 없다고 합니다.
&lt;strong&gt;한국저작권보호원&lt;/strong&gt;의 &lt;a href=&#34;https://www.youtube.com/watch?v=9fSDhWAP7A0&#34;&gt;영상 댓글&lt;/a&gt;에서도 이 경우에는 문제없다고 하죠.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;공표된 저작물을 영리를 목적으로 하지 아니하고 개인적으로 이용하거나 가정 및 이에 준하는 한정된 범위 안에서 이용하는 경우에는 그 이용자는 이를 복제할 수 있습니다(저작권법 제30조).
이를 &amp;lsquo;사적이용을 위한 복제&amp;rsquo; 통칭 사적 복제라고 하며, 구입한 CD를 핸드폰에 넣어 듣기 위하여 mp3파일로 변환하는 행위, 다운로드받은 영화를 TV에서 보기 위하여 usb에 옮기는 행위, 구입한 책에 필기를 하기 위하여 복사하는 행위 등이 해당할 수 있습니다.
관련하여, 도서관에서 빌린 책을 직접 스캔 또는 사진으로 찍어 귀하 소유의 핸드폰으로 읽는 것은 사적복제로서 저작권 침해가 되지 않습니다.
그러나 이를 업체 등에 맡겨 스캔하거나, 스캔한 결과물을 한정된 범위 외의 다른 사람에게 보여주게 되면 사적 복제의 범위를 넘어 복제권 침해가 성립할 수 있음을 주의하여 주시기 바랍니다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;즉, &lt;strong&gt;자신이 소유한 또는 도서관에서 빌린 서적&lt;/strong&gt;을 &lt;strong&gt;개인적으로 이용&lt;/strong&gt;하기 위해 &lt;strong&gt;자신이 소유한 복제기기&lt;/strong&gt;로 직접 스캔한 경우 적법한 행위입니다.
이쯤이면 저작권법 제30조가 다르게 해석&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;될 여지는 없을 것 같습니다.&lt;/p&gt;
&lt;h1 id=&#34;pdf-읽기&#34;&gt;PDF 읽기&lt;/h1&gt;
&lt;p&gt;PDF는 Adobe 사에서 개발한 파일 형식으로, 다양한 운영체제에서 동일한 형식으로 문서를 표현할 수 있습니다.
여기서는 Python 모듈인 PyMuPDF를 사용해서 PDF를 읽어보겠습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pdf_file: pymupdf.Document = pymupdf.open(self.filename)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;ocr-optical-character-recognition&#34;&gt;OCR (Optical Character Recognition)&lt;/h1&gt;
&lt;p&gt;OCR은 광학 문자 인식(Optical Character Recognition)의 약자로, 이미지나 문서를 스캔해서 텍스트로 변환하는 기술입니다.
스캐너로 스캔한 책은 이미지로 저장이 되는데요.
이 이미지를 텍스트로 변환해서 PDF outline을 만들어보겠습니다.&lt;/p&gt;
&lt;p&gt;먼저 오픈 소스 도구인 &lt;a href=&#34;https://tesseract-ocr.github.io/tessdoc/Installation.html&#34;&gt;Tesseract OCR&lt;/a&gt;를 설치해야 합니다.
이후 Tesseract OCR 설치 경로의 &lt;code&gt;tessdata&lt;/code&gt; 디렉토리에 훈련 모델(&lt;a href=&#34;https://github.com/tesseract-ocr/tessdata/blob/main/kor.traineddata&#34;&gt;kor.tessdata&lt;/a&gt;)을 다운로드합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;page = pdf_file[&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;images = page.get_images()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;for&lt;/span&gt; img in images:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base_image = pdf_file.extract_image(img[&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    image = Image.open(io.BytesIO(base_image[&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    txt = pytesseract.image_to_string(image, lang=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;eng+kor&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#0f0&#34;&gt;# 영어와 한국어를 인식&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;pyqt6&#34;&gt;PyQt6&lt;/h1&gt;
&lt;p&gt;PyQt6는 Qt 프레임워크의 Python 바인딩으로, Qt는 크로스 플랫폼 GUI 프레임워크입니다.
위 조각 코드들을 조합해서 PyQt6로 PDF outline을 만드는 GUI 프로그램을 만들 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app = QApplication(sys.argv)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;window = App()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;window.show()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys.exit(app.exec())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;QThread&lt;/code&gt;를 사용해서 OCR 작업을 별도의 스레드에서 처리해야 Blocking 되는 것을 피할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# https://wikidocs.net/71014&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;class&lt;/span&gt; Worker(QThread):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;def&lt;/span&gt; __init__(self, parent=&lt;span style=&#34;color:#f00&#34;&gt;None&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    super().__init__(parent)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    self.filename = &lt;span style=&#34;color:#f00&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f00&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#ff0&#34;&gt;run&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0f0&#34;&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다음 화면은 &lt;a href=&#34;https://github.com/markruler/pdf-editor&#34;&gt;개인적으로 사용하기 위해 만든 프로그램&lt;/a&gt;입니다.
목차 부분을 OCR로 추출해서 편집할 수 있습니다.
편집된 목차를 두고 Write outline 버튼을 누르면 목차가 포함된 새 파일이 저장됩니다.
페이지는 직접 PDF에서 입력해야 하지만 귀찮은 일을 많이 줄일 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/pdf/pdf-editor/pdf-editor.jpg&#34; alt=&#34;PDF Editor&#34;&gt;&lt;/p&gt;
&lt;p&gt;기본적으로 제공된 훈련 데이터의 정확도가 높은 편은 아니지만,
일일이 타이핑하는 것보다는 훨씬 편리하고 빠릅니다.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Treventus ScanRobot과 같은 자동 비파괴 스캐너도 있지만, 개인이 사용하기에는 부피가 크고 비싸서 도서관이나 출판사, 대학교에서 사용됩니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;GNOME Evince에서는 Outline, Adobe Acrobat에선 Bookmark, macOS Preview에서는 Table of Contents로 표시됩니다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;유추해석 (법률에 명시되지 않은 사항에 대해, 유사한 사항에 관한 법률을 적용하는 해석 방법), 확장해석 (법문의 뜻을 보통의 의미보다 넓게 해석하는 방법) 등.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/pdf/pdf-editor/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>네트워크 대역폭과 NFS 지연</title>
        <link>https://markruler.github.io/posts/network/nfs-network-bandwidth/</link>
        <pubDate>Mon, 13 Jan 2025 19:13:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/network/nfs-network-bandwidth/</guid>
        <description>임창수 https://markruler.github.io/posts/network/nfs-network-bandwidth/ -&lt;p&gt;IDC마다 다르겠지만 일반적으로 Outbound 네트워크 트래픽 양에 따라 비용을 부과합니다.
제가 속한 팀은 트래픽 비용을 줄이기 위해 기존에 사설망(private network) 없이
내부 서버 간 통신하던 시스템에 사설망을 추가했습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/nfs-network-bandwidth/static-file-server.png&#34; alt=&#34;static-file-server.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DB 백업을 위해 Veeam을 사용하다가 expdp와 RMAN을 사용하기 시작했고,
NFS 마운트 된 스토리지에 백업본을 저장했습니다.&lt;/p&gt;
&lt;h1 id=&#34;문제&#34;&gt;문제&lt;/h1&gt;
&lt;p&gt;NFS 마운트 된 정적 파일들(이미지, 스크립트 파일)을 조회하는 서버에서만 부하가 발생하기 시작했습니다.&lt;/p&gt;
&lt;p&gt;확인해보니 DB 서버 회선에서 허용되는 네트워크 대역폭(1Gbps)의 100%를 사용하는 경우가 계속 발생했고,
덩달아 NFS 접근도 느려진 것입니다.
백업 기능을 변경한 후 발생했습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/nfs-network-bandwidth/inbound-db-server.png&#34; alt=&#34;static-file-server.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Inbound (DB server)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/nfs-network-bandwidth/outbound-storage-server.png&#34; alt=&#34;static-file-server.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Outbound (Storage server)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;레거시 서버에서 파일 업로드 기능 중 NFS 마운트 된 스토리지 서버에 저장하는 기능이 있었는데,
해당 기능에 DB 트랜잭션도 함께 묶이면서 DB에도 영향이 있었습니다.
가장 큰 문제는 레거시 프로젝트에 DB 트랜잭션 타임아웃 설정이 없어서 지속적으로 대기하는 상황이 발생했습니다.&lt;/p&gt;
&lt;h1 id=&#34;결론&#34;&gt;결론&lt;/h1&gt;
&lt;p&gt;전체 시스템에 장애를 발생시킨 직접적인 원인은 트랜잭션 타임아웃이었지만,
근본적인 원인은 NFS 마운트 된 디렉토리에 과도한 입출력이 발생한 것이었습니다.
DB 트랜잭션 타임아웃 설정과 함께 DB 백업 경로를 수정해서 해결은 되었습니다.&lt;/p&gt;
&lt;p&gt;하지만 장애가 발생한 후 확인하는 것이 아닌 발생하기 전 예방하는 것이 좋다고 생각합니다.
기능 설계 시 처리 가능한 트래픽 양을 계산하고, 부하 테스트를 통해 내구성을 테스트해야 합니다.&lt;/p&gt;
- https://markruler.github.io/posts/network/nfs-network-bandwidth/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>일상에서의 Wireshark</title>
        <link>https://markruler.github.io/posts/network/wireshark/</link>
        <pubDate>Mon, 30 Dec 2024 18:38:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/network/wireshark/</guid>
        <description>임창수 https://markruler.github.io/posts/network/wireshark/ -&lt;p&gt;Wireshark란 오픈 소스 네트워크 프로토콜 분석기입니다.
GUI와 CLI 환경 모두에서 사용할 수 있으며, 네트워크 문제를 분석할 때 많이 사용됩니다.
플랫폼 또한 Windows, macOS, Linux 등 다양한 운영체제에서 사용할 수 있습니다.
GUI가 꽤 편하기 때문에 Windows나 macOS에서는
&lt;a href=&#34;https://www.wireshark.org/docs/man-pages/wireshark.html&#34;&gt;Wireshark&lt;/a&gt;를 사용하는 경우가 많습니다.
여기서는 CLI 환경에서도 사용할 수 있는
&lt;a href=&#34;https://www.wireshark.org/docs/man-pages/tshark.html&#34;&gt;TShark&lt;/a&gt;를 소개합니다.&lt;/p&gt;
&lt;h1 id=&#34;설치&#34;&gt;설치&lt;/h1&gt;
&lt;p&gt;Ubuntu 22.04에서 설치하는 방법을 소개합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install tshark
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# GUI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install wireshark
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;wireshark&lt;/code&gt; 그룹 추가 후 컴퓨터를 재부팅해야 합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -aG wireshark &lt;span style=&#34;color:#eedd82&#34;&gt;$USER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# TShark (Wireshark) 3.6.2 (Git v3.6.2 packaged as 3.6.2-2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Dump and analyze network traffic.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# See https://www.wireshark.org for more information.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Usage: tshark [options] ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;네트워크-인터페이스-조회&#34;&gt;네트워크 인터페이스 조회&lt;/h1&gt;
&lt;p&gt;먼저 TShark로 사용할 수 있는 네트워크 인터페이스를 조회합니다.
&lt;code&gt;tcpdump&lt;/code&gt;와 유사하지만 특정 옵션이 더 추가되어 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# tshark --list-interfaces&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. enp2s0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. docker0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. vetha1d3dea
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. lo (Loopback)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6. enx0c3796393822
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7. bluetooth-monitor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8. nflog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9. nfqueue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10. dbus-system
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;11. dbus-session
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12. ciscodump (Cisco remote capture)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;13. dpauxmon (DisplayPort AUX channel monitor capture)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;14. randpkt (Random packet generator)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;15. sdjournal (systemd Journal Export)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;16. sshdump (SSH remote capture)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;17. udpdump (UDP Listener remote capture)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;tcpdump의 경우&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tcpdump -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.enp2s0 [Up, Running, Connected]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.docker0 [Up, Running, Connected]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.vetha1d3dea [Up, Running, Connected]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.any (Pseudo-device that captures on all interfaces) [Up, Running]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.lo [Up, Running, Loopback]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6.enx0c3796393822 [Up, Disconnected]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7.bluetooth-monitor (Bluetooth Linux Monitor) [Wireless]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8.nflog (Linux netfilter log (NFLOG) interface) [none]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9.nfqueue (Linux netfilter queue (NFQUEUE) interface) [none]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10.dbus-system (D-Bus system bus) [none]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;11.dbus-session (D-Bus session bus) [none]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;패킷-캡처-시-사용할-수-있는-옵션&#34;&gt;패킷 캡처 시 사용할 수 있는 옵션&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;tshark&lt;/code&gt; 라는 명령어를 옵션없이 실행하면 기본적으로
첫번째 non-loopback 인터페이스가 선택되고
이 인터페이스를 경유하는 모든 패킷을 캡처합니다.
네트워크 분석하기에는 너무 많은 패킷이 캡처되기 때문에
네트워크 인터페이스, 프로토콜, 호스트, 포트 등을 지정해서 필터링합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;network-interface&#34;&gt;Network interface&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--interface&lt;/code&gt; 네트워크 인터페이스의 이름 혹은 인덱스를 지정합니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i eth0&lt;/code&gt; &lt;code&gt;eth0&lt;/code&gt; 인터페이스를 캡처합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 2&lt;/code&gt; 2번째 인터페이스를 캡처합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;processing&#34;&gt;Processing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; &lt;a href=&#34;https://www.tcpdump.org/manpages/pcap-filter.7.html&#34;&gt;pcap-filter syntax&lt;/a&gt;를 사용하여 패킷을 필터링합니다.
&lt;ul&gt;
&lt;li&gt;패킷을 캡처할 때 사용됩니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f &amp;quot;tcp port 80&amp;quot;&lt;/code&gt; TCP port 80 패킷 필터링합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Y&lt;/code&gt;, &lt;code&gt;--display-filter&lt;/code&gt; &lt;a href=&#34;https://www.wireshark.org/docs/wsug_html_chunked/ChWorkBuildDisplayFilterSection.html&#34;&gt;Wireshark displa&lt;strong&gt;Y&lt;/strong&gt; filter syntax&lt;/a&gt; 사용하여 보고싶은 패킷만 표시합니다.
&lt;ul&gt;
&lt;li&gt;패킷을 읽을 때 사용됩니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Y &amp;quot;http.request&amp;quot;&lt;/code&gt; HTTP request 패킷 표시합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;stop-writing&#34;&gt;Stop writing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a &amp;lt;autostop cond.&amp;gt; ...&lt;/code&gt;, &lt;code&gt;--autostop &amp;lt;autostop cond.&amp;gt; …&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;duration:NUM&lt;/code&gt; NUM 초(seconds) 후 중지합니다. (기본값 무한, 소수점 사용 가능)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filesize:NUM&lt;/code&gt; NUM kB 이상 캡처 후 중지합니다. (최대 2GiB)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packets:NUM&lt;/code&gt; NUM 개 패킷 캡처 후 중지합니다. (&lt;code&gt;-c&lt;/code&gt;와 동일)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; n개 패킷 캡처 후 중지합니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c 10&lt;/code&gt; 10개 패킷 캡처 후 중지합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;write&#34;&gt;Write&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;--write-file&lt;/code&gt; 지정한 이름의 파일로 출력합니다. (stdout의 경우 &amp;lsquo;-&amp;rsquo;)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-w capture.pcap&lt;/code&gt; &amp;ldquo;capture.pcap&amp;quot;이라는 파일로 저장합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt; 출력 형식을 지정합니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-T fields&lt;/code&gt; 지정한 필드를 출력합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T pdml&lt;/code&gt; Packet Details Markup Language (PDML) 형식으로 출력합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T psml&lt;/code&gt; Packet Summary Markup Language (PSML) 형식으로 출력합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T json&lt;/code&gt; JSON 형식으로 출력합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T jsonraw&lt;/code&gt; 포맷팅 없이 JSON 형식으로 출력합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T ek&lt;/code&gt; Elasticsearch에 bulk insert하기 위한 형식으로 출력합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e &amp;lt;field&amp;gt;&lt;/code&gt; 위 출력 옵션 중 &lt;code&gt;ek&lt;/code&gt;, &lt;code&gt;fields&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;pdml&lt;/code&gt; 사용 시 출력할 필드를 지정합니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e tcp.port&lt;/code&gt; TCP port를 출력합니다.&lt;/li&gt;
&lt;li&gt;이 옵션은 여러 필드를 출력하기 위해 반복할 수 있습니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e tcp.port -e tcp.flags&lt;/code&gt; TCP port와 flags를 출력합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t a|ad|adoy|d|dd|e|r|u|ud|udoy&lt;/code&gt; 타임스탬프 형식을 지정합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--color&lt;/code&gt; Wireshark GUI와 유사하게 텍스트를 색상으로 출력하며, 24비트 색상을 지원하는 터미널이 필요합니다. 또한 PDML 및 PSML 형식에 색상 속성을 제공합니다(이 속성은 비표준임).
&lt;ul&gt;
&lt;li&gt;색상 설정을 변경하려면 &lt;a href=&#34;https://gitlab.com/wireshark/wireshark/-/wikis/ColoringRules&#34;&gt;ColoringRules&lt;/a&gt;를 확인해보세요.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;read-file&#34;&gt;Read file&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--read-file&lt;/code&gt; 파일에서 캡처된 패킷을 읽습니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r file&lt;/code&gt; &amp;ldquo;capture.pcap&amp;quot;이라는 파일에서 캡처된 패킷을 읽습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;패킷-분석&#34;&gt;패킷 분석&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/wireshark/wireshark-tui.png&#34; alt=&#34;Wireshark TUI&#34;&gt;&lt;/p&gt;
&lt;p&gt;기본적으로 특정 네트워크 인터페이스를 지정해서 실시간으로 패킷을 캡처하거나
이미 캡처된 pcap 파일을 열어서 분석할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;웹-앱-패킷-캡처&#34;&gt;웹 앱 패킷 캡처&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Youtube&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i any -f &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;host www.youtube.com&amp;#39;&lt;/span&gt; --color
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i any -f &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;host www.youtube.com&amp;#39;&lt;/span&gt; -T fields -e ip.src -e ip.dst -e tcp.port
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 172.17.0.2을 제외한 443 port 패킷 캡처&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tshark -i any -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;((tcp.port == 443 or udp.port == 443) and not ip.addr == 172.17.0.2)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tshark -i any -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;tcp.port == 443 or udp.port == 443&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;```&lt;/span&gt;wweded
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;```&lt;/span&gt;sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 테스트 모바일 앱에서 로컬 서버로 들어오는 패킷 캡처 (앱에서 서버 도메인을 private ip로 설정)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i any -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http and (tcp.port == 15500 or tcp.port == 33000) and ip.dst == 192.168.0.15&amp;#39;&lt;/span&gt; -T json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Postman처럼 localhost로 요청하는 패킷 캡처&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i lo -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http and (tcp.port == 15500 or tcp.port == 33000)&amp;#39;&lt;/span&gt; -T json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 15500 혹은 33000 포트로 요청하는 패킷에서 http body 출력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i any -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http and (tcp.dstport == 15500 or tcp.dstport == 33000)&amp;#39;&lt;/span&gt; -T fields -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i any -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http.request and (tcp.port == 15500 or tcp.port == 33000)&amp;#39;&lt;/span&gt; -T fields -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# loopback일 경우 ip.src, ip.dst 필드를 사용할 수 없다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# localhost의 15500 혹은 33000 포트에서 응답하는 패킷에서 http body 출력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i lo -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http and (tcp.srcport == 15500 or tcp.srcport == 33000)&amp;#39;&lt;/span&gt; -T fields -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i lo -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http.response and (tcp.port == 15500 or tcp.port == 33000)&amp;#39;&lt;/span&gt; -T fields -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# localhost의 15500 혹은 33000 포트를 경유하는 모든 패킷에서 http body 출력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i lo -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http and (tcp.port == 15500 or tcp.port == 33000)&amp;#39;&lt;/span&gt; -T fields -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;파일-출력&#34;&gt;파일 출력&lt;/h2&gt;
&lt;p&gt;파일로 출력할 때는 &lt;code&gt;tcpdump&lt;/code&gt;와 유사하게 사용할 수 있습니다.
실제로 서버에서 패킷을 캡처하는 경우 의존성이 적고 가벼운 &lt;code&gt;tcpdump&lt;/code&gt;를 더 많이 사용하는 편입니다.
&lt;strong&gt;파일로 출력할 때는 Wireshark display-filter(&lt;code&gt;-Y&lt;/code&gt;)를 사용할 수 없습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tshark: Display filters aren&amp;rsquo;t supported when capturing and saving the captured packets.&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# tcp 프로토콜의 port 33000을 경유하는 패킷 5초간 캡처해서 tcp_33000.pcap 파일로 저장&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -i any -f &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;tcp port 33000&amp;#39;&lt;/span&gt; -w tcp_33000.pcap -a duration:5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo timeout &lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt; tcpdump -i any -n tcp and port &lt;span style=&#34;color:#f60&#34;&gt;33000&lt;/span&gt; -w tcp_33000.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;파일-읽기&#34;&gt;파일 읽기&lt;/h2&gt;
&lt;p&gt;Wireshark(GUI)로 읽는 게 편하긴 하지만,
특정 필드만 출력하거나 JSON 형식으로 출력할 때는 CLI로 읽는 게 편합니다.
&lt;strong&gt;파일을 읽을 때는 pcap-filter(&lt;code&gt;-f&lt;/code&gt;)를 사용할 수 없습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tshark: Only read filters, not capture filters, can be specified when reading a capture file.&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# tshark로 파일 읽기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r capture.pcap --color
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# JSON 형식으로 읽기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r capture.pcap -T json | less
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 15500 혹은 33000 포트로 요청하는 패킷에서 ip, port, http body만 출력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r capture.pcap -Y &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http.request and (tcp.port == 15500 or tcp.port == 33000)&amp;#39;&lt;/span&gt; -T fields -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tshark -r capture.pcap -i &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;lo&amp;#39;&lt;/span&gt; -T fields -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e http.file_data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# wireshark GUI로 파일 읽기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wireshark capture.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://markruler.github.io/posts/network/wireshark/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>한국어를 지원하지 않는 게임의 비공식 한국어 패치 만들기</title>
        <link>https://markruler.github.io/posts/reverse-engineering/game-localization/</link>
        <pubDate>Mon, 16 Dec 2024 21:26:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/reverse-engineering/game-localization/</guid>
        <description>임창수 https://markruler.github.io/posts/reverse-engineering/game-localization/ -&lt;p&gt;스팀(Steam) 게임들은 PC에 파일이 설치되기 때문에 다른 플랫폼보다 게임 모드(Mod)나 패치 도구가 꽤 많습니다.
그래서 콘솔이나 고전게임보다 한국어 패치 제작 난이도가 쉽습니다.
한국어 패치 제작에 입문하기 좋은 플랫폼이라고 생각합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B2%8C%EC%9E%84-%EC%A0%80%EC%9E%91%EA%B6%8C%EA%B3%BC-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%8C%A8%EC%B9%98&#34;&gt;게임 저작권과 한국어 패치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EA%B2%8C%EC%9E%84-%EC%97%94%EC%A7%84%EB%B3%84-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%8C%A8%EC%B9%98-%EC%A0%9C%EC%9E%91-%EB%B0%A9%EB%B2%95&#34;&gt;대표적인 게임 엔진별 한국어 패치 제작 방법&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%96%B8%ED%8C%A9-%EB%8F%84%EA%B5%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&#34;&gt;언팩 도구 사용하기&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%9C%A0%EB%8B%88%ED%8B%B0-unity&#34;&gt;유니티 (Unity)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%96%B8%EB%A6%AC%EC%96%BC-%EC%97%94%EC%A7%84-unreal-engine&#34;&gt;언리얼 엔진 (Unreal Engine)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B2%8C%EC%9E%84%EB%A9%94%EC%9D%B4%EC%BB%A4-gamemaker-studio-2&#34;&gt;게임메이커 (GameMaker Studio 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%A0%8C%ED%8C%8C%EC%9D%B4-renpy---pygame&#34;&gt;렌파이 (Ren&amp;rsquo;Py - PyGame)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B3%A0%EB%8F%84-godot&#34;&gt;고도 (Godot)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%A6%AC%EB%B2%84%EC%8A%A4-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81-reverse-engineering&#34;&gt;리버스 엔지니어링 (Reverse Engineering)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#love2d&#34;&gt;Love2D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B3%A0%EC%A0%84-%EA%B2%8C%EC%9E%84&#34;&gt;고전 게임&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%8B%A4%EC%8B%9C%EA%B0%84-%EB%B2%88%EC%97%AD&#34;&gt;실시간 번역&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xunity-auto-translator&#34;&gt;XUnity Auto Translator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mort-monkeyheads-ocr-realtime-translator&#34;&gt;MORT (MonkeyHead&amp;rsquo;s OCR Realtime Translator)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을거리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;게임-저작권과-한국어-패치&#34;&gt;게임 저작권과 한국어 패치&lt;/h1&gt;
&lt;p&gt;먼저 저작권부터 이야기해야 할 것 같습니다.
엄연히 게임 파일을 수정하고 배포하는 것은 저작권법 위반입니다.
당연히 배포가 목적이라면 게임 개발사에 허락을 받아야 합니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;한국어 패치 제작자들은 호의로 패치하는 경우가 대부분이고,
인디 게임 개발사에서는 번역할 여건이 되지 않기 때문에 이에 긍정적으로 반응하는 경우가 대부분입니다.
제가 번역한 게임의 개발사도 크레딧(Credit)에 제 이름을 명시해주겠다는 제의까지 해주셨습니다.
하지만 일부 개발사들은 고소까지 하는 사례도 있다고 하니 법적인 책임을 반드시 숙지해야 합니다.&lt;/p&gt;
&lt;p&gt;고소까지 하는 저작권자의 마음도 충분히 이해가 갑니다.
첫번째 이유는 이미 한국어 패치를 계획하고 있다면
게임 개발사, 유통사, 번역사 모두에게 손해가 발생할 수 있기 때문입니다.
두번째 이유는 게임 데이터를 얻고 변조한다는 점에서
한국어 패치 제작과 게임 핵 제작은 한끗 차이이기 때문입니다.
패치 제작자의 의도에 따라 완전히 다른 패치 프로그램(Patcher)이 만들어지는 것이죠.
그래서 멀티 게임을 운영하는 개발사에서는 유독 민감하게 반응하는 것 같습니다.&lt;/p&gt;
&lt;h1 id=&#34;대표적인-게임-엔진별-한국어-패치-제작-방법&#34;&gt;대표적인 게임 엔진별 한국어 패치 제작 방법&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;SteamDB 기준 가장 많이 사용된 게임 엔진부터 나열했습니다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;기본적으로 제가 패치하는 방법은 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;게임 엔진별 언팩 도구를 사용하여 게임 파일을 추출합니다(unpack).&lt;/li&gt;
&lt;li&gt;스크립트(script 혹은 dialog)를 번역하고 수정합니다.&lt;/li&gt;
&lt;li&gt;한글을 지원하지 않는 폰트인 경우 폰트를 생성합니다.&lt;/li&gt;
&lt;li&gt;번역된 스크립트와 폰트를 다시 패키징하여(repack) 게임에 적용합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;한 가지 언어(주로 영어)만 제공하는 게임은 스크립트가 별도로 있지 않고,
게임 장면에 직접 포함되어 있는 경우가 있습니다.
이 경우 파일 카빙을 하거나 개발사에 직접 요청해야 합니다.
폰트도 한글을 지원하지 않는 경우가 많습니다.&lt;/p&gt;
&lt;h2 id=&#34;언팩-도구-사용하기&#34;&gt;언팩 도구 사용하기&lt;/h2&gt;
&lt;p&gt;인기 있는 게임 엔진들은 이미 언팩(unpack) 도구가 존재합니다.&lt;/p&gt;
&lt;h3 id=&#34;유니티-unity&#34;&gt;유니티 (Unity)&lt;/h3&gt;
&lt;p&gt;언팩-리팩 과정은 &lt;a href=&#34;https://github.com/nesrak1/UABEA&#34;&gt;UABEA&lt;/a&gt;를 사용합니다.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/FontAssetsSDF.html&#34;&gt;SDF(Signed Distance Fields)&lt;/a&gt; 폰트 생성 시
Glyph 관련 부분을 제외한 모든 부분을 원본과 동일하게 만들어야 한다는 것에 유의해야 합니다.
자세한 폰트 교체 방법은 &lt;a href=&#34;https://snowyegret.tistory.com/21&#34;&gt;Snowyegret&lt;/a&gt;님의 글을 참고하세요.&lt;/p&gt;
&lt;p&gt;IL2CPP&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;로 빌드된 유니티 게임은 &lt;a href=&#34;https://github.com/nesrak1/AddressablesTools&#34;&gt;nesrak1/AddressablesTools&lt;/a&gt;을 사용해서
&lt;code&gt;catalog.json&lt;/code&gt; 파일을 수정해야 합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example patchcrc catalog.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;언리얼-엔진-unreal-engine&#34;&gt;언리얼 엔진 (Unreal Engine)&lt;/h3&gt;
&lt;p&gt;5는 툴이 없어서 시도해보지 못했습니다.
4는 해외 커뮤니티에서 &lt;a href=&#34;https://gbatemp.net/threads/how-to-unpack-and-repack-unreal-engine-4-files.531784/&#34;&gt;masagrator라는 유저가 작성한 글과 툴&lt;/a&gt;을 참고하세요.&lt;/p&gt;
&lt;p&gt;다른 게임과 달리 Epic Games는 언팩 도구(&lt;code&gt;UnrealPak&lt;/code&gt;)를 직접 제공합니다.
패치 파일을 원본 pak 파일 위치에 &lt;code&gt;_p&lt;/code&gt;라는 접미사를 붙이면 적용됩니다.&lt;/p&gt;
&lt;h3 id=&#34;게임메이커-gamemaker-studio-2&#34;&gt;게임메이커 (GameMaker Studio 2)&lt;/h3&gt;
&lt;p&gt;언팩-리팩 과정은 언더테일 모드 툴인 &lt;a href=&#34;https://github.com/UnderminersTeam/UndertaleModTool/releases&#34;&gt;UnderminersTeam/UndertaleModTool&lt;/a&gt;을 사용합니다.&lt;/p&gt;
&lt;p&gt;자세한 폰트 교체 방법은 &lt;a href=&#34;https://snowyegret.tistory.com/65&#34;&gt;Snowyegret&lt;/a&gt;님의 글을 참고하세요.
폰트 교체 시 데이터 구조를 알고 파이썬과 같은 스크립트 언어를 안다면 좀 더 수월하게 패치할 수 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;렌파이-renpy---pygame&#34;&gt;렌파이 (Ren&amp;rsquo;Py - PyGame)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shizmob/rpatool&#34;&gt;rpatool&lt;/a&gt;로 패치할 파일을 언팩-리팩해서 게임 경로에 두면 적용됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone git@github.com:shizmob/rpatool.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# origin.rpa에 포함된 파일 목록 조회&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 rpatool -l origin.rpa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# RPA 파일을 추출해서 patch라는 폴더에 저장&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 rpatool -o output -x origin.rpa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 수정 후 패치 파일 리팩&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 rpatool -c patch.rpa output
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;고도-godot&#34;&gt;고도 (Godot)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GDRETools/gdsdecomp&#34;&gt;GDRETools/gdsdecomp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;code&gt;translation.csv&lt;/code&gt; 파일 추출을 지원하지 않아서 시도하지 못했었는데, &lt;a href=&#34;https://github.com/GDRETools/gdsdecomp/releases/tag/v0.8.0&#34;&gt;v0.8.0&lt;/a&gt; 버전부터 가능해졌다고 합니다.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;먼저 GDRE로 언팩할 때 암호화가 되어 있어서 에러가 발생했다면 encryption key를 찾아야 합니다.
&lt;a href=&#34;https://github.com/godotengine/godot/tree/3.5.2-stable&#34;&gt;Godot 3.5.2&lt;/a&gt; 기준
Ghidra를 사용해서 &lt;code&gt;script_encryption_key&lt;/code&gt;를 찾습니다.
변수명과 함수명 등은 컴파일 과정에서 모두 사라지기 때문에
근처에 하드코딩된 문자열을 찾아서 키를 유추해야 합니다.&lt;/p&gt;
&lt;p&gt;준비가 되었다면 &lt;code&gt;.pck&lt;/code&gt; 파일을 언팩합니다.
번역 파일이 만약 &lt;code&gt;csv&lt;/code&gt;나 &lt;code&gt;po&lt;/code&gt;와 같은 텍스트 파일이라면 간단하게 에디터로 수정 후
GDRE에서 &lt;code&gt;PCK&lt;/code&gt; &amp;gt; &lt;code&gt;Create PCK archive from folder...&lt;/code&gt;로 패키징하면 됩니다.
만약 &lt;code&gt;.translation&lt;/code&gt; 파일처럼 바이너리 형태라면 헥사 에디터와 같은 도구를 사용해서
바이트 크기를 정확하게 맞춰서 수정해야 합니다.
&lt;code&gt;translation&lt;/code&gt; 파일을 텍스트 형식으로 편집할 수 있는 툴은 아직 없는 것 같습니다.&lt;/p&gt;
&lt;h2 id=&#34;리버스-엔지니어링-reverse-engineering&#34;&gt;리버스 엔지니어링 (Reverse Engineering)&lt;/h2&gt;
&lt;p&gt;만약 적절한 언팩 도구가 없는 경우 직접 파일을 추출해야 합니다.
이때 기드라(Ghidra)와 같은 툴을 이용해서 &lt;a href=&#34;../file-signature/#%ED%8C%8C%EC%9D%BC-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98&#34;&gt;파일 시그니처&lt;/a&gt;나 암호키를 찾아야 할 수도 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;love2d&#34;&gt;Love2D&lt;/h3&gt;
&lt;p&gt;Love2D 게임은 &lt;code&gt;.love&lt;/code&gt; 파일로 패키징되어 있습니다.
&lt;code&gt;.love&lt;/code&gt; 파일은 ZIP 파일 기반의 포맷입니다.
일반적인 unzip 도구로 압축을 풀면 게임 파일을 확인할 수 있지만,
패치 도구(Patch)를 만들기 위해 직접 언팩하려면 파일 시그니처를 찾아야 합니다.
ZIP 포맷의 파일 시그니처는 &lt;code&gt;PK&lt;/code&gt;이기 때문에 이를 찾아내어 파일을 추출하고,
Love2D 개발툴을 사용해서 다시 패키징합니다.&lt;/p&gt;
&lt;h3 id=&#34;고전-게임&#34;&gt;고전 게임&lt;/h3&gt;
&lt;p&gt;고전 게임은 롬 카트리지에 저장되어 있습니다.&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;
구동 가능한 롬 파일을 직접 제작하거나 구해야 하는데, 아직 이 부분은 저도 모르겠습니다.
YY-CHR와 같은 툴로 롬 파일을 열어서 스프라이트 폰트를 수정하고,
HxD와 같은 Hex Editor로 폰트 매핑과 스크립트를 수정합니다.
패치 과정 자체는 스팀 게임과 동일하지만 Hex Editor를 들여다보는 일에 많은 인내가 필요합니다.&lt;/p&gt;
&lt;h2 id=&#34;실시간-번역&#34;&gt;실시간 번역&lt;/h2&gt;
&lt;p&gt;화면에 스크립트가 렌더링되고 텍스트를 추출해서 번역하는 방식입니다.
그래서 딜레이가 꽤 있습니다.
번역 방식은 인터넷을 통해 기계 번역하는 방법과 미리 번역된 파일을 활용해서 치환하는 방법이 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;xunity-auto-translator&#34;&gt;XUnity Auto Translator&lt;/h3&gt;
&lt;p&gt;한국어가 없는 신규 출시 유니티 게임을 플레이하고 싶을 때 유저들이 많이 사용하는 편입니다.
&lt;strong&gt;BepInEx&lt;/strong&gt;을 사용해서 게임 텍스트를 추출하고 치환합니다.
다만 게임과의 충돌로 인해 게임이 실행되지 않을 수도 있고, 게임 플레이 도중에 진행 불가 버그가 발생할 수도 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbepis/XUnity.AutoTranslator&#34;&gt;bbepis/XUnity.AutoTranslator&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://page.onstove.com/indie/global/view/9835166&#34;&gt;사용 방법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mort-monkeyheads-ocr-realtime-translator&#34;&gt;MORT (MonkeyHead&amp;rsquo;s OCR Realtime Translator)&lt;/h3&gt;
&lt;p&gt;국내 유저가 만들고 계속 업데이트 중인 툴입니다.
유니티 외 게임에서도 사용할 수 있습니다.
&lt;strong&gt;OCR&lt;/strong&gt;을 사용해서 화면에 출력된 텍스트를 읽는다고 합니다.
그래서 게임 텍스트 자체를 치환하는 것이 아닌 추가 레이어를 두기 때문에 게임 플레이 시 몰입을 방해할 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.naver.com/killkimno/223497997082&#34;&gt;MORT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;더-읽을거리&#34;&gt;더 읽을거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.inven.co.kr/webzine/news/?news=289168&#34;&gt;[인터뷰] 저작권법과 유저 한글패치&lt;/a&gt; - 인벤 &amp;amp; 이철우 게임·엔터테인먼트 전문 변호사&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cafe.naver.com/hansicgu/19375&#34;&gt;더 다양한 한국어 패치 방법&lt;/a&gt; - 한식구&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/%ED%95%9C%EA%B8%80_%EC%99%84%EC%84%B1%ED%98%95_%EC%9D%B8%EC%BD%94%EB%94%A9&#34;&gt;한글 완성형 인코딩&lt;/a&gt; - 위키백과&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://namu.wiki/w/%EC%99%84%EC%84%B1%ED%98%95&#34;&gt;완성형 한글&lt;/a&gt; - 나무위키&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.law.go.kr/%EB%B2%95%EB%A0%B9/%EC%A0%80%EC%9E%91%EA%B6%8C%EB%B2%95/(20240828,20358,20240227)/%EC%A0%9C101%EC%A1%B0%EC%9D%984&#34;&gt;제101조의4(프로그램코드역분석)&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://steamdb.info/tech/&#34;&gt;What are games built with and what technologies do they use?&lt;/a&gt; - SteamDB&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;원본 패치 툴인 &lt;a href=&#34;https://github.com/SeriousCache/UABE&#34;&gt;UABE (Unity Asset Bundle Extractor)&lt;/a&gt;는 업데이트가 중단되었습니다.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/6000.0/Documentation/Manual/scripting-backends-il2cpp.html&#34;&gt;IL2CPP&lt;/a&gt;는 유니티의 스크립트를 C++로 컴파일하는 기술입니다.
유니티는 기본적으로 &lt;strong&gt;Mono&lt;/strong&gt; 런타임을 사용해 C# 코드를 &lt;strong&gt;Intermediate Language — IL&lt;/strong&gt;로 컴파일하고,
이를 런타임에서 Just-In-Time (JIT) 방식으로 실행합니다.
&lt;strong&gt;AOT&lt;/strong&gt;(Ahead-of-Time Compilation) 컴파일은 런타임에서 코드를 컴파일하는 것이 아니라
미리 네이티브 코드로 컴파일하는 방식입니다.
JIT를 사용할 수 없는 플랫폼(ex: iOS, WebGL, Console)에서 사용됩니다.
IL2CPP는 AOT 방식의 일종으로 IL 코드를 C++ 코드로 변환 후 네이티브 코드로 컴파일합니다.
C++ 언어는 대부분의 플랫폼에서 지원되기 때문에 이 방식을 사용하면 플랫폼 호환성이 높아집니다.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;롬 카트리지(&lt;a href=&#34;https://en.wikipedia.org/wiki/ROM_cartridge&#34;&gt;ROM cartridge&lt;/a&gt;)에 저장된 패키지 게임입니다.
예를 들어, SFC(Super Famicom), GBA(Gameboy Advance), SNK NEOGEO, PS1, PCE(PC Engine) 등의 콘솔 게임들이 있습니다.
파일 시그니처를 모른채 직접 패턴을 파악해야 해서 난이도가 어렵다고 생각합니다.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/reverse-engineering/game-localization/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>파일 시그니처와 파일 카빙: 바이너리 데이터가 이상한 문자열로 표현되는 이유</title>
        <link>https://markruler.github.io/posts/reverse-engineering/file-signature/</link>
        <pubDate>Tue, 10 Dec 2024 22:46:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/reverse-engineering/file-signature/</guid>
        <description>임창수 https://markruler.github.io/posts/reverse-engineering/file-signature/ -&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;
&lt;p&gt;이미지를 다운로드하면 응답 데이터로 이상한 문자열이 출력됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Youtube의 빈 썸네일 이미지를 다운로드 받습니다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -L -o - https://i.ytimg.com/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;����JFIF���
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;�      !�
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;12ARaBqr��U�����������Qbd�������
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                                  ?�@��t��2�4�2�4��&amp;amp;`�f�b��*)��6�j�pVZ7՚�ތC:#uf��§���&amp;lt;�Z�W
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;�oMku�@��&amp;lt;\�O����H����M?^_��n
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                             Z��W�:&amp;gt;vW���ҟ˃lr�h�8e�z*ڷ�zw�ie4�
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;e�C�#:=(���R�&amp;#39;F��0���e�
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                       �
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                        ���T���9�p�z�n/1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;                                        �mSV��t�V�&amp;#34;&lt;/span&gt;��U �MI�;w��{O%��q
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                     �[&lt;span style=&#34;color:#eedd82&#34;&gt;$x&lt;/span&gt;�7UV��⫫�t����=6�l�&lt;span style=&#34;color:#87ceeb&#34;&gt;`&lt;/span&gt;Si)u7	u�^z*UW��[���L�˭��a?
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                                                            yn��mN���K��:��Z��&amp;amp;_
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                                                                                                ���{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ����j�sj�j-T���U�^m�2&lt;span style=&#34;color:#87ceeb&#34;&gt;\�&lt;/span&gt;O7��M�{�V�v��Vݝz�ԞRe|8��?�4qL5�i��Z��V�2e�ʝ��&amp;#39;����%zV����v�8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.A.@��F���&amp;gt;�8]�JU��ҕj�z�Vb~��o)*�Ҍ������/�n���{m�Ա��vI��U�qoZ�+U��Z{�&amp;amp;Z��;��B�������k�XЏR�;*t��	|J�-���ku�Kk5_s�[8�te��d�kĮl��%�{]�i���ɩ{5}%Y���in��sYa��*�ɭ��߯ko&amp;gt;��� f��,[��ٷ�h��?X|Yg�j?��1���s��t��� HJ�
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                             �^�f�4��Vނu-m�շ�����&lt;span style=&#34;color:#87ceeb&#34;&gt;`&lt;/span&gt;l���^���U{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                                            &amp;amp;H��%
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;�는 유니코드 replacement character(&lt;code&gt;U+FFFD&lt;/code&gt;)로, 해석할 수 없는 문자를 표시하기 위해 사용됩니다.&lt;/p&gt;
&lt;p&gt;이번엔 hexdump로 만들어주는 &lt;code&gt;xxd&lt;/code&gt; 명령어를 파이프로 이어보겠습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;whatis xxd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# xxd (1)              - make a hexdump or do the reverse.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -L -o - https://i.ytimg.com/ | xxd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;뭔지 모르겠지만 응답 데이터 앞쪽에 &lt;code&gt;JFIF&lt;/code&gt;가 적혀있습니다.
JFIF 파일 포맷일까요?
이후엔 또 알 수 없는 문자열이 출력됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                 Dload  Upload   Total   Spent    Left  Speed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f60&#34;&gt;100&lt;/span&gt;  &lt;span style=&#34;color:#f60&#34;&gt;1097&lt;/span&gt;  &lt;span style=&#34;color:#f60&#34;&gt;100&lt;/span&gt;  &lt;span style=&#34;color:#f60&#34;&gt;1097&lt;/span&gt;    &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#f60&#34;&gt;4712&lt;/span&gt;      &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; --:--:-- --:--:-- --:--:--  &lt;span style=&#34;color:#f60&#34;&gt;4728&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000000: ffd8 ffe0 &lt;span style=&#34;color:#f60&#34;&gt;0010&lt;/span&gt; 4a46 &lt;span style=&#34;color:#f60&#34;&gt;4946&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0001&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0100&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0001&lt;/span&gt;  ......JFIF......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000010: &lt;span style=&#34;color:#f60&#34;&gt;0001&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; ffdb &lt;span style=&#34;color:#f60&#34;&gt;0084&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0005&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0304&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0705&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0705&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000020: &lt;span style=&#34;color:#f60&#34;&gt;0505&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0506&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0508&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0506&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0505&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0505&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0805&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0507&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000030: &lt;span style=&#34;color:#f60&#34;&gt;0508&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0505&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0509&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0608&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0905&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0513&lt;/span&gt; 0a1c 0b07  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000040: 081a &lt;span style=&#34;color:#f60&#34;&gt;0908&lt;/span&gt; 050e &lt;span style=&#34;color:#f60&#34;&gt;2118&lt;/span&gt; 1a1d 111f 131f 130b  ......!.........
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000050: &lt;span style=&#34;color:#f60&#34;&gt;2218&lt;/span&gt; 221e 181c &lt;span style=&#34;color:#f60&#34;&gt;1213&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1201&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0505&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0507&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0607&lt;/span&gt;  &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;.............
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000060: &lt;span style=&#34;color:#f60&#34;&gt;0508&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0805&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1208&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0508&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000070: &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000080: &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000090: &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1212&lt;/span&gt; ffc0 &lt;span style=&#34;color:#f60&#34;&gt;0011&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0800&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000000a0: 5a00 &lt;span style=&#34;color:#f60&#34;&gt;7803&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0122&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0002&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1101&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0311&lt;/span&gt; 01ff c400  Z.x..&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;..........
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;000000b0: 1b00 0100 0203 0101 0000 0000 0000 0000  ................
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;000000c0: 0000 0001 0402 0307 0605 ffc4 003d 1000  .............=..
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;000000d0: 0201 0203 0307 060d 0500 0000 0000 0000  ................
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#87ceeb&#34;&gt;000000e0: 0201 0304 0511 1206 1321 0722 3132 4152  .........!.&amp;#34;&lt;/span&gt;12AR
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000000f0: &lt;span style=&#34;color:#f60&#34;&gt;6114&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4271&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;7292&lt;/span&gt; d215 &lt;span style=&#34;color:#f60&#34;&gt;5581&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;8491&lt;/span&gt; 94b1 c1c2  a.Bqr...U.......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000100: c3d1 d3f0 &lt;span style=&#34;color:#f60&#34;&gt;1751&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;6264&lt;/span&gt; b3ff c400 &lt;span style=&#34;color:#f60&#34;&gt;1401&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0100&lt;/span&gt;  .....Qbd........
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000110: &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; 00ff  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000120: c400 &lt;span style=&#34;color:#f60&#34;&gt;1411&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0100&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000130: &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; 00ff da00 0c03 &lt;span style=&#34;color:#f60&#34;&gt;0100&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0211&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0311&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000140: 003f 00ef &lt;span style=&#34;color:#f60&#34;&gt;4000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0098&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;8274&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;8188&lt;/span&gt; 32d0  .?..@......t..2.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000150: &lt;span style=&#34;color:#f60&#34;&gt;3401&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;8832&lt;/span&gt; d034 &lt;span style=&#34;color:#f60&#34;&gt;8188&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;2660&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;8000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt;  4..2.4..&amp;amp;&lt;span style=&#34;color:#87ceeb&#34;&gt;`&lt;/span&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000160: &lt;span style=&#34;color:#f60&#34;&gt;0010&lt;/span&gt; 66aa 62a5 8a2a &lt;span style=&#34;color:#f60&#34;&gt;0129&lt;/span&gt; 1b96 81f2 &lt;span style=&#34;color:#f60&#34;&gt;3683&lt;/span&gt;  ..f.b..*.)....6.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000170: 6aec &lt;span style=&#34;color:#f60&#34;&gt;7056&lt;/span&gt; 5a37 1bda d59a 15da de8c 433a  j.pVZ7........C:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000003b0: 495a 369b c7de cae4 af5a &lt;span style=&#34;color:#f60&#34;&gt;5251&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1297&lt;/span&gt; 7a63  IZ6......ZRQ..zc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000003c0: &lt;span style=&#34;color:#f60&#34;&gt;5673&lt;/span&gt; 97de 74ba 8c06 a620 &lt;span style=&#34;color:#f60&#34;&gt;4800&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt;  Vs..t.... H.....
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000003d0: 4ac9 000d 9ab5 &lt;span style=&#34;color:#f60&#34;&gt;7359&lt;/span&gt; 61a3 bb2a b31e c9ad  J.....sYa..*....
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000003e0: adad dfaf 6b6f 3eb5 bd19 fc20 &lt;span style=&#34;color:#f60&#34;&gt;6606&lt;/span&gt; a6c3  ....ko&amp;gt;.... f...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;000003f0: 2c5b ad87 d9b7 cd68 fba6 3f04 587c &lt;span style=&#34;color:#f60&#34;&gt;5967&lt;/span&gt;  ,[.....h..?.X|Yg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000400: f56a 3fa1 bf31 981a d70c b25e ae1f 66bf  .j?..1.....^..f.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000410: 34a3 ee9b 56de &lt;span style=&#34;color:#f60&#34;&gt;8275&lt;/span&gt; 2d6d d3d5 b7a2 bf84  4...V..u-m......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000420: 8cc6 606c 97ec ec5e aac7 058f 557b 0c26  ..&lt;span style=&#34;color:#87ceeb&#34;&gt;`&lt;/span&gt;l...^....U{.&amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000430: &lt;span style=&#34;color:#f60&#34;&gt;4800&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt;  H...............
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000440: &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0000&lt;/span&gt; 7fff d9                   .........
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이는 이진(binary) 데이터를 16진수(hexadecimal) 혹은 터미널, 브라우저와 같은 실행 프로그램에서 지원하는 문자열로 표현된 것입니다.&lt;/p&gt;
&lt;p&gt;이번엔 HTML 문서를 PDF로 변환해서 응답하는 서버로 테스트 해보겠습니다.
&lt;a href=&#34;https://github.com/markruler/htmltopdf&#34;&gt;데모 서버&lt;/a&gt;를 실행 후
다음과 같은 코드로 요청을 보내면 PDF 파일을 받을 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;let&lt;/span&gt; myHeaders = &lt;span style=&#34;color:#f00&#34;&gt;new&lt;/span&gt; Headers();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myHeaders.append(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;let&lt;/span&gt; urlencoded = &lt;span style=&#34;color:#f00&#34;&gt;new&lt;/span&gt; URLSearchParams();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;urlencoded.append(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;html&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;Test&amp;lt;/span&amp;gt; Text&amp;lt;/div&amp;gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;urlencoded.append(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;css&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;span{color:red;}span{font-size:30px;}&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;urlencoded.append(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;orientation&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;landscape&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;urlencoded.append(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;filename&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;test-filename&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f00&#34;&gt;let&lt;/span&gt; requestOptions = {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  method: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  headers: myHeaders,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  body: urlencoded,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  redirect: &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;follow&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fetch(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;/pdf/content&amp;#34;&lt;/span&gt;, requestOptions)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .then(response =&amp;gt; response.text())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .then(result =&amp;gt; console.log(result))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .&lt;span style=&#34;color:#f00&#34;&gt;catch&lt;/span&gt;(error =&amp;gt; console.log(&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, error));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;console.log()&lt;/code&gt;로 출력된 응답 데이터는 &lt;code&gt;%PDF&lt;/code&gt;라는 문자를 시작으로 다양한 형식의 데이터가 혼합되어 있습니다.
PDF 형식이라는 것을 유추할 수 있습니다.
반면 네트워크 패널에서 응답(Response) 데이터는 16진수로 표현됩니다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/reverse-engineering/file-signature/hex-pdf.png&#34; alt=&#34;Hexadecimal PDF&#34;&gt;&lt;/p&gt;
&lt;p&gt;크롬 브라우저는 그동안 네트워크 패널에서 바이너리 데이터를 응답받으면
&amp;ldquo;The request has no response data available.&amp;ldquo;이라는 메시지와 함께 표시하지 않거나 UTF-8로 디코딩하여 출력했습니다.
최근 업데이트&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; 이후 16진수로 표현하도록 변경되었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/reverse-engineering/file-signature/google-chrome-123.0.6312.122-network-img-response.png&#34; alt=&#34;google-chrome-123.0.6312.122-network-img-response&#34;&gt;&lt;/p&gt;
&lt;p&gt;크롬의 Preview 탭은 해당 파일 포맷에 맞게 미리보기가 출력됩니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/reverse-engineering/file-signature/google-chrome-123.0.6312.122-network-img-preview.png&#34; alt=&#34;google-chrome-123.0.6312.122-network-img-preview&#34;&gt;&lt;/p&gt;
&lt;p&gt;그렇다면 이 괴상한 문자열들은 어떻게 해석해야 할까요?&lt;/p&gt;
&lt;h1 id=&#34;파일-시그니처&#34;&gt;파일 시그니처&lt;/h1&gt;
&lt;p&gt;파일 시그니처(File Signature)는 파일의 특정 부분에 위치한 고유한 바이트 패턴입니다.
파일이 어떤 포맷인지 알려주는 식별자 역할을 합니다.
매직 넘버(magic numbers)라고도 부르죠.&lt;/p&gt;
&lt;p&gt;실행 프로그램(Reader)들은 파일 시그니처를 확인하여 파일 포맷을 판별하고,
해당 파일 포맷에 맞게 데이터를 해석하고 표현합니다.
가장 먼저 봤던 &lt;code&gt;JFIF&lt;/code&gt; 파일이나 &lt;code&gt;%PDF&lt;/code&gt; 모두 파일의 앞쪽에 위치하는 헤더 시그니처입니다.
(모든 파일 형식이 이름과 동일하게 시그니처를 정하진 않습니다.)&lt;/p&gt;
&lt;p&gt;파일의 시그니처를 확인하는 번거로운 작업을 줄이기 위해
웹에서는 응답 헤더에 &amp;ldquo;Content-Type&amp;quot;을 지정하고
GUI 환경 데스크탑에서는 &amp;ldquo;파일 확장자(File Extension)&amp;ldquo;를 지정합니다.&lt;/p&gt;
&lt;h1 id=&#34;파일-카빙&#34;&gt;파일 카빙&lt;/h1&gt;
&lt;p&gt;파일 카빙(File Carving)은 파일 시그니처 기반으로 저장 매체에서 파일 내용을 복구하는 기술입니다&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dfrc.korea.ac.kr/&#34;&gt;DFRC (Digital Forensic Research Center)&lt;/a&gt; 자료를 참조했습니다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20180815025824/http://forensic.korea.ac.kr/DFWIKI/index.php/%EB%8D%B0%EC%9D%B4%ED%84%B0_%EB%B3%B5%EA%B5%AC&#34;&gt;파일 복구&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/URsDgiD0FwA?list=PLx4zTdLSy3x7wBShSxO-gykGUPrH1LF4L&amp;amp;t=1657&#34;&gt;램 슬랙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-시그니처-기반-카빙&#34;&gt;1. 시그니처 기반 카빙&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;주요 과정
&lt;ul&gt;
&lt;li&gt;header 시그니처 탐지: 저장 매체의 로우 데이터(raw data)에서 파일 헤더 시그니처를 검색합니다.&lt;/li&gt;
&lt;li&gt;footer 시그니처 탐지: 같은 방식으로 파일의 푸터 시그니처를 검색합니다.&lt;/li&gt;
&lt;li&gt;데이터 추출: 헤더 시그니처와 푸터 시그니처 사이의 데이터를 추출하여 파일로 복원합니다.&lt;/li&gt;
&lt;li&gt;파일 검사 및 재구성: 복원된 파일의 무결성과 유효성을 검사하여 제대로 복구되었는지 확인합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;한계점
&lt;ul&gt;
&lt;li&gt;조각난 파일(Fragmented File): 파일이 여러 조각으로 분리되어 저장된 경우 복구가 어렵습니다.&lt;/li&gt;
&lt;li&gt;파일 손상: 데이터 일부가 손실되었거나 덮어씌워진 경우 복원이 불완전할 수 있습니다.&lt;/li&gt;
&lt;li&gt;정확도: 잘못된 시그니처 탐지로 인해 오탐(False Positive)이 발생할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-파일-구조체-카빙&#34;&gt;2. 파일 구조체 카빙&lt;/h2&gt;
&lt;p&gt;파일의 내부 구조를 분석하고 검증하여 파일을 복구합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;파일 미리보기 지원하는 파일은 파일 포맷 내부에 실제 내용과 썸네일(Thumbnail)을 포함하는데,
썸네일도 해당 파일 포맷과 동일한 구조로 되어 있어 시그니처가 2개 이상 존재합니다.&lt;/li&gt;
&lt;li&gt;ZIP 파일의 경우 헤더 시그니처가 &lt;code&gt;PK34&lt;/code&gt;(hex: &lt;code&gt;50 4B 03 04&lt;/code&gt;)이며, 푸터 시그니처가 &lt;code&gt;PK56&lt;/code&gt;(hex: &lt;code&gt;50 4B 05 06&lt;/code&gt;) 입니다.
파일 헤더에는 파일 크기와 CRC32 체크섬이 포함된 메타데이터가 있습니다.
단편화된 파일을 재구성하는 경우 파일 구조를 바탕으로 데이터 블록을 논리적으로 연결합니다.
이후 메타데이터에서 체크섬을 검증하여 파일의 무결성을 확인합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-램-슬랙-카빙&#34;&gt;3. 램 슬랙 카빙&lt;/h2&gt;
&lt;p&gt;파일의 내용을 디스크에 기록할 때 파일 크기가 512의 배수가 되지 않으면 &lt;code&gt;0x00&lt;/code&gt;으로 채워지는 영역을 램 슬랙이라고 합니다.
디스크 섹터의 크기가 512 bytes일 때 파일의 크기가 512의 배수가 아닌 경우 나머지 부분은 램 슬랙으로 채워집니다.
시그니처 기반 카빙 기법에서 푸터 시그니처와 함께 램 슬랙을 확인하게 되면 많은 오탐을 줄일 수 있습니다.&lt;/p&gt;
&lt;h1 id=&#34;더-읽을거리&#34;&gt;더 읽을거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/M-_Fdgf9IZo?list=PLx4zTdLSy3x7wBShSxO-gykGUPrH1LF4L&#34;&gt;(Youtube) 디지털 데이터의 저장과 표현: 문자 코드와 파일&lt;/a&gt; - DFRC (Digital Forensic Research Center)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.garykessler.net/library/file_sigs.html&#34;&gt;GCK&amp;rsquo;S FILE SIGNATURES TABLE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_file_signatures&#34;&gt;List of file signatures&lt;/a&gt; - Wikipedia&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.file-recovery.com/signatures.htm&#34;&gt;The concept of file signatures recovery&lt;/a&gt; - Active@ File Recovery&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File_carving&#34;&gt;File Carving&lt;/a&gt; - Wikipedia&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.chrome.com/docs/devtools/memory-inspector&#34;&gt;Memory Inspector&lt;/a&gt;가 네트워크 패널에도 적용된 것으로 보입니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;정확히 언제인지는 모르겠지만 Google Chrome 131 전후로&amp;hellip;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/60FtdnBey-E?list=PLx4zTdLSy3x7wBShSxO-gykGUPrH1LF4L&amp;amp;t=745&#34;&gt;(Youtube) 삭제 파일 복구 기술&lt;/a&gt; - DFRC (Digital Forensic Research Center)&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/reverse-engineering/file-signature/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>웹 페이지 응답 방법과 프레임워크</title>
        <link>https://markruler.github.io/posts/web/respond-web-page/</link>
        <pubDate>Sun, 24 Nov 2024 23:32:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/web/respond-web-page/</guid>
        <description>임창수 https://markruler.github.io/posts/web/respond-web-page/ -&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cgi-common-gateway-interface&#34;&gt;CGI (Common Gateway Interface)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ssr-server-side-rendering&#34;&gt;SSR (Server-Side Rendering)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%84%9C%EB%B2%84-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%97%94%EC%A7%84&#34;&gt;서버 템플릿 엔진&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#csr-client-side-rendering&#34;&gt;CSR (Client-side Rendering)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#spa-single-page-application&#34;&gt;SPA (Single Page Application)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#web-api-web-component&#34;&gt;Web API: Web Component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pwa-progressive-web-apps&#34;&gt;PWA (Progressive Web Apps)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ssg-static-site-generation&#34;&gt;SSG (Static Site Generation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cms-content-management-system&#34;&gt;CMS (Content Management System)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#micro-frontend-architecture-mfa&#34;&gt;Micro Frontend Architecture (MFA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%95%84%EC%9D%BC%EB%9E%9C%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-island-architecture&#34;&gt;아일랜드 아키텍쳐 Island Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EC%9B%B9%EB%B7%B0webview---%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%95%B1%EC%97%90%EC%84%9C&#34;&gt;웹뷰(WebView) - 모바일 앱에서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8D%94-%EC%9D%BD%EC%9D%84%EA%B1%B0%EB%A6%AC&#34;&gt;더 읽을거리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cgi-common-gateway-interface&#34;&gt;CGI (Common Gateway Interface)&lt;/h1&gt;
&lt;p&gt;웹 서버와 외부 프로그램(애플리케이션) 간에 데이터를 주고받기 위한 인터페이스입니다.
웹 서버가 클라이언트(브라우저)로부터 요청을 받으면, CGI 프로그램을 호출하여 동적으로 콘텐츠를 생성한 뒤, 그 결과를 클라이언트에 반환합니다.&lt;/p&gt;
&lt;h1 id=&#34;ssr-server-side-rendering&#34;&gt;SSR (Server-Side Rendering)&lt;/h1&gt;
&lt;p&gt;서버에서 콘텐츠를 렌더링하여 완전한 HTML을 클라이언트에게 전달합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;여기서 렌더링한다는 의미는 화면을 그린다는 게 아니라 DOM 구조를 만든다는 것입니다.&lt;/li&gt;
&lt;li&gt;렌더링을 서버에서 수행하기 때문에 CSR에 비해 상대적으로 최초 페이지 응답 속도가 느립니다.
&lt;ul&gt;
&lt;li&gt;서버가 한국에 있고 클라이언트가 해외에 있다면 빈 페이지도 받지 못하고 오래 기다리게 됩니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;검색 엔진 봇이 완전한 HTML을 받기 때문에 SEO에 유리합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;서버-템플릿-엔진&#34;&gt;서버 템플릿 엔진&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Tomcat의 Jasper
&lt;ul&gt;
&lt;li&gt;JSP(JavaServer Pages) 파일을 서블릿 코드로 변환하고 컴파일하는 데 사용되는 JSP 엔진입니다.&lt;/li&gt;
&lt;li&gt;include 지시어를 사용해서 여러 부분으로 코드 조각을 나눌 수 있습니다.&lt;/li&gt;
&lt;li&gt;static include 방식을 이용해 빌드된 React, Vue 프로젝트의 &lt;code&gt;index.html&lt;/code&gt;을 포함시킬 수도 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Microsoft의 Razor
&lt;ul&gt;
&lt;li&gt;C# 코드와 HTML을 결합합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Twig, Smarty, Blade
&lt;ul&gt;
&lt;li&gt;PHP 템플릿 엔진들입니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;csr-client-side-rendering&#34;&gt;CSR (Client-side Rendering)&lt;/h1&gt;
&lt;p&gt;클라이언트(브라우저)에서 콘텐츠를 렌더링합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;물을 부어 보충한다는 의미로 Hydration한다고도 합니다. 초기 렌더링(SSR)과 구분지어 표현하기 위해 사용하는 듯합니다.&lt;/li&gt;
&lt;li&gt;서버에서 HTML 문서를 응답받아서 브라우저가 DOM을 렌더링 한 후 추가로 렌더링합니다.&lt;/li&gt;
&lt;li&gt;경우에 따라 오리진 서버에서 받을 필요가 없기 때문에 캐시된 문서를 받을 수 있습니다.&lt;/li&gt;
&lt;li&gt;동일한 페이지라면 서버에서 렌더링하는 SSR보다 페이지 응답 속도가 빠릅니다.&lt;/li&gt;
&lt;li&gt;검색 엔진 봇이 크롤링할 때 빈 페이지로 보입니다. 이 경우 화면이 그려질 때까지 기다렸다가 스크래핑하는 경우도 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;spa-single-page-application&#34;&gt;SPA (Single Page Application)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vue, React, Angular&lt;/li&gt;
&lt;li&gt;사용자가 웹 애플리케이션 상호 작용할 때 전체 페이지를 새로 고치지 않고, 필요한 데이터만 서버와 교환하여 동적으로 콘텐츠를 업데이트하는 웹 애플리케이션 구조입니다.&lt;/li&gt;
&lt;li&gt;Vue를 JSP와 비교해서 예를 들면,
&lt;ul&gt;
&lt;li&gt;Vue App
&lt;ul&gt;
&lt;li&gt;JSP 페이지 하나와 동일.&lt;/li&gt;
&lt;li&gt;컴포넌트들의 모임.&lt;/li&gt;
&lt;li&gt;여러 JSP로 분리시켜서 include한다면 include 지시어가 명시된 root 페이지가 app&lt;/li&gt;
&lt;li&gt;정확하게는 다름. JSP는 Component 단위별로 분리하는 것이 아니라 head, footer, 공통 스크립트 등으로 분리하는 경우가 많음.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vue Component
&lt;ul&gt;
&lt;li&gt;공통 컴포넌트.&lt;/li&gt;
&lt;li&gt;분리된 JSP.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;web-api-web-component&#34;&gt;Web API: Web Component&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기능들을 나머지 코드로부터 캡슐화하여 재사용 가능한 커스텀 엘리먼트를 생성하고 웹 앱에서 활용할 수 있도록 해주는 다양한 기술들의 모음입니다.&lt;/li&gt;
&lt;li&gt;Web 생태계에서 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Client-side_APIs&#34;&gt;표준적으로 사용&lt;/a&gt;되기 때문에 React, Vue와 같은 프레임워크에 종속되지 않습니다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API&#34;&gt;Web APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pwa-progressive-web-apps&#34;&gt;PWA (Progressive Web Apps)&lt;/h2&gt;
&lt;p&gt;단일 코드베이스로 모든 기기의 모든 웹 사용자에게 도달하는 동시에 향상된 기능을 제공하기 위해 최신 API로 빌드되고 향상된 웹 앱입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;캐시된 페이지를 기반으로 오프라인에서도 동작할 수 있습니다.&lt;/li&gt;
&lt;li&gt;웹 앱이지만 모바일 앱처럼 설치할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ssg-static-site-generation&#34;&gt;SSG (Static Site Generation)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Gatsby(Javascript), Hugo(Go), Jekyll(Ruby)&lt;/li&gt;
&lt;li&gt;주로 템플릿을 활용해서 정적 웹 페이지를 생성 후 웹 서버로 서빙합니다.&lt;/li&gt;
&lt;li&gt;DB가 필요없는 경우 사용합니다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://markruler.github.io/&#34;&gt;블로그&lt;/a&gt;나 &lt;a href=&#34;https://beott.kr/&#34;&gt;웹진&lt;/a&gt;, 혹은 회사 소개 페이지 등에 사용할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cms-content-management-system&#34;&gt;CMS (Content Management System)&lt;/h1&gt;
&lt;p&gt;웹사이트나 애플리케이션의 콘텐츠를 생성, 수정, 관리, 출판할 수 있는 시스템입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;구축되면 개발자가 아닌 사람도 쉽게 글을 작성할 수 있습니다.&lt;/li&gt;
&lt;li&gt;잼스택(JAMStack)
&lt;ul&gt;
&lt;li&gt;DB 없이 JavaScript, API, Markup을 기반으로 하는 웹 아키텍처입니다.&lt;/li&gt;
&lt;li&gt;내 블로그처럼 Hugo로 빌드한 웹 사이트를 GitHub Pages로 배포한 것도 JAMStack에 해당합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DB 사용
&lt;ul&gt;
&lt;li&gt;스트라피(Strapi), 워드프레스(WordPress), 줌라(Joomla), 드루팔(Drupal)&lt;/li&gt;
&lt;li&gt;CMS를 위한 별도 DB와 서버를 사용합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;micro-frontend-architecture-mfa&#34;&gt;Micro Frontend Architecture (MFA)&lt;/h1&gt;
&lt;p&gt;각 &amp;lsquo;마이크로-프론트엔드&amp;rsquo;는 독립적으로 개발 및 배포가 가능합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각자 다른 기술 스택을 사용할 수도 있습니다.&lt;/li&gt;
&lt;li&gt;대규모 프로젝트에서 서로 다른 팀들이 각각의 프론트엔드 파트를 개발하는 데 적합합니다.&lt;/li&gt;
&lt;li&gt;하나의 app(페이지)에 여러 app 혹은 component가 포함됩니다.&lt;/li&gt;
&lt;li&gt;혹은 하나의 프로젝트에 여러 app이 포함됩니다.
&lt;ul&gt;
&lt;li&gt;어떤 페이지는 JSP, 어떤 페이지는 React, 어떤 페이지는 Vue.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;아일랜드-아키텍쳐-island-architecture&#34;&gt;아일랜드 아키텍쳐 Island Architecture&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;웹페이지의 필요에 따라 일부는 SSG로 렌더링하고, 일부는 Progressive Hydration(Re-hydration)합니다.
&lt;ul&gt;
&lt;li&gt;필요할 때만 자바스크립트를 로드하여 성능을 최적화합니다.&lt;/li&gt;
&lt;li&gt;전체 페이지가 아니라 개별 컴포넌트 단위로 자바스크립트를 실행해 불필요한 코드 로드를 방지합니다.&lt;/li&gt;
&lt;li&gt;하나의 app(페이지)에 여러 프레임워크의 Component가 있을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;대표적으로 Astro, Ebay의 Marko 같은 도구가 Island Architecture를 지원합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;웹뷰webview---모바일-앱에서&#34;&gt;웹뷰(WebView) - 모바일 앱에서&lt;/h1&gt;
&lt;p&gt;웹뷰란 네이티브 앱에 내재되어 있는 웹 브라우저입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;특별한 경우가 아니라면 앱 스토어의 검수를 받을 필요가 없기 때문에 자주 업데이트 할 수 있습니다.&lt;/li&gt;
&lt;li&gt;네이티브 앱은 서버에서 웹 페이지를 응답 받을 필요없이 디바이스에서 바로 렌더링합니다. 반면 웹뷰는 서버에서 웹 페이지를 받아야 하기 때문에 레이턴시가 발생합니다.&lt;/li&gt;
&lt;li&gt;네이티브 앱은 수정 사항을 배포할 때 앱 스토어의 검수가 필요합니다. (약 1~3일 소요)&lt;/li&gt;
&lt;li&gt;웹뷰만으로 구성된 앱은 스토어 심사가 어려울 수도 있습니다.&lt;/li&gt;
&lt;li&gt;추가로 고려해야 할 부분: 웹뷰 간 이동, 웹뷰-네이티브 간 이동, 뒤로가기 제스처나 버튼, DeepLink&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;더-읽을거리&#34;&gt;더 읽을거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://patterns-dev-kr.github.io/&#34;&gt;모던 웹 앱 디자인 패턴&lt;/a&gt; | Patterns.dev.kr
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patterns.dev/&#34;&gt;origin&lt;/a&gt; | Patterns.dev&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CMS
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/pinkfong/strapi-1%EB%85%84%EC%9D%B4%EB%A9%B4-%ED%92%80%EC%8A%A4%ED%83%9D%EC%9D%84-%EC%9D%8A%EB%8A%94%EB%8B%A4-part-1-2-5641f5651097&#34;&gt;Strapi 1년이면 풀스택을 읊는다&lt;/a&gt; | 더핑크퐁컴퍼니&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PWA
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.dev/articles/what-are-pwas&#34;&gt;What are Progressive Web Apps?&lt;/a&gt; | web.dev&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web Components
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/API/Web_components&#34;&gt;Web Components&lt;/a&gt; | MDN Web Docs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/API/Web_components/Using_custom_elements&#34;&gt;Using custom elements&lt;/a&gt; | MDN Web Docs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/API/Web_components/Using_shadow_DOM&#34;&gt;Using shadow DOM&lt;/a&gt; | MDN Web Docs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots&#34;&gt;Using templates and slots&lt;/a&gt; | MDN Web Docs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ui.toast.com/posts/ko_20171215&#34;&gt;웹 컴포넌트(5) - lit-html로 React 처럼 코딩하기&lt;/a&gt; | TOAST UI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;아일랜드 아키텍쳐
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://patterns-dev-kr.github.io/rendering-patterns/the-island-architecture/&#34;&gt;The Island Architecture&lt;/a&gt; | Patterns.dev.kr&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;웹뷰
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.tosspayments.com/resources/glossary/webview&#34;&gt;웹뷰(WebView)&lt;/a&gt; | Toss Payments 용어 사전&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/4UD4EB00AME&#34;&gt;아니, 여기도 웹뷰였어요?&lt;/a&gt; | 2024 당근 테크 밋업&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://boostbrothers.github.io/hospital-detail-webview/&#34;&gt;병원 상세 웹뷰 통신 및 크로스 브라우징&lt;/a&gt; | BBROS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://markruler.github.io/posts/web/respond-web-page/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>Facebook은 경쟁사의 암호화된 모바일 앱 트래픽을 어떻게 가로챘을까?</title>
        <link>https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/</link>
        <pubDate>Thu, 12 Sep 2024 00:17:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/</guid>
        <description>임창수 https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/ -&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doubleagent.net/onavo-facebook-ssl-mitm-technical-analysis/&#34;&gt;How did Facebook intercept their competitor&amp;rsquo;s encrypted mobile app traffic?&lt;/a&gt;
| &lt;a href=&#34;https://x.com/haxrob&#34;&gt;HaxRob&lt;/a&gt;, 2024년 4월 14일&lt;/li&gt;
&lt;li&gt;저자의 허락을 받고 번역했습니다.&lt;/li&gt;
&lt;li&gt;각주는 역주입니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;이 글은 페이스북(Facebook) 집단 소송에서 밝혀진 정보를 바탕으로 한 기술 조사입니다.
페이스북은 경쟁사의 정보를 얻기 위해 Onavo Protect 앱이 실행 중인 사용자 기기에서 암호화된 트래픽을 도청했었다는 이유로 재판이 진행 중입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/network/onavo-facebook-ssl-mitm-technical-analysis/fbdark-1.webp&#34; alt=&#34;How did Facebook intercept their competitor&amp;rsquo;s encrypted mobile app traffic?&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024년 7월 28일 - 👋Hello &lt;a href=&#34;https://news.ycombinator.com/item?id=41090304&#34;&gt;Hackernews&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;현재 메타(Meta)를 상대로 한 집단 소송이 진행 중이며,
법원 문서에 따르면* 메타가 &lt;a href=&#34;https://en.wikipedia.org/wiki/Electronic_Communications_Privacy_Act&#34;&gt;도청법(Wiretap Act)&lt;/a&gt;을 위반했을 가능성이 있다고 언급되어 있습니다.
이 글에서의 분석은 &lt;a href=&#34;https://www.documentcloud.org/documents/24520332-merged-fb&#34;&gt;법원 문서&lt;/a&gt; 내용과
안드로이드(Android) 용 Onavo Protect 앱 패키지의 아카이브된 버전을 리버스 엔지니어링한 결과를 바탕으로 하고 있습니다.&lt;/p&gt;
&lt;p&gt;법원 문서에 따르면, 페이스북이 사용자의 암호화된 HTTPS 트래픽을 가로채기 위해
&lt;a href=&#34;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&#34;&gt;중간자 공격(MITM)&lt;/a&gt;으로 간주될 수 있는 방법을 사용했다고 합니다.
페이스북은 이 기술을 &amp;ldquo;ssl bump&amp;quot;라고 불렀으며,
이는 &lt;a href=&#34;https://www.squid-cache.org/&#34;&gt;Squid 캐싱&lt;/a&gt; 프록시 소프트웨어의 transparent proxy &lt;a href=&#34;https://www.squid-cache.org/Doc/config/ssl_bump/&#34;&gt;기능 (ssl_bump)&lt;/a&gt;에서 유래된 이름입니다.
해당 기술은 스냅챗(Snapchat), 유튜브(YouTube), 아마존(Amazon)의 특정 도메인을 (추정컨대) 복호화하는 데 사용되었다고 합니다.
이 사건에 대한 추가 배경 정보는 최근 &lt;a href=&#34;https://techcrunch.com/2024/03/26/facebook-secret-project-snooped-snapchat-user-traffic/&#34;&gt;TechCrunch&lt;/a&gt; 기사를 읽어볼 것을 권장합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[2024-07-28] - 이는 &lt;a href=&#34;https://techcrunch.com/2019/01/29/facebook-project-atlas/&#34;&gt;2019년에 TechCrunch가 공개한&lt;/a&gt; 내용과 다릅니다.
당시 페이스북은 10대 청소년들에게 사용 습관 데이터를 수집하기 위해 돈을 지불했고,
그 결과 Onavo 앱은 앱 스토어에서 삭제되고 &lt;a href=&#34;https://www.accc.gov.au/media-release/20m-penalty-for-meta-companies-for-conduct-liable-to-mislead-consumers-about-use-of-their-data&#34;&gt;벌금이 부과되었습니다&lt;/a&gt;.
이번에 새롭게 밝혀진 중간자 공격(MITM) 정보와 관련하여, 현재 명확하지 않은 점은 모든 앱 사용자의 트래픽이 &amp;ldquo;가로채기&amp;rdquo; 되었는지, 아니면 일부 사용자만 해당되었는지입니다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;*한 HN 사용자는 다음과 같이 &lt;a href=&#34;https://news.ycombinator.com/item?id=41091505&amp;amp;ref=doubleagent.net&#34;&gt;명확히 합니다&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
&amp;ldquo;이것은 도청법 위반 소송이 아닙니다. 독점 금지 소송으로, 청구 내용은 모두 셔먼법&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 위반에 관한 것입니다.
원고 측 변호사들이 자료 조사 과정에서 페이스북이 도청법을 위반했을 가능성이 있다는 증거를 &lt;em&gt;우연히&lt;/em&gt; 발견했습니다.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/07/image-1.png&#34; alt=&#34;Case 3:20-cv-08570-JD Document 735 Filed 03/23/24 Page 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;*Case 3:20-cv-08570-JD Document 735 Filed 03/23/24 Page 1&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이 글은 제한적이고 부분적인 정보로 인해 일부 사실이 부정확하거나 불완전할 수 있습니다.
따라서 수정이 필요하거나 새로운 사실이 발견될 경우 이 글은 업데이트될 수 있습니다.
새로운 콘텐츠를 받아보고 싶으시면 &lt;a href=&#34;https://doubleagent.net/onavo-facebook-ssl-mitm-technical-analysis/&#34;&gt;저자의 블로그&lt;/a&gt;를 구독하시거나
&lt;a href=&#34;https://twitter.com/haxrob&#34;&gt;저자의 X&lt;/a&gt;를 팔로우하세요.&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%EA%B0%9C%EC%9A%94&#34;&gt;개요&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%8F%99%EA%B8%B0&#34;&gt;동기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%B6%84%EC%84%9D&#34;&gt;분석&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ca-%EC%9D%B8%EC%A6%9D%EC%84%9C&#34;&gt;CA 인증서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%ED%95%B5%EC%8B%AC-%EC%A7%88%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EB%8F%8C%EC%95%84%EA%B0%80%EC%84%9C&#34;&gt;핵심 질문으로 돌아가서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%98%90-%EB%AC%B4%EC%97%87%EC%9D%B4-%EC%9E%88%EC%9D%84%EA%B9%8C%EC%9A%94&#34;&gt;또 무엇이 있을까요?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%EB%A7%88%EB%AC%B4%EB%A6%AC&#34;&gt;마무리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.androidrank.org/application/onavo_protect_from_facebook/com.onavo.spaceship&#34;&gt;1,000만 건&lt;/a&gt;이 넘는
안드로이드 설치를 기록한 &lt;a href=&#34;https://apkpure.com/onavo-protect-from-facebook/com.onavo.spaceship&#34;&gt;Onavo Protect 안드로이드 앱&lt;/a&gt;에는
기기의 사용자 신뢰 저장소(user trust store)에 &amp;ldquo;Facebook Research&amp;quot;에서 발급한 CA(인증 기관) 인증서를 설치하도록 유도하는 코드가 포함되어 있었습니다.
이 인증서는 페이스북이 TLS 트래픽을 복호화하기 위해 필요했습니다.&lt;/li&gt;
&lt;li&gt;2016년에 배포된 일부 구 버전 앱에는 embedded assets으로 Facebook Research CA 인증서가 포함되어 있습니다.
그 중 하나의 인증서는 2027년까지 유효합니다.
법원 문서의 자료 조사 내용에 따르면, 인증서는 &amp;ldquo;서버에서 생성되어 기기로 전송된다&amp;quot;고 명시되어 있습니다.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;ssl bump&amp;rdquo; 기능이 Protect 앱에 도입된 직후, 최신 버전의 안드로이드가 출시되었으며,
이 버전에는 향상된 보안 제어 기능이 포함되어 있어 이 방법이 최신 운영체제를 사용하는 기기에서는 더 이상 작동하지 않게 되었습니다.&lt;/li&gt;
&lt;li&gt;이전 스냅챗 앱을 검토한 결과, 해당 앱의 분석 도메인(analytics domain)은 인증서 고정&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;을 적용하지 않았음을 알 수 있었습니다.
이는 중간자 공격(MITM) 또는 &amp;ldquo;ssl bumping&amp;quot;이 앞서 설명한 대로 작동했을 가능성이 있음을 의미합니다.&lt;/li&gt;
&lt;li&gt;사용자가 부여한 권한을 악용하여 다른 앱의 사용 통계를 수집하는 핵심 기능 외에도,
모바일 가입자 &lt;a href=&#34;https://en.wikipedia.org/wiki/International_mobile_subscriber_identity&#34;&gt;IMSI&lt;/a&gt;와 같은
민감한 데이터를 수집하는 의심스러운 기능이 추가로 있는 것으로 보입니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아마도 구성은 다음 그림과 비슷했을 것입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/fb1-3-1.png&#34; alt=&#34;An interpretation of FB&amp;rsquo;s setup based on court documents and app analysis&#34;&gt;&lt;/p&gt;
&lt;p&gt;신뢰할 수 있는 인증서가 기기에 설치되어 있으며,
디바이스의 모든 트래픽이 VPN을 통해 페이스북이 관리하는 인프라로 전송되고,
트래픽은 &amp;lsquo;ssl bump&amp;rsquo; 기능이 설정된 transparent proxy&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;로 구성된 Squid 캐싱 프록시로 리다이렉션됩니다.
문서에 따르면 스냅챗, 아마존, 유튜브에 속한 다양한 도메인들이 관심 대상이었습니다.
다른 사용자 트래픽이 가로채졌는지 아니면 단순히 프록시 처리만 되었는지는 알 수 없습니다.
이러한 정보는 아카이브된 Onavo Protect 앱을 살펴봐도 얻을 수 없으며,
현재로서는 공개된 법원 문서에 의존할 수밖에 없습니다.&lt;/p&gt;
&lt;p&gt;시간이 지나면서 transparent TLS 프록시를 사용하는 그들의 전략은
안드로이드의 보안 제어(security controls)가 개선됨에 따라 성공률이 감소하고 있었습니다.
또한 인증서 고정의 도입도 문제가 된다고 했습니다.
이에 대한 대안으로 페이스북은 접근성(Accessibility) API를 사용하는 방안을 고려하고 있었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/image-14.png&#34; alt=&#34;Page 3 - Case 3:20-cv-08570-JD Document 736&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Page 3 - Case 3:20-cv-08570-JD Document 736&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;구글(Google)이 자사의 운영 체제에서 접근성 기능 사용에 대해 다음과 같이 말하고 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;장애가 있는 사람들이 기기에 접근하거나 그들의 장애로 인한 문제를 해결하는 데 도움을 주기 위해 설계된 서비스만이 접근성 도구로 선언될 자격이 있습니다.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;장애가 있는 사람들을 지원하기 위해 설계된 기능을 경쟁 우위를 위해 악용하려는 기업이 있다는 것을 짐작할 수 있습니다.
Android 접근성 기능의 남용은 주로
&lt;a href=&#34;https://blog.pradeo.com/accessibility-services-mobile-analysis-malware&#34;&gt;뱅킹 멀웨어&lt;/a&gt;와 같은 악성 애플리케이션에 의해 발생하는 것으로 알려져 있습니다.&lt;/p&gt;
&lt;h1 id=&#34;동기&#34;&gt;동기&lt;/h1&gt;
&lt;p&gt;마크 주커버그(Mark Zuckerberg)는 스냅챗에서 &amp;ldquo;&lt;em&gt;신뢰할 수 있는 분석&lt;/em&gt;&amp;ldquo;의 필요성을 언급합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/image-4.png&#34; alt=&#34;Mark Zuckerberg PX2255&#34;&gt;&lt;/p&gt;
&lt;p&gt;해결책은? &amp;ldquo;&lt;em&gt;특정 하위 도메인의 트래픽을 가로채기 위해 iOS 및 Android에 설치할 수 있는 키트&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/size/w1000/2024/04/image-6.png&#34; alt=&#34;Danny Ferrante&#34;&gt;&lt;/p&gt;
&lt;p&gt;제 생각에는 특정 도메인의 트래픽을 가로채기 위해 Onavo Protect VPN 앱을 활용하는 것 외에도
핵심 기술을 리브랜딩하여 다른 애플리케이션에 배포하려는 의도가 있었습니다.
페이스북은 2013년에 약 1억 2천만 달러에 Onavo를 &lt;a href=&#34;https://techcrunch.com/2013/10/13/facebook-buys-mobile-analytics-company-onavo-and-finally-gets-its-office-in-israel/&#34;&gt;인수했으며&lt;/a&gt;
이 기술을 잘 활용할 필요가 있었습니다.
이 가격은 사람들이 사용하는 휴대폰과 태블릿에서 경쟁사 정보를 얻는 능력에 대해 그들이 얼마나 높은 가치를 두었는지 명확하게 보여줍니다.&lt;/p&gt;
&lt;p&gt;iOS 버전에 대한 &lt;a href=&#34;https://medium.com/@chronic_9612/notes-on-analytics-and-tracking-in-onavo-protect-for-ios-904bdff346c0&#34;&gt;이전 연구&lt;/a&gt;에서는
Onavo VPN 앱이 아이폰(iPhone)에서 일부 사용 정보를 수집하고 있었음을 지적하고 있습니다.
안드로이드에서는 이 앱이 사용자에게 앱 데이터 사용량을 보여준다는 명목으로 부여된 권한을 활용하여
사용자 기기에서 훨씬 더 세밀한 통계를 수집하고 있음을 확인할 수 있습니다(아래에 포함된 영상에서 이 모습이 어떻게 나타났는지 확인할 수 있습니다).
그러나 이것만으로는 충분하지 않았고, 페이스북은 한 걸음 더 나아가
특정 경쟁사의 분석 도메인으로 향하는 암호화된 트래픽을 가로채어 &amp;ldquo;&lt;strong&gt;인앱 액션(in-app actions)&lt;/strong&gt;&amp;ldquo;에 대한 데이터를 얻으려 했습니다.&lt;/p&gt;
&lt;p&gt;그들이 해야 할 일은 사용자가 사용자 휴대폰의 신뢰 저장소(trust store)에 커스텀 인증서를 설치하도록
(그리고 특정 안드로이드 버전을 사용)하는 것뿐이었습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;도청 정보는 새로운 것이며, 이전에 발생한 사건과 혼동해서는 안 됩니다.&lt;br&gt;
&lt;br&gt;
&lt;a href=&#34;https://www.accc.gov.au/media-release/20m-penalty-for-meta-companies-for-conduct-liable-to-mislead-consumers-about-use-of-their-data&#34;&gt;ACCC&lt;/a&gt;에 따르면,
2023년에 페이스북의 두 자회사는 호주 연방법원으로부터
&amp;ldquo;호주 소비자법을 위반하여 오해를 일으킬 수 있는 행위를 한&amp;rdquo; 혐의로 총 2천만 호주달러의 벌금이 부과되었습니다.&lt;br&gt;
&lt;br&gt;
페이스북은 2019년에 Onavo를 폐쇄했는데, 이는 청소년들이 앱을 사용하도록 유도하여
그들의 활동을 추적하고 있었다는 &lt;a href=&#34;https://techcrunch.com/2019/01/29/facebook-project-atlas/&#34;&gt;조사&lt;/a&gt;가 밝혀졌기 때문입니다.
또한 그해 애플(Apple)은 &lt;a href=&#34;https://web.archive.org/web/20220609072355/https://www.vox.com/2019/1/30/18203231/apple-banning-facebook-research-app&#34;&gt;페이스북의 개발자 프로그램 인증서를 철회하는&lt;/a&gt;
강력한 조치를 취해 분명한 메시지를 전달했습니다.&lt;br&gt;
&lt;br&gt;
서비스 종료된 앱이지만, 이 글에서 제공하는 기술적 인사이트를 얻을 수 있는 오래된 버전의 앱을 찾을 수 있었습니다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;분석&#34;&gt;분석&lt;/h1&gt;
&lt;p&gt;최종 사용자 디바이스의 웹사이트와 애플리케이션은 디바이스 내 신뢰 저장소에 저장된 public 인증서를 통해 HTTPS/TLS를 사용하는 원격 웹사이트나 서버를 신뢰합니다.
이러한 &amp;ldquo;인증 기관(CA)&amp;rdquo; 인증서는 애플리케이션이 신뢰할 수 있는 상대방과 통신하고 있음을 확인해 주는 &amp;ldquo;신뢰 앵커(trust anchor)&amp;rdquo; 역할을 합니다.
이 인증서는 일반적으로 운영 체제에 의해 배포되고 저장됩니다.
신뢰 저장소에 자체 서명한 인증서(self-signed certificate)를 추가하면 암호화된 TLS 트래픽을 가로챌 수 있습니다.
기업은 직원의 디바이스에서 나가는 트래픽(outbound traffic)을 검사하기 위해 이 방법을 사용할 수 있으며, 보안 테스터들도 자신의 기기에서 이를 활용할 수 있습니다.
이러한 것들은 모두 적법한 작업입니다.
여기서 중요한 질문은 페이스북이 한 행위가 적법했냐는 것입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;페이스북이 도청을 위해 사용했다고 알려진 소프트웨어의 문서에 다음과 같은 경고가 포함되어 있다는 점은 약간 아이러니합니다.&lt;br&gt;
&lt;br&gt;
&amp;ldquo;&lt;em&gt;HTTPS는 사용자에게 개인정보보호 및 보안을 제공하기 위해 설계되었습니다.
사용자 동의나 인지 없이 HTTPS 터널을 복호화하는 것은 윤리 규범을 위반할 수 있으며,
관할 지역에서 불법일 수 있습니다.&lt;/em&gt;&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;아이폰의 iOS와 달리 구글은 대부분의 모바일 애플리케이션에서 신뢰할 수 있는 CA 인증서를 설치하기가 매우 어렵도록 수많은 변경 사항을 적용했습니다.
2020년 9월에 출시된 안드로이드 11에서는 앱이 사용자에게 인증서를 설치하라는 메시지를 표시하는 메커니즘을 완전히 차단했습니다.
그리고 어떤 애플리케이션도 기본적으로 사용자 저장소에 있는 인증서를 신뢰하지 않습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;사람들은 &amp;ldquo;&lt;em&gt;인증서 고정(Certificate Pinning)이 뭐죠? 이건 MITM을 막을 수 없었을까요?&lt;/em&gt;&amp;ldquo;라고 질문합니다.&lt;br&gt;
&lt;br&gt;
나중에 살펴보겠지만, 당시 스냅챗 앱은 분석 도메인에 대한 인증서 고정을 구현하지 않았습니다.
이는 다른 앱 도메인의 경우에도 마찬가지일 것입니다.
따라서 페이스북은 경쟁사의 이러한 기술적 제한/실수를 이용한 것으로 보입니다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;현재는 2016년부터 2019년까지 페이스북이 했던 일을 하는 것은 기술적으로 불가능합니다.
하지만 그들은 어떻게 해냈을까요?
다행히도 우리는 안드로이드와 Play 스토어 생태계를 통해 오래된 안드로이드 앱 패키지를 종종 찾을 수 있습니다.&lt;/p&gt;
&lt;p&gt;먼저 테스트 단말기에 Onavo 앱을 설치하여 사용자가 앱과 어떻게 상호 작용하는지 확인했습니다.
VPN 연결이 작동하지 않고 실제 백엔드 서비스가 중단된 상태입니다.
하지만 이 애플리케이션이 사용자에게 여러 권한을 강제로 허용하도록 어떻게 강제하는지 엿볼 수 있었습니다.&lt;/p&gt;
&lt;p&gt;&lt;video
src=&#34;https://doubleagent.net/content/media/2024/04/zszPzD8NSHAFb9W1.mp4&#34;
controls&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;여기서 우리가 확인할 수 있는 것은 사용자 &amp;lsquo;보호&amp;rsquo;를 제공한다는 구실로 요구하는 2가지 특정 권한이 문제가 된다는 점입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다른 앱 위에 표시 (Display over other apps)&lt;/li&gt;
&lt;li&gt;과거 및 삭제된 앱 사용 내역에 액세스 (Access past and deleted app usage)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;앱에서 사용하는 모바일 데이터의 양을 표시하려면 이 권한이 필요합니다.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;그들이 설명하지 않은 것은 이 기능이 앱을 설치한 사용자를 위한 것이 아니라 실제로는 Onavo/Facebook을 위한 것이라는 점입니다.
이러한 정보는 매우 가치가 있으며, 이는 페이스북이 인수에 지불한 1억 2천만 달러라는 금액만 보더라도 알 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GJpCkIEbkAAsckm?format=jpg&amp;amp;name=small&#34; alt=&#34;Onavo App Permissions&#34;&gt;&lt;/p&gt;
&lt;p&gt;안드로이드 매니페스트(manifest)에는 &lt;code&gt;uses-permission&lt;/code&gt; 지시어인 &lt;code&gt;android.permission.PACKAGE_USAGE_STATS&lt;/code&gt;가 포함되어 있으며,
이는 위 스크린샷에서 우리가 동의한 권한입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GJptvfla8AA0rVZ?format=png&amp;amp;name=medium&#34; alt=&#34;PACKAGE_USAGE_STATS&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;애플리케이션 통계&amp;rdquo; 기능(원래의 핵심 기능으로 추정됨)을 계속 살펴보면,
모바일 기기의 로컬 데이터베이스 스키마를 덤프하면 기기가 실제로 수집한 데이터를 정확히 파악할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GJpyTakbIAAeD_A?format=png&amp;amp;name=large&#34; alt=&#34;collecting on the device&#34;&gt;&lt;/p&gt;
&lt;p&gt;대개 다른 애플리케이션의 사용 통계와 네트워크 트래픽 사용량만 얻을 수 있었던 것으로 보입니다.
이것은 여전히 다소 높은 수준의 통계이며, 법원 문서의 이메일 중 하나에서 암시된 것처럼 마크 주커버그가 원했던 세부 사항에는 미치지 못했습니다.
반면에 다양한 경쟁사의 분석 도메인으로 향하는 실제 암호화된 트래픽을 가로챌 수 있다면 목적을 달성할 수 있었을 것입니다.
이를 위해 페이스북은 어떻게든 기기에 CA 인증서를 설치해야 했습니다.&lt;/p&gt;
&lt;p&gt;하지만 인증서 설치를 요청하는 메시지(prompt)는 나타나지 않았습니다.
이는 VPN이 원격 서비스에 성공적으로 연결되지 않았기 때문이며, 이는 전제 조건인 것으로 보입니다.
시간이 나거나 관심이 생기면 인증서 설치 메시지를 어떻게 활성화할 수 있는지 다시 확인해볼 생각입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/size/w1000/2024/04/GJo--s8aQAAYwtL.png&#34; alt=&#34;Connections timing out, and a tcpdump shows that all traffic from the device is dropped after the VPN connection is initiated&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ca-인증서&#34;&gt;CA 인증서&lt;/h2&gt;
&lt;p&gt;앱을 디컴파일해보니 해당 기능이 존재하는 것을 확인할 수 있었습니다.
다음 이미지에서 하이라이트된 메서드는 &lt;code&gt;KeyChain.createInstallIntent()&lt;/code&gt;를 호출하여 인증서를 설치합니다.
여기서 &amp;ldquo;Facebook Research&amp;quot;라는 이름으로 사용자에게 권한을 요청하는 팝업이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/GJpP7rmaAAAQDKI.png&#34; alt=&#34;KeyChain.createInstallIntent&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;KeyChain.createInstallIntent()&lt;/code&gt;는 Android 7(Nougat)에서 &lt;a href=&#34;https://commonsware.com/R/pages/chap-security-004.html&#34;&gt;더 이상 작동하지 않게 되었습니다&lt;/a&gt;.
사용자가 인증서를 수동으로 설치해야 합니다.
이제 Facebook의 CA 인증서를 앱 내에서 직접 설치하는 것은 불가능해졌습니다.&lt;/p&gt;
&lt;p&gt;Android 7에서 주목할 만한 또 다른 변경 사항은 &lt;a href=&#34;https://developer.android.com/privacy-and-security/security-config&#34;&gt;Android 문서&lt;/a&gt;에 따르면 다음과 같습니다(강조는 필자).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;기본적으로 모든 앱의 보안 연결(TLS 및 HTTPS와 같은 프로토콜 사용)은 사전 설치된 시스템 CA를 신뢰하며, &lt;strong&gt;Android 6.0(API 레벨 23) 이하를 대상으로 하는 앱은 기본적으로 사용자가 추가한 CA 저장소도 신뢰합니다&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;즉, Android Marshmallow(Android 6)와 그 이전 버전에서는 다른 앱들이 사용자 저장소에 있는 인증서를 신뢰했지만,
2016년 8월 22일에 출시된 Android 7부터는 앱의 매니페스트 파일에 보안 구성(security configuration)이 있는 경우를 제외하고는 다른 앱에서 더 이상 이를 신뢰하지 않게 되었습니다.&lt;/p&gt;
&lt;p&gt;Android 7의 또 다른 개선 사항은 기기를 완전히 루팅하지 않는 한 어떤 방법으로도 시스템 저장소에 인증서를 설치할 수 없게 되었다는 점입니다.&lt;/p&gt;
&lt;p&gt;어쨌든 이 기능은 이전 버전과 최신 버전 모두에 남아 있었으며, 2019년에 마지막으로 게시된 앱까지 유지되었습니다.
실제 MITM 인증서는 2017년에 제거되었습니다.
법원 문서에서 이에 대한 그럴듯한 이유를 확인할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;SSL bump에 사용되는 키는 어디에서 생성되며, 어떻게 남용으로부터 보호되나요?
(예: 기기에서 생성되어, 해당 기기에만 사용되고, 기기를 벗어나지 않는지, 혹은 앱과 함께 다운로드되어 설치되는 공유 키가 있는지)&lt;/em&gt;&lt;br&gt;
&lt;br&gt;
&lt;strong&gt;인증서는 서버에서 생성되어 기기로 전송됩니다.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/image-15.png&#34; alt=&#34;Page 3 - Case 3:20-cv-08570-JD Document 736&#34;&gt;&lt;/p&gt;
&lt;p&gt;따라서 2019년 이전의 훨씬 더 오래된 버전으로 돌아가야 하며, 특히 2017년 9월 버전이 필요합니다.
이 버전에서는 &amp;ldquo;&lt;code&gt;old_ca.cer&lt;/code&gt;&amp;ldquo;와 &amp;ldquo;&lt;code&gt;new_ca.cer&lt;/code&gt;&amp;ldquo;라는 이름의 인증서가 &lt;code&gt;assets&lt;/code&gt;에 포함되어 있습니다.
관련 코드는 &lt;code&gt;ResearchCertificateManager&lt;/code&gt; 클래스에서 찾을 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/image-7.png&#34; alt=&#34;ResearchCertificateManager&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.apk&lt;/code&gt; 파일을 zip 파일로 압축 해제할 경우 이 파일들은 &lt;code&gt;assets&lt;/code&gt; 폴더 아래에서 찾을 수 있습니다.
이는 JADX에서 확인되었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/image-9.png&#34; alt=&#34;assets folder&#34;&gt;&lt;/p&gt;
&lt;p&gt;또한, 인증서가 설치되었는지 여부를 확인하는 루틴도 관찰되었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/size/w1000/2024/04/image-8.png&#34; alt=&#34;check if the certificates have been installed or not&#34;&gt;&lt;/p&gt;
&lt;p&gt;그렇다면 왜 두 개의 인증서가 있을까요? (&lt;code&gt;old&lt;/code&gt;와 &lt;code&gt;new&lt;/code&gt;)
여기 한 버전의 앱에서 추출된 두 개의 인증서가 있습니다.
첫 번째 인증서를 생성한 사람은 유효 기간을 1년으로만 설정했습니다.
만약 이것이 실수였다면, 만료 전에 이를 해결한 것으로 보입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/GJq8BYsbUAAiREe.png&#34; alt=&#34;old_ca.cer&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/2024/04/GJq8JjeaAAA59Ec.png&#34; alt=&#34;new_ca.cer&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;old_va.cer(위) vs new_ca.cer(아래)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;온라인에서 모든 버전의 &lt;code&gt;.apk&lt;/code&gt; 파일을 찾을 수는 없었지만, 충분한 자료를 통해 다음과 같은 결론을 도출할 수 있었습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫 번째 인증서는 2016년 9월 8일부터 유효했으며, 이는 마크 주커버그가 스냅챗에 대한 추가 정보를 얻기 위해 요청을 보낸 시점(2016년 6월 9일자 이메일)보다 몇 달 뒤의 일입니다.&lt;/li&gt;
&lt;li&gt;두 번째 인증서는 첫 번째 인증서와 함께 추가되었으며, 2017년 6월 8일부터 유효합니다. 이 인증서는 2027년 6월 8일까지 유효합니다.&lt;/li&gt;
&lt;li&gt;최소 2027년 10월 19일부터는 인증서가 없으며, 두 번째 인증서는 앱에서 완전히 삭제되었습니다.
앞서 언급했듯이 법원 문서에 따르면 인증서는 서버에서 얻어진 것으로 설명되어 있습니다.
아카이브에서 확보한 앱들에서는 이와 관련된 기능을 아직 찾지 못했으며, 이에 대한 추가 작업이 필요합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;각각의 핑거프린트와 함께 인증서가 발견된 버전들:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GJrEPLeaEAAhjQM?format=png&amp;amp;name=900x900&#34; alt=&#34;Versions with certificates found with their respective fingerprints&#34;&gt;&lt;/p&gt;
&lt;p&gt;법원 문서에 따르면 이후 유튜브(Youtube)와 아마존(Amazon)에 대한 추가적인 도청이 있었다고 합니다.
어떤 앱에서 어떻게 도청이 이루어졌는지는 더 자세히 조사해봐야 알 수 있을 것 같습니다:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/size/w1000/2024/04/image-12.png&#34; alt=&#34;Page 2, case 3:20-cv-08570-JD Document 735&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;핵심-질문으로-돌아가서&#34;&gt;핵심 질문으로 돌아가서&lt;/h2&gt;
&lt;p&gt;완전히 인증서 고정(full certificate pinning)을 수행하는 앱은 이 기법을 방지했을 것입니다.
문제의 시기 동안 스냅챗은 일부분 인증서 고정(some certificate pinning)을 수행하고 있었지만, 모든 곳에서 적용된 것은 아니었습니다.&lt;/p&gt;
&lt;p&gt;직접 확인하기 위해 이전 버전의 스냅챗 앱을 다시 가져와서 검사할 수 있습니다.
법원 문서에서 발견된 자료에 따르면, 해당 도메인은 &lt;code&gt;sc-analytics.appspot.com&lt;/code&gt;이었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GKBeIsTbgAAdHpH?format=png&amp;amp;name=small&#34; alt=&#34;Snapchat certificate pinning&#34;&gt;&lt;/p&gt;
&lt;p&gt;그리고 이전 버전의 스냅챗 앱을 디컴파일한 결과, 이 도메인으로의 트래픽은 인증서 고정을 사용하지 않았습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GKBnQNdb0AA2M8t?format=png&amp;amp;name=medium&#34; alt=&#34;old Snapchat did not use certificate pinning&#34;&gt;&lt;/p&gt;
&lt;p&gt;앞서 논의한 것처럼, 페이스북은 안드로이드의 보안 강화 및 인증서 고정의 광범위한 도입을 인지하고 있었으며, 이에 대한 언급이 포함되어 있습니다. (이전 &lt;code&gt;Page 3 - Case 3:20-cv-08570-JD Document 736&lt;/code&gt; 참조)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;인증서 고정이 최신 기기에서 기본적으로 적용되면서, 안드로이드에서 장기적으로 SSL bump가 적용될 수 있는지 일반적인 의문이 제기되고 있습니다.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;또-무엇이-있을까요&#34;&gt;또 무엇이 있을까요?&lt;/h1&gt;
&lt;p&gt;제 눈에 띈 것은 &lt;a href=&#34;https://en.wikipedia.org/wiki/International_mobile_subscriber_identity&#34;&gt;모바일 가입자 IMSI&lt;/a&gt;를 얻으려는 요청이었습니다.
이는 매우 민감한 데이터입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GJp7AoJaQAA5E-N?format=png&amp;amp;name=medium&#34; alt=&#34;subscriber IMSI&#34;&gt;&lt;/p&gt;
&lt;p&gt;처음에는 이것이 어떻게 가능한지 궁금했는데, 당시에는 실제로 &lt;code&gt;READ_PHONE_STATE&lt;/code&gt; 권한을 통해 가능했던 것으로 보입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/GJqOvKmbwAAmL_p?format=png&amp;amp;name=medium&#34; alt=&#34;Device Identifiers&#34;&gt;&lt;/p&gt;
&lt;p&gt;물론 이는 앱의 매니페스트에 정의되어 있었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://doubleagent.net/content/images/size/w1000/2024/04/image-10.png&#34; alt=&#34;app&amp;rsquo;s manifest&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://source.android.com/docs/core/connect/device-identifiers&#34;&gt;Device identifiers | Android&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;이걸 보면 아마도 조사할 것이 더 있을 겁니다.&lt;/p&gt;
&lt;h1 id=&#34;마무리&#34;&gt;마무리&lt;/h1&gt;
&lt;p&gt;이 모든 것이 몇 년 전에 일어난 &amp;ldquo;오래된 뉴스&amp;quot;이긴 하지만,
기술적인 관점에서 보면 애플리케이션 개발자들, 심지어 페이스북 같은 회사들이 모바일 폰의 권한 모델을 얼마나 악용할 수 있었는지를 보는 것은 흥미롭습니다.&lt;/p&gt;
&lt;p&gt;그리고 CA 인증서 설치 절차를 트리거하는 루틴, 2017년 이후에 인증서가 어떻게 추가되었는지, Onavo 애플리케이션이 수집한 다른 데이터는 무엇인지 등 더 깊이 알아봐야 할 것들이 분명히 있습니다.
또한, 아이폰 버전의 애플리케이션도 찾을 수 있다면 좋을 텐데, 이를 찾을 수 있는 곳을 아는 사람이 있다면 도움이 될 것입니다.&lt;/p&gt;
&lt;p&gt;그리고 CA 설치 절차를 트리거하는 루틴, 2017년 이후에 인증서가 추가되는 방법, Onavo 애플리케이션이 수집하는 다른 항목 등 더 알아봐야 할 것이 분명히 있습니다.
또한 사본을 어디서 찾을 수 있는지 아는 사람이 있다면 아이폰 버전의 애플리케이션을 찾는 것도 좋을 것입니다.&lt;/p&gt;
&lt;p&gt;집단 소송이 흥미로운 방향으로 진행된다면, 이는 조사를 계속할 동기가 될 수 있을 것입니다.&lt;/p&gt;
&lt;p&gt;추가 업데이트를 받고 싶으시다면, &lt;a href=&#34;https://doubleagent.net/onavo-facebook-ssl-mitm-technical-analysis/&#34;&gt;원본 사이트에서 이메일 구독&lt;/a&gt;을 등록하거나
&lt;a href=&#34;https://x.com/haxrob&#34;&gt;원저자의 X&lt;/a&gt;를 팔로우하세요.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Sherman_Antitrust_Act&#34;&gt;셔먼법(Sherman Antitrust Act)&lt;/a&gt;은 미국의 반독점법이다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/azure/security/fundamentals/certificate-pinning&#34;&gt;인증서 고정(Certificate Pinning)&lt;/a&gt;은 애플리케이션이 서버와 통신할 때 사용하는 SSL/TLS 인증서의 공인된 목록을 미리 지정해 두는 보안 기법이다.
이를 통해 애플리케이션이 특정 인증서로만 서버에 연결하도록 제한한다.
이 방식은 중간자 공격(MITM)을 방지하는 데 효과적이다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.haproxy.com/glossary/what-is-a-transparent-proxy&#34;&gt;투명 프록시(transparent proxy)&lt;/a&gt;는 클라이언트와 서버 사이에 위치해서 요청과 응답을 중계하는 프록시 서버다.
뒤의 두 프록시와 달리 클라이언트의 요청을 수정하지 않고, 클라이언트 IP 주소를 HTTP 요청 헤더에 그대로 노출시키기 때문에 투명하다고 부른다.
&lt;a href=&#34;https://docs.trafficserver.apache.org/en/latest/admin-guide/configuration/transparent-forward-proxying.en.html&#34;&gt;포워드 프록시(forward proxy)&lt;/a&gt;는 클라이언트 측에서,
&lt;a href=&#34;https://www.haproxy.com/glossary/what-is-a-reverse-proxy&#34;&gt;리버스 프록시(reverse proxy)&lt;/a&gt;는 서버 측에서 중계하는 프록시 서버다.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/network/onavo-facebook-ssl-mitm-technical-analysis/ - Im Changsu | Since 2020</description>
        </item>
    
    
    
        <item>
        <title>일상에서의 스왑 메모리 (Swap Memory)</title>
        <link>https://markruler.github.io/posts/os/swap-memory/</link>
        <pubDate>Thu, 05 Sep 2024 21:13:00 +0900</pubDate>
        <author>imcxsu@gmail.com (Im Changsu)</author>
        <guid>https://markruler.github.io/posts/os/swap-memory/</guid>
        <description>임창수 https://markruler.github.io/posts/os/swap-memory/ -&lt;p&gt;&lt;strong&gt;스왑 메모리는 물리 메모리 용량이 부족할 때 사용되는 가상 메모리 영역&lt;/strong&gt;입니다.
고사양 작업 중 메모리가 부족해서 컴퓨터가 자주 멈춘다면 스왑 메모리를 늘려보는 것도 하나의 방법입니다.
이 글은 &lt;strong&gt;Ubuntu&lt;/strong&gt;에서 &lt;strong&gt;스왑 메모리를 file로 설정&lt;/strong&gt;하고, 나의 환경에 맞게 조정하기 위해 &lt;strong&gt;모니터링 하는 방법&lt;/strong&gt;을 설명합니다.&lt;/p&gt;
&lt;p&gt;먼저 스왑 메모리 설정을 확인합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapon --show
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정되어 있지 않다면 아무것도 출력되지 않습니다.
&lt;em&gt;Ubuntu 24.04 기준&lt;/em&gt;으로는 기본적으로 다음과 같이 &lt;code&gt;/swap.img&lt;/code&gt;가 설정되어 있습니다.
하지만 이 글은 설정되어 있지 않다는 전제로 진행합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME      TYPE SIZE USED PRIO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swap.img file   8G   0B   -2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;스왑-설정-file&#34;&gt;스왑 설정: file&lt;/h1&gt;
&lt;h2 id=&#34;스왑-파일-생성&#34;&gt;스왑 파일 생성&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;dd&lt;/code&gt; 명령으로 16 GiB 크기의 &lt;code&gt;/swapfile&lt;/code&gt; 이라는 파일을 생성합니다.
(파일명은 뭘로 해도 상관없습니다.)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dd &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt;=/dev/zero &lt;span style=&#34;color:#eedd82&#34;&gt;of&lt;/span&gt;=/swapfile &lt;span style=&#34;color:#eedd82&#34;&gt;bs&lt;/span&gt;=1M &lt;span style=&#34;color:#eedd82&#34;&gt;count&lt;/span&gt;=16K
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 16384+0 records in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 16384+0 records out&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 17179869184 bytes (17 GB, 16 GiB) copied, 11.2337 s, 1.5 GB/s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;swapon&lt;/code&gt; 매뉴얼에도 명시&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;되어 있지만 &lt;code&gt;fallocate&lt;/code&gt;는 사용하지 않는 것을 권장합니다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
연속된 블록에 실제 데이터를 파일에 쓰는 &lt;code&gt;dd&lt;/code&gt;와 달리 &lt;code&gt;fallocate&lt;/code&gt;는 논리적인 파일의 크기만 설정하고 데이터를 쓰지 않기 때문입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;스왑 파일은 물리 메모리가 부족할 때 디스크에 데이터를 저장하는 역할을 합니다.
그리고 파일 시스템과 커널은 스왑 파일에 데이터를 효율적으로 읽고 쓰기 위해 파일의 실제 물리적 위치가 명확한 것이 좋습니다.
물리적으로 할당되지 않은 블록을 포함할 수 있는 &lt;strong&gt;Sparse file은 파일의 논리적인 크기와 실제 디스크에 할당된 크기가 다를 수 있기 때문에&lt;/strong&gt;
스왑이 예상대로 동작하지 않을 수 있습니다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;권한-설정&#34;&gt;권한 설정&lt;/h2&gt;
&lt;p&gt;Swap 파일을 root만 읽고 쓰도록 권한을 설정합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#f60&#34;&gt;600&lt;/span&gt; /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ls -hal /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# -rw------- 1 root root 16.0G  3월  9 16:43 /swapfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;파일-형태-변경&#34;&gt;파일 형태 변경&lt;/h2&gt;
&lt;p&gt;파일 형태를 확인해보면 &lt;code&gt;data&lt;/code&gt; 파일입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo file /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /swapfile: data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Swap 파일을 Linux swap file로 설정합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mkswap /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Setting up swapspace version 1, size = 16 GiB (17179865088 bytes)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# no label, UUID=ec298bfb-0c82-4cd1-98aa-5466773f8a09&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo file /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /swapfile: Linux swap file, 4k page size, little endian, version 1, size 4194303 pages, 0 bad pages, no label, UUID=ec298bfb-0c82-4cd1-98aa-5466773f8a09&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;swap-영역-설정&#34;&gt;Swap 영역 설정&lt;/h2&gt;
&lt;p&gt;만든 Swap 파일을 swap 영역으로 설정합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapon /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;설정-확인&#34;&gt;설정 확인&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapon --show
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME      TYPE SIZE USED PRIO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swapfile file  16G   0B   -2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;사용되는 부분이 생기면 아래처럼 &lt;code&gt;USED&lt;/code&gt; 부분에 사이즈가 커집니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME      TYPE SIZE   USED PRIO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swapfile file  16G 153.3M   -2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TYPE&lt;/code&gt; : Swap 메모리의 종류
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file&lt;/code&gt;: 파일&lt;/li&gt;
&lt;li&gt;&lt;code&gt;partition&lt;/code&gt;: 디스크 파티션&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIZE&lt;/code&gt; : Swap 메모리의 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USED&lt;/code&gt; : Swap 메모리의 사용량&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PRIO&lt;/code&gt; : Swap 메모리의 우선순위. 값이 클수록 우선적으로 사용됩니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;부팅-시-자동-마운트-설정&#34;&gt;부팅 시 자동 마운트 설정&lt;/h1&gt;
&lt;p&gt;Ubuntu 24.04 기준 기본 설정값에는 &lt;code&gt;/swap.img&lt;/code&gt; 파일이 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /etc/fstab: static file system information.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Use &amp;#39;blkid&amp;#39; to print the universally unique identifier for a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# device; this may be used with UUID= as a more robust way to name devices&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# that works even if disks are added and removed. See fstab(5).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swap.img       none            swap    sw              &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(위 설정이 없다는 전제 하에)
새로 추가한 스왑 영역을 추가합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;/swapfile none swap sw 0 0&amp;#39;&lt;/span&gt; | sudo tee -a /etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;용량-늘리기&#34;&gt;용량 늘리기&lt;/h1&gt;
&lt;p&gt;스왑 메모리 크기는 시스템의 물리 메모리 용량과 사용 용도에 따라 결정됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;free -h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#                total        used        free      shared  buff/cache   available&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Mem:            31Gi        24Gi       490Mi       3.9Gi       5.8Gi       2.0Gi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Swap:          2.0Gi       1.3Gi       677Mi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;사이즈를 늘리기 전 swap에서 파일을 제거합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapoff /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;사이즈를 늘립니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 4GiB 추가&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dd &lt;span style=&#34;color:#f00&#34;&gt;if&lt;/span&gt;=/dev/zero &lt;span style=&#34;color:#eedd82&#34;&gt;of&lt;/span&gt;=/swapfile &lt;span style=&#34;color:#eedd82&#34;&gt;bs&lt;/span&gt;=1M &lt;span style=&#34;color:#eedd82&#34;&gt;count&lt;/span&gt;=4K &lt;span style=&#34;color:#eedd82&#34;&gt;oflag&lt;/span&gt;=append &lt;span style=&#34;color:#eedd82&#34;&gt;conv&lt;/span&gt;=notrunc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 4096+0 records in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 4096+0 records out&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 4.60434 s, 933 MB/s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;사이즈 늘린 것을 적용하려면 &lt;code&gt;swapon -v&lt;/code&gt; 명령어로 다시 설정해야 합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mkswap /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# mkswap: /swapfile: warning: wiping old swap signature.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Setting up swapspace version 1, size = 8 GiB (8589930496 bytes)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# no label, UUID=1516c52d-9ed8-4a52-939f-30a892aff73f&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapon -v /swapfile                                                                                                 ✭ ✱
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# swapon: /swapfile: found signature [pagesize=4096, signature=swap]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# swapon: /swapfile: pagesize=4096, swapsize=8589934592, devsize=8589934592&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# swapon /swapfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;free -h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;#                total        used        free      shared  buff/cache   available&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Mem:            31Gi        24Gi       433Mi       4.0Gi       5.8Gi       1.5Gi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Swap:          8.0Gi       1.3Gi       6.7Gi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;비활성화&#34;&gt;비활성화&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapoff /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;/etc/fstab&lt;/code&gt; 파일에서 Swap 파일 설정을 제거합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /etc/fstab&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# /swapfile none swap sw 0 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;swap-file-교체&#34;&gt;swap file 교체&lt;/h2&gt;
&lt;p&gt;만약 기존 swap file을 교체하고 싶다면 새로 생성한 파일로 swapon 후 기존 swap 파일을 swapoff 하면 swap에 올라가있던 데이터들은 자동으로 옮겨집니다.
물론 애플리케이션에 따라 유실될 수도 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapon /swap2file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# sudo swapon --show&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME       TYPE SIZE USED PRIO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swapfile  file  16G   2G   -2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swap2file file  32G   0B   -3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapoff /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# sudo swapon --show&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME       TYPE SIZE USED PRIO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/swap2file file  32G 1.5G   -2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;kubernetes에서-swap-기능을-비활성화해야-하는-이유&#34;&gt;Kubernetes에서 Swap 기능을 비활성화해야 하는 이유&lt;/h1&gt;
&lt;p&gt;가장 큰 이유는 스왑 메모리가 있다면 Kubernetes는 메모리 부족 상황을 정확하게 파악할 수 없다는 것입니다.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;strong&gt;안정성을 위해&lt;/strong&gt; 스왑 메모리를 비활성화하는 것이 좋습니다.
스왑이 자주 발생하면 디스크 입출력이 증가하면서 성능이 저하되는 문제도 있습니다.&lt;/p&gt;
&lt;h1 id=&#34;prometheus-node-exporter를-이용한-모니터링&#34;&gt;Prometheus node-exporter를 이용한 모니터링&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/markruler/node-monitoring&#34;&gt;이 리포지터리&lt;/a&gt;를 클론해서
Prometheus와 Grafana를 실행해서 모니터링 할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:2;-o-tab-size:2;tab-size:2;display:grid;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://markruler.github.io/images/os/swap-memory/grafana-prometheus-swap-memory.png&#34; alt=&#34;Node Monitoring with Prometheus and Grafana&#34;&gt;&lt;/p&gt;
&lt;p&gt;본인의 컴퓨팅 작업 시 사용량을 확인하면서 메모리 사용량이 항상 90% 이상이면 스왑 메모리를 늘리는 것을 고려해볼 수 있습니다.&lt;/p&gt;
&lt;h1 id=&#34;더-읽을거리&#34;&gt;더 읽을거리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/gorman/html/understand/understand014.html&#34;&gt;Swap Management | kernel.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://velog.io/@sjuhwan/Virtualization-101-3-1-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%98%A4%EB%B2%84%EC%BB%A4%EB%B0%8B%EA%B3%BC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%97%AC%EC%9C%A0%EA%B3%B5%EA%B0%84-%ED%99%95%EB%B3%B4-%EB%B0%A9%EB%B2%95&#34;&gt;Virtualization 101 - (3.1) 메모리 오버커밋과 메모리 여유공간 확보 방법 | 송주환&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/pull/31996&#34;&gt;kubelet swap on 체크 PR#31996&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man8/swapon.8.html#NOTES&#34;&gt;swapon(8) | Linux manual page&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://askubuntu.com/questions/927854/how-do-i-increase-the-size-of-swapfile-without-removing-it-in-the-terminal&#34;&gt;fallocatte vs. dd | StackExchange&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/31676&#34;&gt;최초 이슈 kuberenetes#31676&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
- https://markruler.github.io/posts/os/swap-memory/ - Im Changsu | Since 2020</description>
        </item>
    
    
  </channel>
</rss> 